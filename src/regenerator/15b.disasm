                                                                           
			 ; main jump table
$4000: 4C 09 40            JMP game_init

$4003: 4C D1 6C            JMP inn_combat

$4006: 4C 9F 6F            JMP initialize_arena

$4009: A9 00       game_init LDA #$00     ;#music_off
$400B: 20 20 AF            JSR music_ctl
$400E: 20 12 08            JSR j_drawinterface
$4011: A9 0D               LDA #$0D     ;#-
$4013: 85 4F               STA console_ypos
$4015: A9 18               LDA #$18     ;#-
$4017: 85 4E               STA console_xpos
$4019: A9 00               LDA #$00     ;#mode_loading
$401B: 85 1B               STA game_mode
$401D: A9 25               LDA #$25     ;#aura_none
$401F: 85 46               STA magic_aura
$4021: A9 02               LDA #$02     ;#disk_britannia
$4023: 20 42 08            JSR j_request_disk
$4026: A5 1F               LDA party_size
$4028: F0 03               BEQ load_saved_game
$402A: 4C 5C 40            JMP game_start

$402D: A9 CC       load_saved_game LDA #$CC     ;#-
$402F: A2 1A               LDX #$1A     ;#file_id_ssta ;saved_game
$4031: 20 00 A1            JSR j_fileio
$4034: A5 1F               LDA party_size
$4036: D0 18               BNE load_saved_map
$4038: 20 21 08            JSR j_primm  ;b'\nNO ACTIVE GAME!\n\x00'
$403B:                     .BYTE $8D,$CE,$CF,$A0,$C1,$C3,$D4,$C9
$4043:                     .BYTE $D6,$C5,$A0,$C7,$C1,$CD,$C5,$A1
$404B:                     .BYTE $8D,$00
$404D: 4C 4D 40    halt    JMP halt

$4050: A9 CC       load_saved_map LDA #$CC     ;#-
$4052: A2 7F               LDX #$7F     ;#file_id_smap ;saved_map
$4054: 20 00 A1            JSR j_fileio
$4057: A2 80               LDX #$80     ;#file_id_spar ;saved_party
$4059: 20 00 A1            JSR j_fileio
$405C: A9 00       game_start LDA #$00     ;#-
$405E: 85 1D               STA balloon_flying
$4060: 85 74               STA movement_mode
$4062: 85 1A               STA current_location
$4064: 85 24               STA horse_mode
$4066: A9 01               LDA #$01     ;#mode_world
$4068: 85 1B               STA game_mode
$406A: 85 75               STA direction
$406C: 20 45 08            JSR j_update_status
$406F: 20 03 08            JSR j_player_teleport
$4072: A9 FF               LDA #$FF
$4074: 85 4D               STA music_volume
$4076: A9 CF               LDA #$CF     ;#music_Overworld
$4078: 20 20 AF            JSR music_ctl
$407B: 20 4B 08    next_turn JSR j_update_view
$407E: 20 B0 62            JSR tile_effect
$4081: 20 A8 83            JSR anyone_awake
$4084: 10 03               BPL @prompt
$4086: 4C F7 40            JMP cmd_timeout

$4089: 20 21 08    @prompt JSR j_primm  ;b'\n>\x00'
$408C:                     .BYTE $8D,$1E,$00
$408F: 20 00 08            JSR j_waitkey
$4092: C9 00               CMP #$00     ;#char_none
$4094: D0 03               BNE +
$4096: 4C 06 41            JMP done_pass

$4099: C9 A0       +       CMP #$A0     ;#char_space
$409B: D0 03               BNE +
$409D: 4C 06 41            JMP done_pass

$40A0: C9 C0       +       CMP #$C0     ;#char_at_sign
$40A2: D0 03               BNE +
$40A4: 4C 3E 42            JMP cmd_direction_up

$40A7: C9 AF       +       CMP #$AF     ;#char_slash
$40A9: D0 03               BNE +
$40AB: 4C 24 43            JMP cmd_direction_down

$40AE: C9 BA       +       CMP #$BA     ;#char_colon
$40B0: D0 03               BNE +
$40B2: 4C FD 43            JMP cmd_direction_left

$40B5: C9 BB       +       CMP #$BB     ;#char_semicolon
$40B7: D0 03               BNE +
$40B9: 4C C5 44            JMP cmd_direction_right

$40BC: C9 93       +       CMP #$93     ;#char_up_arrow
$40BE: D0 1D               BNE check_cmd_alpha
                                                                           
			 ; debug print virtue levels
$40C0: 20 F7 85            JSR print_newline
$40C3: A9 00               LDA #$00     ;#-
$40C5: 85 6A               STA zp6A
$40C7: A6 6A       @next   LDX zp6A
$40C9: BD 00 AB            LDA party_stats,X
$40CC: 20 33 08            JSR j_printbcd
$40CF: E6 6A               INC zp6A
$40D1: A5 6A               LDA zp6A
$40D3: C9 08               CMP #$08     ;#virtue_last
$40D5: 90 F0               BCC @next
$40D7: 20 F7 85            JSR print_newline
$40DA: 4C 7B 40            JMP next_turn

$40DD: C9 C1       check_cmd_alpha CMP #$C1     ;#char_alpha_first
$40DF: 90 31               BCC done_what
$40E1: C9 DB               CMP #$DB     ;#char_alpha_last
$40E3: B0 2D               BCS done_what
$40E5: 38                  SEC 
$40E6: E9 C1               SBC #$C1     ;#char_alpha_first
$40E8: 0A                  ASL 
$40E9: A8                  TAY 
$40EA: B9 0A 42            LDA cmd_table,Y
$40ED: 85 7E               STA ptr1
$40EF: B9 0B 42            LDA cmd_table + 1,Y
$40F2: 85 7F               STA ptr1 + 1
$40F4: 6C 7E 00            JMP (ptr1)

$40F7: 20 21 08    cmd_timeout JSR j_primm  ;b'\n>Zzzzz\n\x00'
$40FA:                     .BYTE $8D,$1E,$DA,$FA,$FA,$FA,$FA,$8D
$4102:                     .BYTE $00
$4103: 4C 1E 62            JMP cmd_done

$4106: 20 21 08    done_pass JSR j_primm  ;b'Pass\n\x00'
$4109:                     .BYTE $D0,$E1,$F3,$F3,$8D,$00
$410F: 4C 1E 62            JMP cmd_done

$4112: 20 21 08    done_what JSR j_primm  ;b'WHAT?\n\x00'
$4115:                     .BYTE $D7,$C8,$C1,$D4,$BF,$8D,$00
$411C: A9 02       done_sound_deny LDA #$02     ;#sound_what
$411E: 20 54 08            JSR j_playsfx
$4121: 4C 1E 62            JMP cmd_done

$4124: 20 21 08    done_not_a_player JSR j_primm  ;b'NOT A PLAYER!\n\x00'
$4127:                     .BYTE $CE,$CF,$D4,$A0,$C1,$A0,$D0,$CC
$412F:                     .BYTE $C1,$D9,$C5,$D2,$A1,$8D,$00
$4136: 4C 1E 62            JMP cmd_done

$4139: 20 21 08    done_only_on_foot JSR j_primm  ;b'ONLY ON FOOT!\n\x00'
$413C:                     .BYTE $CF,$CE,$CC,$D9,$A0,$CF,$CE,$A0
$4144:                     .BYTE $C6,$CF,$CF,$D4,$A1,$8D,$00
$414B: 4C 1C 41            JMP done_sound_deny

$414E: 20 21 08    done_nothing_there JSR j_primm  ;b'NOTHING THERE!\n\x00'
$4151:                     .BYTE $CE,$CF,$D4,$C8,$C9,$CE,$C7,$A0
$4159:                     .BYTE $D4,$C8,$C5,$D2,$C5,$A1,$8D,$00
$4161: 4C 1E 62            JMP cmd_done

$4164: 20 21 08    done_slow_progress JSR j_primm  ;b'SLOW PROGRESS!\n\x00'
$4167:                     .BYTE $D3,$CC,$CF,$D7,$A0,$D0,$D2,$CF
$416F:                     .BYTE $C7,$D2,$C5,$D3,$D3,$A1,$8D,$00
$4177: 60                  RTS 

$4178: 20 21 08    done_not_here JSR j_primm  ;b'NOT HERE!\n\x00'
$417B:                     .BYTE $CE,$CF,$D4,$A0,$C8,$C5,$D2,$C5
$4183:                     .BYTE $A1,$8D,$00
$4186: 4C 1E 62            JMP cmd_done

$4189: 20 21 08    done_cant JSR j_primm  ;b"CAN'T!\n\x00"
$418C:                     .BYTE $C3,$C1,$CE,$A7,$D4,$A1,$8D,$00
$4194: 4C 1E 62            JMP cmd_done

$4197: 20 21 08    done_aborted JSR j_primm  ;b'ABORTED!\n\x00'
$419A:                     .BYTE $C1,$C2,$CF,$D2,$D4,$C5,$C4,$A1
$41A2:                     .BYTE $8D,$00
$41A4: 4C 1E 62            JMP cmd_done

$41A7: 20 45 08    done_done JSR j_update_status
$41AA: 20 21 08            JSR j_primm  ;b'DONE.\n\x00'
$41AD:                     .BYTE $C4,$CF,$CE,$C5,$AE,$8D,$00
$41B4: 4C 1E 62            JMP cmd_done

$41B7: 20 21 08    done_have_none JSR j_primm  ;b'YOU HAVE NONE!\n\x00'
$41BA:                     .BYTE $D9,$CF,$D5,$A0,$C8,$C1,$D6,$C5
$41C2:                     .BYTE $A0,$CE,$CF,$CE,$C5,$A1,$8D,$00
$41CA: 4C 1E 62            JMP cmd_done

$41CD: 20 21 08    done_disabled JSR j_primm  ;b'DISABLED!\n\x00'
$41D0:                     .BYTE $C4,$C9,$D3,$C1,$C2,$CC,$C5,$C4
$41D8:                     .BYTE $A1,$8D,$00
$41DB: 4C 1E 62            JMP cmd_done

$41DE: 20 21 08    done_blocked JSR j_primm  ;b'BLOCKED!\n\x00'
$41E1:                     .BYTE $C2,$CC,$CF,$C3,$CB,$C5,$C4,$A1
$41E9:                     .BYTE $8D,$00
$41EB: A9 01               LDA #$01     ;#sound_blocked
$41ED: 20 54 08            JSR j_playsfx
$41F0: A9 00               LDA #$00     ;#-
$41F2: 85 38               STA key_buf_len
$41F4: 4C 1E 62            JMP cmd_done

$41F7: 20 21 08    done_drift_only JSR j_primm  ;b'DRIFT ONLY!\n\x00'
$41FA:                     .BYTE $C4,$D2,$C9,$C6,$D4,$A0,$CF,$CE
$4202:                     .BYTE $CC,$D9,$A1,$8D,$00
$4207: 4C 1E 62            JMP cmd_done

                   cmd_table + 1   =*+$01
$420A:             cmd_table .WORD cmd_attack
$420C:                     .WORD cmd_board
$420E:                     .WORD cmd_cast
$4210:                     .WORD cmd_descend
$4212:                     .WORD cmd_enter
$4214:                     .WORD cmd_fire
$4216:                     .WORD cmd_get_chest
$4218:                     .WORD cmd_hole_up
$421A:                     .WORD cmd_ignite
$421C:                     .WORD cmd_jimmy_lock
$421E:                     .WORD cmd_klimb
$4220:                     .WORD cmd_locate
$4222:                     .WORD cmd_mix_reagents
$4224:                     .WORD cmd_new_order
$4226:                     .WORD cmd_open_door
$4228:                     .WORD cmd_peer_gem
$422A:                     .WORD cmd_quit
$422C:                     .WORD cmd_ready_weapon
$422E:                     .WORD cmd_search
$4230:                     .WORD cmd_talk
$4232:                     .WORD cmd_use_item
$4234:                     .WORD cmd_volume
$4236:                     .WORD cmd_wear_armour
$4238:                     .WORD cmd_x_it
$423A:                     .WORD cmd_yell_horse
$423C:                     .WORD cmd_ztats
-                                                                           
$423E: A5 1B       cmd_direction_up LDA game_mode
$4240: C9 03               CMP #$03     ;#mode_dungeon
$4242: D0 03               BNE @check_transport
$4244: 4C ED 42            JMP @dng_try_advance

$4247: A5 1E       @check_transport LDA player_transport
$4249: C9 18               CMP #$18     ;#tile_balloon
$424B: D0 03               BNE +
$424D: 4C F7 41            JMP done_drift_only

$4250: C9 11       +       CMP #$11     ;#tile_ship_north
$4252: D0 03               BNE +
$4254: 4C 88 42            JMP @move_ship

$4257: C9 10       +       CMP #$10     ;#tile_ship_west
$4259: F0 20               BEQ @set_ship_facing
$425B: C9 12               CMP #$12     ;#tile_ship_east
$425D: F0 1C               BEQ @set_ship_facing
$425F: C9 13               CMP #$13     ;#tile_ship_south
$4261: F0 18               BEQ @set_ship_facing
$4263: A9 00       @move_on_land LDA #$00     ;#sound_footstep
$4265: 20 54 08            JSR j_playsfx
$4268: 20 03 83            JSR print_north
$426B: A5 24               LDA horse_mode
$426D: F0 06               BEQ +
$426F: 20 AB 42            JSR @try_move
$4272: 20 4B 08            JSR j_update_view
$4275: 20 AB 42    +       JSR @try_move
$4278: 4C 1E 62            JMP cmd_done

$427B: A9 11       @set_ship_facing LDA #$11     ;#tile_ship_north
$427D: 85 1E               STA player_transport
$427F: 20 9F 45            JSR print_turn
$4282: 20 03 83            JSR print_north
$4285: 4C 1E 62            JMP cmd_done

$4288: 20 A9 45    @move_ship JSR print_sail
$428B: 20 03 83            JSR print_north
$428E: A5 49               LDA tile_north
$4290: 20 A9 46            JSR can_ship_move_here
$4293: 10 03               BPL +
$4295: 4C DE 41            JMP done_blocked

$4298: A9 01       +       LDA #$01     ;#wind_dir_north
$429A: 20 96 6A            JSR is_wind_favorable
$429D: F0 06               BEQ +
$429F: 20 64 41            JSR done_slow_progress
$42A2: 4C 1E 62            JMP cmd_done

$42A5: 20 0F 08    +       JSR j_move_north
$42A8: 4C 1E 62            JMP cmd_done

$42AB: A5 48       @try_move LDA tile_under_player
$42AD: C9 0E               CMP #$0E     ;#tile_castle_center
$42AF: F0 0B               BEQ @denied
$42B1: A5 49               LDA tile_north
$42B3: C9 0E               CMP #$0E     ;#tile_castle_center
$42B5: F0 0A               BEQ @allowed
$42B7: 20 48 08            JSR j_blocked_tile
$42BA: 10 05               BPL @allowed
$42BC: 68          @denied PLA 
$42BD: 68                  PLA 
$42BE: 4C DE 41            JMP done_blocked

$42C1: A5 49       @allowed LDA tile_north
$42C3: 20 74 46            JSR check_slow_terrain
$42C6: F0 06               BEQ +
$42C8: 20 64 41            JSR done_slow_progress
$42CB: 4C EC 42            JMP @done

$42CE: A9 00       +       LDA #$00     ;#sound_footstep
$42D0: 20 54 08            JSR j_playsfx
$42D3: A5 1B               LDA game_mode
$42D5: C9 01               CMP #$01     ;#mode_world
$42D7: D0 08               BNE @towne
$42D9: 20 0F 08            JSR j_move_north
$42DC: A5 49               LDA tile_north
$42DE: 4C 76 86            JMP check_enter_moongate

$42E1: C6 11       @towne  DEC player_ypos
$42E3: A5 11               LDA player_ypos
$42E5: 10 05               BPL @done
$42E7: 68                  PLA 
$42E8: 68                  PLA 
$42E9: 4C 0D 46            JMP leave_to_world

$42EC: 60          @done   RTS 

$42ED: 20 21 08    @dng_try_advance JSR j_primm  ;b'Advance\n\x00'
$42F0:                     .BYTE $C1,$E4,$F6,$E1,$EE,$E3,$E5,$8D
$42F8:                     .BYTE $00
$42F9: A5 49               LDA tile_north
$42FB: 20 E8 7F            JSR dng_can_advance
$42FE: 10 03               BPL +
$4300: 4C DE 41            JMP done_blocked

$4303: A6 20       +       LDX dng_direction
$4305: 18          dng_move CLC 
$4306: A5 10               LDA player_xpos
$4308: 7D 1C 43            ADC dng_dir_delta_x,X
$430B: 29 07               AND #$07     ;# modulo
$430D: 85 10               STA player_xpos
$430F: 18                  CLC 
$4310: A5 11               LDA player_ypos
$4312: 7D 20 43            ADC dng_dir_delta_y,X
$4315: 29 07               AND #$07     ;# modulo
$4317: 85 11               STA player_ypos
$4319: 4C 1E 62            JMP cmd_done

$431C:             dng_dir_delta_x .BYTE $00,$01,$00,$FF
$4320:             dng_dir_delta_y .BYTE $FF,$00,$01,$00
-                                                                           
$4324: A5 1B       cmd_direction_down LDA game_mode
$4326: C9 03               CMP #$03     ;#mode_dungeon
$4328: D0 1E               BNE @check_transport
$432A: 20 21 08            JSR j_primm  ;b'Retreat\n\x00'
$432D:                     .BYTE $D2,$E5,$F4,$F2,$E5,$E1,$F4,$8D
$4335:                     .BYTE $00
$4336: A5 4C               LDA tile_west
$4338: 20 FA 7F            JSR dng_can_retreat
$433B: 10 03               BPL +
$433D: 4C DE 41            JMP done_blocked

$4340: A5 20       +       LDA dng_direction
$4342: 49 02               EOR #$02     ;#-
$4344: AA                  TAX 
$4345: 4C 05 43            JMP dng_move

$4348: A5 1E       @check_transport LDA player_transport
$434A: C9 18               CMP #$18     ;#tile_balloon
$434C: D0 03               BNE +
$434E: 4C F7 41            JMP done_drift_only

$4351: C9 13       +       CMP #$13     ;#tile_ship_south
$4353: D0 03               BNE +
$4355: 4C A0 43            JMP @move_ship

$4358: C9 12       +       CMP #$12     ;#tile_ship_east
$435A: F0 37               BEQ @set_ship_facing
$435C: C9 10               CMP #$10     ;#tile_ship_west
$435E: F0 33               BEQ @set_ship_facing
$4360: C9 11               CMP #$11     ;#tile_ship_north
$4362: F0 2F               BEQ @set_ship_facing
$4364: A9 00       @move_on_land LDA #$00     ;#sound_footstep
$4366: 20 54 08            JSR j_playsfx
$4369: 20 0E 83            JSR print_south
$436C: A5 24               LDA horse_mode
$436E: F0 06               BEQ +
$4370: 20 C3 43            JSR @try_move
$4373: 20 4B 08            JSR j_update_view
$4376: 20 C3 43    +       JSR @try_move
$4379: A5 10       @check_shrine_humility LDA player_xpos
$437B: C9 E5               CMP #$E5
$437D: 90 11               BCC @cmd_done
$437F: C9 EA               CMP #$EA
$4381: B0 0D               BCS @cmd_done
$4383: A5 11               LDA player_ypos
$4385: C9 D4               CMP #$D4     ;#-
$4387: 90 07               BCC @cmd_done
$4389: C9 D9               CMP #$D9
$438B: B0 03               BCS @cmd_done
$438D: 4C EA 45            JMP spawn_daemon_guard

$4390: 4C 1E 62    @cmd_done JMP cmd_done

$4393: A9 13       @set_ship_facing LDA #$13     ;#tile_ship_south
$4395: 85 1E               STA player_transport
$4397: 20 9F 45            JSR print_turn
$439A: 20 0E 83            JSR print_south
$439D: 4C 1E 62            JMP cmd_done

$43A0: 20 A9 45    @move_ship JSR print_sail
$43A3: 20 0E 83            JSR print_south
$43A6: A5 4A               LDA tile_south
$43A8: 20 A9 46            JSR can_ship_move_here
$43AB: 10 03               BPL +
$43AD: 4C DE 41            JMP done_blocked

$43B0: A9 03       +       LDA #$03     ;#wind_dir_south
$43B2: 20 96 6A            JSR is_wind_favorable
$43B5: F0 06               BEQ +
$43B7: 20 64 41            JSR done_slow_progress
$43BA: 4C 1E 62            JMP cmd_done

$43BD: 20 0C 08    +       JSR j_move_south
$43C0: 4C 1E 62            JMP cmd_done

$43C3: A5 4A       @try_move LDA tile_south
$43C5: 20 48 08            JSR j_blocked_tile
$43C8: 10 05               BPL +
$43CA: 68                  PLA 
$43CB: 68                  PLA 
$43CC: 4C DE 41            JMP done_blocked

$43CF: A5 4A       +       LDA tile_south
$43D1: 20 74 46            JSR check_slow_terrain
$43D4: F0 06               BEQ +
$43D6: 20 64 41            JSR done_slow_progress
$43D9: 4C FC 43            JMP @done

$43DC: A9 00       +       LDA #$00     ;#sound_footstep
$43DE: 20 54 08            JSR j_playsfx
$43E1: A5 1B               LDA game_mode
$43E3: C9 01               CMP #$01     ;#mode_world
$43E5: D0 08               BNE @towne
$43E7: 20 0C 08            JSR j_move_south
$43EA: A5 4A               LDA tile_south
$43EC: 4C 76 86            JMP check_enter_moongate

$43EF: E6 11       @towne  INC player_ypos
$43F1: A5 11               LDA player_ypos
$43F3: C9 20               CMP #$20     ;#xy_last_towne
$43F5: 90 05               BCC @done
$43F7: 68                  PLA 
$43F8: 68                  PLA 
$43F9: 4C 0D 46            JMP leave_to_world

$43FC: 60          @done   RTS 

$43FD: A5 1B       cmd_direction_left LDA game_mode
$43FF: C9 03               CMP #$03     ;#mode_dungeon
$4401: D0 1E               BNE @check_transport
$4403: 20 9F 45            JSR print_turn
$4406: 20 21 08            JSR j_primm  ;b'left\n\x00'
$4409:                     .BYTE $EC,$E5,$E6,$F4,$8D,$00
$440F: 38                  SEC 
$4410: A5 20               LDA dng_direction
$4412: E9 01               SBC #$01     ;#-
$4414: 29 03               AND #$03     ;#-
$4416: 85 20               STA dng_direction
$4418: 20 00 8C            JSR j_dng_check_update
$441B: 20 72 08            JSR j_print_direction
$441E: 4C 7B 40            JMP next_turn

$4421: A5 1E       @check_transport LDA player_transport
$4423: C9 18               CMP #$18     ;#tile_balloon
$4425: D0 03               BNE +
$4427: 4C F7 41            JMP done_drift_only

$442A: C9 10       +       CMP #$10     ;#tile_ship_west
$442C: D0 03               BNE +
$442E: 4C 6A 44            JMP @move_ship

$4431: C9 11       +       CMP #$11     ;#tile_ship_north
$4433: F0 28               BEQ @set_ship_facing
$4435: C9 13               CMP #$13     ;#tile_ship_south
$4437: F0 24               BEQ @set_ship_facing
$4439: C9 12               CMP #$12     ;#tile_ship_east
$443B: F0 20               BEQ @set_ship_facing
$443D: C9 15               CMP #$15     ;#tile_horse_east
$443F: D0 04               BNE @move_on_land
$4441: A9 14               LDA #$14     ;#tile_horse_west
$4443: 85 1E               STA player_transport
$4445: A9 00       @move_on_land LDA #$00     ;#sound_footstep
$4447: 20 54 08            JSR j_playsfx
$444A: 20 23 83            JSR print_west
$444D: A5 24               LDA horse_mode
$444F: F0 06               BEQ +
$4451: 20 8D 44            JSR @try_move
$4454: 20 4B 08            JSR j_update_view
$4457: 20 8D 44    +       JSR @try_move
$445A: 4C 1E 62            JMP cmd_done

$445D: A9 10       @set_ship_facing LDA #$10     ;#tile_ship_west
$445F: 85 1E               STA player_transport
$4461: 20 9F 45            JSR print_turn
$4464: 20 23 83            JSR print_west
$4467: 4C 1E 62            JMP cmd_done

$446A: 20 A9 45    @move_ship JSR print_sail
$446D: 20 23 83            JSR print_west
$4470: A5 4C               LDA tile_west
$4472: 20 A9 46            JSR can_ship_move_here
$4475: 10 03               BPL +
$4477: 4C DE 41            JMP done_blocked

$447A: A9 00       +       LDA #$00     ;#wind_dir_west
$447C: 20 96 6A            JSR is_wind_favorable
$447F: F0 06               BEQ +
$4481: 20 64 41            JSR done_slow_progress
$4484: 4C 1E 62            JMP cmd_done

$4487: 20 09 08    +       JSR j_move_west
$448A: 4C 1E 62            JMP cmd_done

$448D: A5 4C       @try_move LDA tile_west
$448F: 20 48 08            JSR j_blocked_tile
$4492: 10 05               BPL +
$4494: 68                  PLA 
$4495: 68                  PLA 
$4496: 4C DE 41            JMP done_blocked

$4499: A5 4C       +       LDA tile_west
$449B: 20 74 46            JSR check_slow_terrain
$449E: F0 06               BEQ +
$44A0: 20 64 41            JSR done_slow_progress
$44A3: 4C C4 44            JMP @done

$44A6: A9 00       +       LDA #$00     ;#sound_footstep
$44A8: 20 54 08            JSR j_playsfx
$44AB: A5 1B               LDA game_mode
$44AD: C9 01               CMP #$01     ;#mode_world
$44AF: D0 08               BNE @towne
$44B1: 20 09 08            JSR j_move_west
$44B4: A5 4C               LDA tile_west
$44B6: 4C 76 86            JMP check_enter_moongate

$44B9: C6 10       @towne  DEC player_xpos
$44BB: A5 10               LDA player_xpos
$44BD: 10 05               BPL @done
$44BF: 68                  PLA 
$44C0: 68                  PLA 
$44C1: 4C 0D 46            JMP leave_to_world

$44C4: 60          @done   RTS 

$44C5: A5 1B       cmd_direction_right LDA game_mode
$44C7: C9 03               CMP #$03     ;#mode_dungeon
$44C9: D0 1F               BNE @check_transport
$44CB: 20 9F 45            JSR print_turn
$44CE: 20 21 08            JSR j_primm  ;b'right\n\x00'
$44D1:                     .BYTE $F2,$E9,$E7,$E8,$F4,$8D,$00
$44D8: 18                  CLC 
$44D9: A5 20               LDA dng_direction
$44DB: 69 01               ADC #$01     ;#-
$44DD: 29 03               AND #$03     ;#-
$44DF: 85 20               STA dng_direction
$44E1: 20 00 8C            JSR j_dng_check_update
$44E4: 20 72 08            JSR j_print_direction
$44E7: 4C 7B 40            JMP next_turn

$44EA: A5 1E       @check_transport LDA player_transport
$44EC: C9 18               CMP #$18     ;#tile_balloon
$44EE: D0 03               BNE +
$44F0: 4C F7 41            JMP done_drift_only

$44F3: C9 12       +       CMP #$12     ;#tile_ship_east
$44F5: D0 03               BNE +
$44F7: 4C 33 45            JMP @move_ship

$44FA: C9 11       +       CMP #$11     ;#tile_ship_north
$44FC: F0 28               BEQ @set_ship_facing
$44FE: C9 13               CMP #$13     ;#tile_ship_south
$4500: F0 24               BEQ @set_ship_facing
$4502: C9 10               CMP #$10     ;#tile_ship_west
$4504: F0 20               BEQ @set_ship_facing
$4506: C9 14               CMP #$14     ;#tile_horse_west
$4508: D0 04               BNE @move_on_land
$450A: A9 15               LDA #$15     ;#tile_horse_east
$450C: 85 1E               STA player_transport
$450E: A9 00       @move_on_land LDA #$00     ;#sound_footstep
$4510: 20 54 08            JSR j_playsfx
$4513: 20 19 83            JSR print_east
$4516: A5 24               LDA horse_mode
$4518: F0 06               BEQ +
$451A: 20 65 45            JSR @try_move
$451D: 20 4B 08            JSR j_update_view
$4520: 20 65 45    +       JSR @try_move
$4523: 4C 1E 62            JMP cmd_done

$4526: 20 9F 45    @set_ship_facing JSR print_turn
$4529: 20 19 83            JSR print_east
$452C: A9 12               LDA #$12     ;#tile_ship_east
$452E: 85 1E               STA player_transport
$4530: 4C 1E 62            JMP cmd_done

$4533: 20 A9 45    @move_ship JSR print_sail
$4536: 20 19 83            JSR print_east
$4539: A5 4B               LDA tile_east
$453B: 20 A9 46            JSR can_ship_move_here
$453E: 10 03               BPL +
$4540: 4C DE 41            JMP done_blocked

$4543: A9 02       +       LDA #$02     ;#wind_dir_east
$4545: 20 96 6A            JSR is_wind_favorable
$4548: F0 06               BEQ +
$454A: 20 64 41            JSR done_slow_progress
$454D: 4C 1E 62            JMP cmd_done

$4550: 20 06 08    +       JSR j_move_east
$4553: A5 10       @check_abyss_cove LDA player_xpos
$4555: C9 DD               CMP #$DD
$4557: D0 09               BNE @cmd_done
$4559: A5 11               LDA player_ypos
$455B: C9 E0               CMP #$E0     ;#-
$455D: D0 03               BNE @cmd_done
$455F: 4C B3 45            JMP spawn_pirate_fleet

$4562: 4C 1E 62    @cmd_done JMP cmd_done

$4565: A5 4B       @try_move LDA tile_east
$4567: 20 48 08            JSR j_blocked_tile
$456A: 10 05               BPL +
$456C: 68                  PLA 
$456D: 68                  PLA 
$456E: 4C DE 41            JMP done_blocked

$4571: A5 4B       +       LDA tile_east
$4573: 20 74 46            JSR check_slow_terrain
$4576: F0 06               BEQ +
$4578: 20 64 41            JSR done_slow_progress
$457B: 4C 9E 45            JMP @done

$457E: A9 00       +       LDA #$00     ;#sound_footstep
$4580: 20 54 08            JSR j_playsfx
$4583: A5 1B               LDA game_mode
$4585: C9 01               CMP #$01     ;#mode_world
$4587: D0 08               BNE @towne
$4589: 20 06 08            JSR j_move_east
$458C: A5 4B               LDA tile_east
$458E: 4C 76 86            JMP check_enter_moongate

$4591: E6 10       @towne  INC player_xpos
$4593: A5 10               LDA player_xpos
$4595: C9 20               CMP #$20     ;#xy_last_towne
$4597: 90 05               BCC @done
$4599: 68                  PLA 
$459A: 68                  PLA 
$459B: 4C 0D 46            JMP leave_to_world

$459E: 60          @done   RTS 

$459F: 20 21 08    print_turn JSR j_primm  ;b'Turn \x00'
$45A2:                     .BYTE $D4,$F5,$F2,$EE,$A0,$00
$45A8: 60                  RTS 

$45A9: 20 21 08    print_sail JSR j_primm  ;b'Sail \x00'
$45AC:                     .BYTE $D3,$E1,$E9,$EC,$A0,$00
$45B2: 60                  RTS 

$45B3: A0 07       spawn_pirate_fleet LDY #$07     ;#-
$45B5: B9 D2 45    @next   LDA pirate_fleet_x,Y
$45B8: 99 20 AC            STA object_xpos,Y
$45BB: B9 DA 45            LDA pirate_fleet_y,Y
$45BE: 99 40 AC            STA object_ypos,Y
$45C1: A9 80               LDA #$80     ;#tile_pirate
$45C3: 99 60 AC            STA object_tile_type,Y
$45C6: B9 E2 45            LDA pirate_fleet_sprite,Y
$45C9: 99 00 AC            STA object_tile_sprite,Y
$45CC: 88                  DEY 
$45CD: 10 E6               BPL @next
$45CF: 4C 1E 62            JMP cmd_done

$45D2:             pirate_fleet_x .BYTE $E0,$E0,$E2,$E3,$E4,$E5,$E5,$E4
$45DA:             pirate_fleet_y .BYTE $DC,$E4,$DC,$E4,$E3,$E1,$DF,$DE
$45E2:             pirate_fleet_sprite .BYTE $82,$82,$82,$82,$83,$83,$81,$81
-                                                                           
$45EA: A5 46       spawn_daemon_guard LDA magic_aura
$45EC: C9 5F               CMP #$5F     ;#aura_horn
$45EE: F0 1A               BEQ @done
$45F0: A0 07               LDY #$07     ;#-
$45F2: A9 F0       @next   LDA #$F0     ;#tile_daemon
$45F4: 99 60 AC            STA object_tile_type,Y
$45F7: 99 00 AC            STA object_tile_sprite,Y
$45FA: A9 E7               LDA #$E7
$45FC: 99 20 AC            STA object_xpos,Y
$45FF: A5 11               LDA player_ypos
$4601: 18                  CLC 
$4602: 69 01               ADC #$01     ;#-
$4604: 99 40 AC            STA object_ypos,Y
$4607: 88                  DEY 
$4608: 10 E8               BPL @next
$460A: 4C 1E 62    @done   JMP cmd_done

$460D: A9 00       leave_to_world LDA #$00     ;#music_off
$460F: 20 20 AF            JSR music_ctl
$4612: 20 21 08            JSR j_primm  ;b'LEAVING...\n\x00'
$4615:                     .BYTE $CC,$C5,$C1,$D6,$C9,$CE,$C7,$AE
$461D:                     .BYTE $AE,$AE,$8D,$00
$4621: 20 12 A1            JSR j_clearkbd
$4624: A9 00               LDA #$00     ;#mode_loading
$4626: 85 1B               STA game_mode
$4628: A9 02               LDA #$02     ;#disk_britannia
$462A: 20 42 08            JSR j_request_disk
$462D: A9 CC               LDA #$CC     ;#-
$462F: A2 7E               LDX #$7E     ;#file_id_stmp ;temp_map
$4631: 20 00 A1            JSR j_fileio
$4634: A5 18               LDA britannia_x
$4636: 85 10               STA player_xpos
$4638: A5 19               LDA britannia_y
$463A: 85 11               STA player_ypos
$463C: 20 03 08            JSR j_player_teleport
$463F: A9 01               LDA #$01     ;#mode_world
$4641: 85 1B               STA game_mode
$4643: A9 00               LDA #$00     ;#loc_world
$4645: 85 1A               STA current_location
$4647: A5 10       @check_exit_hythloth LDA player_xpos
$4649: C9 EF               CMP #$EF
$464B: D0 18               BNE @done
$464D: A5 11               LDA player_ypos
$464F: C9 F0               CMP #$F0     ;#-
$4651: D0 12               BNE @done
$4653: A9 18       @spawn_balloon LDA #$18     ;#tile_balloon
$4655: 8D 7F AC            STA object_tile_type + object_max
$4658: 8D 1F AC            STA object_tile_sprite + object_max
$465B: A9 E9               LDA #$E9
$465D: 8D 3F AC            STA object_xpos + object_max
$4660: A9 F2               LDA #$F2
$4662: 8D 5F AC            STA object_ypos + object_max
$4665: 20 18 08    @done   JSR j_update_britannia
$4668: A9 CF               LDA #$CF     ;#music_Overworld
$466A: 20 20 AF            JSR music_ctl
$466D: A9 00               LDA #$00     ;#-
$466F: 85 38               STA key_buf_len
$4671: 4C 1E 62            JMP cmd_done

$4674: C9 03       check_slow_terrain CMP #$03     ;#tile_swamp
$4676: F0 1F               BEQ @chance_4
$4678: C9 05               CMP #$05     ;#tile_bushes
$467A: F0 12               BEQ @chance_8
$467C: C9 06               CMP #$06     ;#tile_forest
$467E: F0 17               BEQ @chance_4
$4680: C9 07               CMP #$07     ;#tile_hills
$4682: F0 1C               BEQ @chance_2
$4684: C9 46               CMP #$46     ;#tile_field_fire
$4686: F0 18               BEQ @chance_2
$4688: A9 00       @allowed LDA #$00     ;#-
$468A: 60                  RTS 

$468B: A9 FF       @slowed LDA #$FF
$468D: 60                  RTS 

$468E: 20 4E 08    @chance_8 JSR j_rand
$4691: 29 07               AND #$07     ;#-
$4693: F0 F6               BEQ @slowed
$4695: D0 F1               BNE @allowed
$4697: 20 4E 08    @chance_4 JSR j_rand
$469A: 29 03               AND #$03     ;#-
$469C: F0 ED               BEQ @slowed
$469E: D0 E8               BNE @allowed
$46A0: 20 4E 08    @chance_2 JSR j_rand
$46A3: 29 01               AND #$01     ;#-
$46A5: F0 E1               BEQ @allowed
$46A7: D0 E2               BNE @slowed
$46A9: C9 02       can_ship_move_here CMP #$02     ;#tile_water_shallow
$46AB: 90 08               BCC @yes
$46AD: C9 8C               CMP #$8C     ;#tile_whirlpool
$46AF: 90 07               BCC @no
$46B1: C9 90               CMP #$90     ;#tile_monster
$46B3: B0 03               BCS @no
$46B5: A9 00       @yes    LDA #$00     ;#-
$46B7: 60                  RTS 

$46B8: A9 FF       @no     LDA #$FF
$46BA: 60                  RTS 

$46BB: 20 21 08    cmd_attack JSR j_primm  ;b'Attack-\x00'
$46BE:                     .BYTE $C1,$F4,$F4,$E1,$E3,$EB,$AD,$00
$46C6: A5 1B               LDA game_mode
$46C8: C9 03               CMP #$03     ;#mode_dungeon
$46CA: D0 03               BNE +
$46CC: 4C 12 41            JMP done_what

$46CF: 20 9C 82    +       JSR input_direction
$46D2: D0 03               BNE +
$46D4: 4C 06 41            JMP done_pass

$46D7: 20 2D 83    +       JSR get_mob_at_temp_xy
$46DA: 10 03               BPL +
$46DC: 4C 4E 41    @nothing_there JMP done_nothing_there

$46DF: 86 58       +       STX zp58     ;$zp_index
$46E1: BD 60 AC            LDA object_tile_type,X
$46E4: C9 8C               CMP #$8C     ;#tile_whirlpool
$46E6: F0 F4               BEQ @nothing_there
$46E8: C9 8E               CMP #$8E     ;#tile_twister
$46EA: F0 F0               BEQ @nothing_there
$46EC: A5 1B               LDA game_mode
$46EE: C9 02               CMP #$02     ;#mode_towne
$46F0: D0 1A               BNE @check_virtue
$46F2: A2 1F               LDX #$1F     ;#object_max
$46F4: BD 60 AC    @next   LDA object_tile_type,X
$46F7: C9 50               CMP #$50     ;#tile_guard
$46F9: F0 04               BEQ @hostile
$46FB: C9 5E               CMP #$5E     ;#tile_lord_british
$46FD: D0 0A               BNE @skip
$46FF: A9 FF       @hostile LDA #$FF
$4701: 9D C0 AC            STA object_dng_level,X
$4704: A9 00               LDA #$00     ;#-
$4706: 9D E0 AC            STA npc_dialogue,X
$4709: CA          @skip   DEX 
$470A: 10 E8               BPL @next
$470C: A5 1B       @check_virtue LDA game_mode
$470E: C9 02               CMP #$02     ;#mode_towne
$4710: F0 0A               BEQ @penalty
$4712: A6 58               LDX zp58     ;$zp_index
$4714: BD 60 AC            LDA object_tile_type,X
$4717: 20 CD 86            JSR is_evil
$471A: 30 15               BMI do_attack
$471C: A0 01       @penalty LDY #$01     ;#virtue_compassion
$471E: A9 05               LDA #$05     ;#-
$4720: 20 72 84            JSR dec_virtue
$4723: A0 03               LDY #$03     ;#virtue_justice
$4725: A9 03               LDA #$03     ;#-
$4727: 20 72 84            JSR dec_virtue
$472A: A0 05               LDY #$05     ;#virtue_honor
$472C: A9 03               LDA #$03     ;#-
$472E: 20 72 84            JSR dec_virtue
$4731: A6 58       do_attack LDX zp58     ;$zp_index
$4733: BD 60 AC            LDA object_tile_type,X
$4736: 85 40               STA foe_type_encountered
$4738: BD 20 AC            LDA object_xpos,X
$473B: 85 41               STA pre_combat_x
$473D: 85 7A               STA temp_x
$473F: BD 40 AC            LDA object_ypos,X
$4742: 85 42               STA pre_combat_y
$4744: 85 7B               STA temp_y
$4746: A5 1B               LDA game_mode
$4748: C9 01               CMP #$01     ;#mode_world
$474A: D0 08               BNE @mini_map
$474C: 20 81 08            JSR j_gettile_bounds
$474F: 85 43               STA pre_combat_tile
$4751: 4C 59 47            JMP @init_foe

$4754: 20 93 08    @mini_map JSR j_gettile_towne
$4757: 85 43               STA pre_combat_tile
$4759: A9 00       @init_foe LDA #$00     ;#-
$475B: A6 58               LDX zp58     ;$zp_index
$475D: 9D 60 AC            STA object_tile_type,X
$4760: 9D 00 AC            STA object_tile_sprite,X
$4763: 9D C0 AC            STA object_dng_level,X
$4766: 4C A3 6E            JMP init_combat

$4769: A5 1E       cmd_board LDA player_transport
$476B: C9 1F               CMP #$1F     ;#tile_walk
$476D: F0 0F               BEQ @on_foot
$476F: 20 21 08            JSR j_primm  ;b'Board <-\x00'
$4772:                     .BYTE $C2,$EF,$E1,$F2,$E4,$A0,$BC,$AD
$477A:                     .BYTE $00
$477B: 4C 89 41            JMP done_cant

$477E: A5 48       @on_foot LDA tile_under_player
$4780: C9 14               CMP #$14     ;#tile_horse_west
$4782: F0 56               BEQ board_horse
$4784: C9 15               CMP #$15     ;#tile_horse_east
$4786: F0 52               BEQ board_horse
$4788: 20 21 08            JSR j_primm  ;b'Board \x00'
$478B:                     .BYTE $C2,$EF,$E1,$F2,$E4,$A0,$00
$4792: A5 48               LDA tile_under_player
$4794: C9 10               CMP #$10     ;#tile_ship_west
$4796: F0 16               BEQ board_ship
$4798: C9 11               CMP #$11     ;#tile_ship_north
$479A: F0 12               BEQ board_ship
$479C: C9 12               CMP #$12     ;#tile_ship_east
$479E: F0 0E               BEQ board_ship
$47A0: C9 13               CMP #$13     ;#tile_ship_south
$47A2: F0 0A               BEQ board_ship
$47A4: C9 18               CMP #$18     ;#tile_balloon
$47A6: D0 03               BNE @nothing_boardable
$47A8: 4C F3 47            JMP board_balloon

$47AB: 4C 12 41    @nothing_boardable JMP done_what

$47AE: A9 10       board_ship LDA #$10     ;#tile_ship_first
$47B0: 20 0B 48            JSR do_board
$47B3: 20 21 08            JSR j_primm  ;b'frigate!\n\x00'
$47B6:                     .BYTE $E6,$F2,$E9,$E7,$E1,$F4,$E5,$A1
$47BE:                     .BYTE $8D,$00
$47C0: A5 10               LDA player_xpos
$47C2: CD D8 47            CMP last_ship_x
$47C5: D0 0A               BNE @new_ship
$47C7: A5 11               LDA player_ypos
$47C9: CD D9 47            CMP last_ship_y
$47CC: D0 03               BNE @new_ship
$47CE: 4C 1E 62            JMP cmd_done

$47D1: A9 50       @new_ship LDA #$50     ;#-
$47D3: 85 2B               STA ship_hull
$47D5: 4C 1E 62            JMP cmd_done

$47D8:             last_ship_x .BYTE $00
$47D9:             last_ship_y .BYTE $00
$47DA: A9 14       board_horse LDA #$14     ;#tile_horse_west
$47DC: 20 0B 48            JSR do_board
$47DF: 20 21 08            JSR j_primm  ;b'Mount horse!\n\x00'
$47E2:                     .BYTE $CD,$EF,$F5,$EE,$F4,$A0,$E8,$EF
$47EA:                     .BYTE $F2,$F3,$E5,$A1,$8D,$00
$47F0: 4C 1E 62            JMP cmd_done

$47F3: A9 18       board_balloon LDA #$18     ;#tile_balloon
$47F5: 20 0B 48            JSR do_board
$47F8: 20 21 08            JSR j_primm  ;b'balloon\n\x00'
$47FB:                     .BYTE $E2,$E1,$EC,$EC,$EF,$EF,$EE,$8D
$4803:                     .BYTE $00
$4804: A9 00               LDA #$00     ;#balloon_landed
$4806: 85 74               STA movement_mode
$4808: 4C 1E 62            JMP cmd_done

$480B: 85 58       do_board STA zp58     ;$zp_transport
$480D: A2 1F               LDX #$1F     ;#object_max
$480F: BD 60 AC    @next   LDA object_tile_type,X
$4812: 29 FC               AND #$FC     ;#animation_mask
$4814: C5 58               CMP zp58     ;$zp_transport
$4816: D0 0E               BNE @skip
$4818: BD 20 AC            LDA object_xpos,X
$481B: C5 10               CMP player_xpos
$481D: D0 07               BNE @skip
$481F: BD 40 AC            LDA object_ypos,X
$4822: C5 11               CMP player_ypos
$4824: F0 07               BEQ @remove_from_map
$4826: CA          @skip   DEX 
$4827: E0 08               CPX #$08     ;#object_inanimate_first
$4829: B0 E4               BCS @next
$482B: 90 08               BCC @done
$482D: A9 00       @remove_from_map LDA #$00     ;#-
$482F: 9D 60 AC            STA object_tile_type,X
$4832: 9D 00 AC            STA object_tile_sprite,X
$4835: A5 48       @done   LDA tile_under_player
$4837: 85 1E               STA player_transport
$4839: 60                  RTS 

$483A: 20 21 08    cmd_cast JSR j_primm  ;b'Cast spell:\nplayer-\x00'
$483D:                     .BYTE $C3,$E1,$F3,$F4,$A0,$F3,$F0,$E5
$4845:                     .BYTE $EC,$EC,$BA,$8D,$F0,$EC,$E1,$F9
$484D:                     .BYTE $E5,$F2,$AD,$00
$4851: 20 5D 08            JSR j_getplayernum
$4854: D0 03               BNE +
$4856: 4C 24 41    @not_a_player JMP done_not_a_player

$4859: C5 1F       +       CMP party_size
$485B: F0 02               BEQ +
$485D: B0 F7               BCS @not_a_player
$485F: 85 54       +       STA curr_player
$4861: 20 AF 7D            JSR is_awake
$4864: 10 03               BPL choose_spell
$4866: 4C CD 41            JMP done_disabled

$4869: 20 A5 61    choose_spell JSR display_spells
$486C: 20 21 08            JSR j_primm  ;b'SPELL-\x00'
$486F:                     .BYTE $D3,$D0,$C5,$CC,$CC,$AD,$00
$4876: 20 98 83            JSR input_char
$4879: 48                  PHA 
$487A: 20 69 08            JSR j_clearstatwindow
$487D: 20 45 08            JSR j_update_status
$4880: A5 1B               LDA game_mode
$4882: 10 03               BPL @not_combat
$4884: 20 EF 83            JSR invert_player_name
$4887: 68          @not_combat PLA 
$4888: 38                  SEC 
$4889: E9 C1               SBC #$C1     ;#char_alpha_first
$488B: C9 1A               CMP #$1A     ;# 26, A-Z spells
$488D: 90 03               BCC +
$488F: 4C 12 41            JMP done_what

$4892: 8D EF 48    +       STA current_spell
$4895: 18                  CLC 
$4896: 69 65               ADC #$65     ;#string_spells
$4898: 20 7E 08            JSR j_printstring
$489B: 20 21 08            JSR j_primm  ;b'!\n\x00'
$489E:                     .BYTE $A1,$8D,$00
$48A1: AC EF 48            LDY current_spell
$48A4: B9 40 AB            LDA mixtures,Y
$48A7: D0 03               BNE +
$48A9: 4C B7 41            JMP done_have_none

$48AC: F8          +       SED 
$48AD: 38                  SEC 
$48AE: E9 01               SBC #$01     ;#-
$48B0: 99 40 AB            STA mixtures,Y
$48B3: D8                  CLD 
$48B4: 20 2D 08            JSR j_get_stats_ptr
$48B7: A0 16               LDY #$16     ;#player_magic_points
$48B9: B1 7E               LDA (ptr1),Y
$48BB: AE EF 48            LDX current_spell
$48BE: F8                  SED 
$48BF: 38                  SEC 
$48C0: FD 24 49            SBC spell_mp_cost,X
$48C3: D8                  CLD 
$48C4: B0 15               BCS @deduct_mp
$48C6: 20 21 08            JSR j_primm  ;b'M.P. TOO LOW!\n\x00'
$48C9:                     .BYTE $CD,$AE,$D0,$AE,$A0,$D4,$CF,$CF
$48D1:                     .BYTE $A0,$CC,$CF,$D7,$A1,$8D,$00
$48D8: 4C B9 4E            JMP failed

$48DB: 91 7E       @deduct_mp STA (ptr1),Y
$48DD: AD EF 48            LDA current_spell
$48E0: 0A                  ASL 
$48E1: A8                  TAY 
$48E2: B9 F0 48            LDA spell_jump_table,Y
$48E5: 85 7E               STA ptr1
$48E7: B9 F1 48            LDA spell_jump_table+1,Y
$48EA: 85 7F               STA ptr1 + 1
$48EC: 6C 7E 00            JMP (ptr1)

$48EF:             current_spell .BYTE $00
                   spell_jump_table+1   =*+$01
$48F0:             spell_jump_table .WORD spell_awake,spell_blink,spell_cure,spell_dispel_field,spell_energy_field
$48FA:                     .WORD spell_fireball,spell_gate,spell_heal,spell_iceball,spell_jinx
$4904:                     .WORD spell_kill,spell_light,spell_missile,spell_negate,spell_open_chest
$490E:                     .WORD spell_protect,spell_quickness,spell_resurrect,spell_sleep,spell_tremor
$4918:                     .WORD spell_undead,spell_view,spell_wind,spell_x_it,spell_y_up
$4922:                     .WORD spell_z_down
$4924: 05 15       spell_mp_cost ORA map_y
$4926:                     .BYTE $05,$20,$10,$15,$40,$10,$20,$30
$492E:                     .BYTE $25,$05,$05,$20,$05,$15,$20,$45
$4936:                     .BYTE $15,$30,$15,$15,$10,$15,$10,$05
-                                                                           
$493E: 20 21 08    spell_awake JSR j_primm  ;b'WHO-\x00'
$4941:                     .BYTE $D7,$C8,$CF,$AD,$00
$4946: 20 5D 08            JSR j_getplayernum
$4949: D0 03               BNE +
$494B: 4C B9 4E    @fail   JMP failed

$494E: 20 90 4E    +       JSR spell_effect
$4951: 20 2D 08            JSR j_get_stats_ptr
$4954: A0 12               LDY #$12     ;#player_status
$4956: B1 7E               LDA (ptr1),Y
$4958: C9 D3               CMP #$D3     ;#status_Sleep
$495A: D0 EF               BNE @fail
$495C: A9 C7               LDA #$C7     ;#status_Good
$495E: 91 7E               STA (ptr1),Y
$4960: A5 1B               LDA game_mode
$4962: 10 08               BPL @not_in_combat
$4964: 20 E2 7D            JSR get_player_sprite
$4967: A6 54               LDX curr_player
$4969: 9D 9F AD            STA combat_player_tile-1,X
$496C: 4C A7 41    @not_in_combat JMP done_done

$496F: A5 1E       spell_blink LDA player_transport
$4971: C9 14               CMP #$14     ;#tile_ship_last
$4973: B0 03               BCS @not_in_ship
$4975: 4C B9 4E    @fail   JMP failed

$4978: 20 71 4E    @not_in_ship JSR outdoors_only
$497B: 20 E3 4E            JSR prompt_direction
$497E: 20 9C 82            JSR input_direction
$4981: 20 90 4E            JSR spell_effect
$4984: A5 10               LDA player_xpos
$4986: 25 11               AND player_ypos
$4988: C9 C0               CMP #$C0     ;# no blink near abyss isle
$498A: 90 03               BCC @find_patch_edge
$498C: 4C B9 4E            JMP failed

$498F: 20 B3 49    @find_patch_edge JSR add_delta
$4992: C9 FF               CMP #$FF
$4994: D0 F9               BNE @find_patch_edge
$4996: 20 C5 49    @find_farthest_legal JSR sub_delta
$4999: C9 FF               CMP #$FF
$499B: F0 D8               BEQ @fail
$499D: 20 48 08            JSR j_blocked_tile
$49A0: 30 F4               BMI @find_farthest_legal
$49A2: A5 7A               LDA temp_x
$49A4: 85 10               STA player_xpos
$49A6: A5 7B               LDA temp_y
$49A8: 85 11               STA player_ypos
$49AA: 20 23 AF            JSR music_nop
$49AD: 20 03 08            JSR j_player_teleport
$49B0: 4C A7 41            JMP done_done

$49B3: 18          add_delta CLC 
$49B4: A5 7A               LDA temp_x
$49B6: 65 78               ADC delta_x
$49B8: 85 7A               STA temp_x
$49BA: 18                  CLC 
$49BB: A5 7B               LDA temp_y
$49BD: 65 79               ADC delta_y
$49BF: 85 7B               STA temp_y
$49C1: 20 81 08            JSR j_gettile_bounds
$49C4: 60                  RTS 

$49C5: 38          sub_delta SEC 
$49C6: A5 7A               LDA temp_x
$49C8: E5 78               SBC delta_x
$49CA: 85 7A               STA temp_x
$49CC: 38                  SEC 
$49CD: A5 7B               LDA temp_y
$49CF: E5 79               SBC delta_y
$49D1: 85 7B               STA temp_y
$49D3: 20 81 08            JSR j_gettile_bounds
$49D6: 60                  RTS 

$49D7: 20 21 08    spell_cure JSR j_primm  ;b'WH0-\x00'
$49DA:                     .BYTE $D7,$C8,$B0,$AD,$00
$49DF: 20 5D 08            JSR j_getplayernum
$49E2: D0 03               BNE +
$49E4: 4C B9 4E    @fail   JMP failed

$49E7: 20 90 4E    +       JSR spell_effect
$49EA: 20 2D 08            JSR j_get_stats_ptr
$49ED: A0 12               LDY #$12     ;#player_status
$49EF: B1 7E               LDA (ptr1),Y
$49F1: C9 D0               CMP #$D0     ;#status_Poison
$49F3: D0 EF               BNE @fail
$49F5: A9 C7               LDA #$C7     ;#status_Good
$49F7: 91 7E               STA (ptr1),Y
$49F9: 4C A7 41            JMP done_done

$49FC: A5 1B       spell_dispel_field LDA game_mode
$49FE: C9 03               CMP #$03     ;#mode_dungeon
$4A00: F0 66               BEQ @dungeon
$4A02: 20 E3 4E            JSR prompt_direction
$4A05: A5 1B               LDA game_mode
$4A07: 30 31               BMI @combat
$4A09: C9 01               CMP #$01     ;#mode_world
$4A0B: D0 1F               BNE @towne
$4A0D: F0 03               BEQ @world
$4A0F: 4C B9 4E    @fail   JMP failed

$4A12: 20 9C 82    @world  JSR input_direction
$4A15: F0 F8               BEQ @fail
$4A17: 20 90 4E            JSR spell_effect
$4A1A: 20 81 08            JSR j_gettile_bounds
$4A1D: C9 44       @try_dispel CMP #$44     ;#tile_field_first
$4A1F: 90 EE               BCC @fail
$4A21: C9 48               CMP #$48     ;#tile_field_last
$4A23: B0 EA               BCS @fail
$4A25: A5 48               LDA tile_under_player
$4A27: 91 7C               STA (ptr2),Y
$4A29: 4C A7 41            JMP done_done

$4A2C: 20 9C 82    @towne  JSR input_direction
$4A2F: F0 DE               BEQ @fail
$4A31: 20 90 4E            JSR spell_effect
$4A34: 20 93 08            JSR j_gettile_towne
$4A37: 4C 1D 4A            JMP @try_dispel

$4A3A: 20 87 82    @combat JSR input_target_xy
$4A3D: F0 D0               BEQ @fail
$4A3F: 20 90 4E            JSR spell_effect
$4A42: 20 8D 08            JSR j_gettile_tempmap
$4A45: 85 48               STA tile_under_player
$4A47: 18                  CLC 
$4A48: A5 16               LDA dest_x
$4A4A: 65 78               ADC delta_x
$4A4C: 85 16               STA dest_x
$4A4E: 18                  CLC 
$4A4F: A5 17               LDA dest_y
$4A51: 65 79               ADC delta_y
$4A53: 85 17               STA dest_y
$4A55: 20 8D 08            JSR j_gettile_tempmap
$4A58: C9 44               CMP #$44     ;#tile_field_first
$4A5A: 90 B3               BCC @fail
$4A5C: C9 48               CMP #$48     ;#tile_field_last
$4A5E: B0 AF               BCS @fail
$4A60: A5 48               LDA tile_under_player
$4A62: 99 80 AE            STA tempmap,Y
$4A65: 4C A7 41            JMP done_done

$4A68: 20 90 4E    @dungeon JSR spell_effect
$4A6B: 18                  CLC 
$4A6C: A6 20               LDX dng_direction
$4A6E: A5 10               LDA player_xpos
$4A70: 7D 1C 43            ADC dng_dir_delta_x,X
$4A73: 85 16               STA dest_x
$4A75: 18                  CLC 
$4A76: A5 11               LDA player_ypos
$4A78: 7D 20 43            ADC dng_dir_delta_y,X
$4A7B: 85 17               STA dest_y
$4A7D: 20 96 08            JSR j_gettile_dungeon
$4A80: 29 F0               AND #$F0     ;#dng_tile_type_mask
$4A82: C9 A0               CMP #$A0     ;#dng_tile_field
$4A84: D0 89               BNE @fail
$4A86: A9 00               LDA #$00     ;#-
$4A88: 91 7E               STA (ptr1),Y
$4A8A: 4C A7 41            JMP done_done

$4A8D: 20 21 08    spell_energy_field JSR j_primm  ;b'TYPE-\x00'
$4A90:                     .BYTE $D4,$D9,$D0,$C5,$AD,$00
$4A96: 20 98 83            JSR input_char
$4A99: A2 44               LDX #$44     ;#tile_field_first
$4A9B: C9 D0               CMP #$D0     ;#char_P
$4A9D: F0 12               BEQ @allowed
$4A9F: E8                  INX 
$4AA0: C9 CC               CMP #$CC     ;#char_L
$4AA2: F0 0D               BEQ @allowed
$4AA4: E8                  INX 
$4AA5: C9 C6               CMP #$C6     ;#char_F
$4AA7: F0 08               BEQ @allowed
$4AA9: E8                  INX 
$4AAA: C9 D3               CMP #$D3     ;#char_S
$4AAC: F0 03               BEQ @allowed
$4AAE: 4C B9 4E    @fail   JMP failed

$4AB1: 86 6A       @allowed STX zp6A     ;$zp_field_type
$4AB3: A5 1B               LDA game_mode
$4AB5: 30 29               BMI @combat
$4AB7: C9 03               CMP #$03     ;#mode_dungeon
$4AB9: D0 F3               BNE @fail
$4ABB: 20 90 4E    @dungeon JSR spell_effect
$4ABE: A6 20               LDX dng_direction
$4AC0: 18                  CLC 
$4AC1: A5 10               LDA player_xpos
$4AC3: 7D 1C 43            ADC dng_dir_delta_x,X
$4AC6: 85 16               STA dest_x
$4AC8: 18                  CLC 
$4AC9: A5 11               LDA player_ypos
$4ACB: 7D 20 43            ADC dng_dir_delta_y,X
$4ACE: 85 17               STA dest_y
$4AD0: 20 96 08            JSR j_gettile_dungeon
$4AD3: D0 D9               BNE @fail
$4AD5: A5 6A               LDA zp6A     ;$zp_field_type
$4AD7: 29 03               AND #$03     ;#-
$4AD9: 09 A0               ORA #$A0     ;#dng_tile_field
$4ADB: 91 7E               STA (ptr1),Y
$4ADD: 4C A7 41            JMP done_done

$4AE0: 20 E3 4E    @combat JSR prompt_direction
$4AE3: 20 87 82            JSR input_target_xy
$4AE6: F0 C6               BEQ @fail
$4AE8: 18                  CLC 
$4AE9: A5 16               LDA dest_x
$4AEB: 65 78               ADC delta_x
$4AED: 85 16               STA dest_x
$4AEF: C9 0B               CMP #$0B     ;#xy_last_screen
$4AF1: B0 BB               BCS @fail
$4AF3: 18                  CLC 
$4AF4: A5 17               LDA dest_y
$4AF6: 65 79               ADC delta_y
$4AF8: 85 17               STA dest_y
$4AFA: C9 0B               CMP #$0B     ;#xy_last_screen
$4AFC: B0 B0               BCS @fail
$4AFE: 20 90 4E            JSR spell_effect
$4B01: 20 8D 08            JSR j_gettile_tempmap
$4B04: 20 48 08            JSR j_blocked_tile
$4B07: 30 A5               BMI @fail
$4B09: A5 6A               LDA zp6A     ;$zp_field_type
$4B0B: 99 80 AE            STA tempmap,Y
$4B0E: 4C A7 41            JMP done_done

$4B11: 20 56 4E    spell_fireball JSR combat_only
$4B14: 20 E3 4E            JSR prompt_direction
$4B17: 20 87 82            JSR input_target_xy
$4B1A: D0 08               BNE do_fireball
$4B1C: A9 00       spell_attack_failed LDA #$00     ;#-
$4B1E: 8D FD AD            STA attack_sprite
$4B21: 4C B9 4E            JMP failed

$4B24: 20 90 4E    do_fireball JSR spell_effect
$4B27: A9 4F               LDA #$4F     ;#tile_attack_red
$4B29: 8D FD AD            STA attack_sprite
$4B2C: A5 16       launch_attack_spell LDA dest_x
$4B2E: 8D FE AD            STA target_x
$4B31: A5 17               LDA dest_y
$4B33: 8D FF AD            STA target_y
$4B36: 20 20 82    @travel JSR next_arena_tile
$4B39: 30 E1               BMI spell_attack_failed
$4B3B: 20 57 08            JSR j_update_view_combat
$4B3E: 20 02 82            JSR check_hit_foe
$4B41: 30 F3               BMI @travel
$4B43: A9 06               LDA #$06     ;#sound_damage
$4B45: 20 54 08            JSR j_playsfx
$4B48: AD FD AD            LDA attack_sprite
$4B4B: C9 4D               CMP #$4D     ;#tile_attack_small
$4B4D: F0 21               BEQ @damage_low
$4B4F: C9 4E               CMP #$4E     ;#tile_attack_blue
$4B51: F0 13               BEQ @damage_high
$4B53: C9 4F               CMP #$4F     ;#tile_attack_red
$4B55: F0 05               BEQ @damage_medium
$4B57: A9 E8               LDA #$E8     ;# 232 fixed damage for Kill
$4B59: 4C 77 4B            JMP @clear_sprite

$4B5C: A9 80       @damage_medium LDA #$80     ;#-
$4B5E: 20 03 7E            JSR rand_modulo
$4B61: 09 18               ORA #$18     ;# 24-31,56-63,88-95,120-127
$4B63: 4C 77 4B            JMP @clear_sprite

$4B66: A9 E0       @damage_high LDA #$E0     ;#-
$4B68: 20 03 7E            JSR rand_modulo
$4B6B: 09 20               ORA #$20     ;# 32-63,96-127,160-191,224-255
$4B6D: 4C 77 4B            JMP @clear_sprite

$4B70: A9 40       @damage_low LDA #$40     ;#-
$4B72: 20 03 7E            JSR rand_modulo
$4B75: 09 10               ORA #$10     ;# 16-31,48-63
$4B77: A2 00       @clear_sprite LDX #$00     ;#-
$4B79: 8E FD AD            STX attack_sprite
$4B7C: 85 5C               STA damage
$4B7E: 20 09 7B            JSR inflict_damage
$4B81: 4C A7 41            JMP done_done

$4B84: A5 1E       spell_gate LDA player_transport
$4B86: C9 14               CMP #$14     ;#tile_ship_last
$4B88: 90 20               BCC @fail
$4B8A: A5 1B               LDA game_mode
$4B8C: C9 01               CMP #$01     ;#mode_world
$4B8E: F0 03               BEQ +
$4B90: 4C 71 4E            JMP outdoors_only

$4B93: 20 21 08    +       JSR j_primm  ;b'TO PHASE-\x00'
$4B96:                     .BYTE $D4,$CF,$A0,$D0,$C8,$C1,$D3,$C5
$4B9E:                     .BYTE $AD,$00
$4BA0: 20 98 83            JSR input_char
$4BA3: 38                  SEC 
$4BA4: E9 B1               SBC #$B1     ;#char_1
$4BA6: C9 08               CMP #$08     ;#-
$4BA8: 90 03               BCC +
$4BAA: 4C B9 4E    @fail   JMP failed

$4BAD: 85 6A       +       STA zp6A
$4BAF: 20 90 4E            JSR spell_effect
$4BB2: A6 6A               LDX zp6A
$4BB4: BD C7 4B            LDA moongate_x,X
$4BB7: 85 10               STA player_xpos
$4BB9: BD CF 4B            LDA moongate_y,X
$4BBC: 85 11               STA player_ypos
$4BBE: 20 23 AF            JSR music_nop
$4BC1: 20 03 08            JSR j_player_teleport
$4BC4: 4C A7 41            JMP done_done

$4BC7:             moongate_x .BYTE $E0,$60,$26,$32,$A6,$68,$17,$BB
$4BCF:             moongate_y .BYTE $85,$66,$E0,$25,$13,$C2,$7E,$A7
-                                                                           
$4BD7: 20 21 08    spell_heal JSR j_primm  ;b'WHO-\x00'
$4BDA:                     .BYTE $D7,$C8,$CF,$AD,$00
$4BDF: 20 5D 08            JSR j_getplayernum
$4BE2: D0 03               BNE +
$4BE4: 4C B9 4E    @fail   JMP failed

$4BE7: 20 90 4E    +       JSR spell_effect
$4BEA: 20 C1 7D            JSR is_alive
$4BED: 30 F5               BMI @fail
$4BEF: A9 19               LDA #$19     ;#-
$4BF1: 20 03 7E            JSR rand_modulo
$4BF4: 18                  CLC 
$4BF5: 69 4B               ADC #$4B     ;75 - 99 pts
$4BF7: 20 1A 84            JSR encode_bcd_value
$4BFA: 20 EA 84            JSR inc_player_hp
$4BFD: 4C A7 41            JMP done_done

$4C00: 20 56 4E    spell_iceball JSR combat_only
$4C03: 20 E3 4E            JSR prompt_direction
$4C06: 20 87 82            JSR input_target_xy
$4C09: D0 03               BNE +
$4C0B: 4C B9 4E            JMP failed

$4C0E: 20 90 4E    +       JSR spell_effect
$4C11: A9 4E               LDA #$4E     ;#tile_attack_blue
$4C13: 8D FD AD            STA attack_sprite
$4C16: 4C 2C 4B            JMP launch_attack_spell

$4C19: 20 90 4E    spell_jinx JSR spell_effect
$4C1C: A9 CA               LDA #$CA     ;#aura_jinx
$4C1E: 85 46       set_spell_aura STA magic_aura
$4C20: A9 0A               LDA #$0A     ;#-
$4C22: 85 47               STA aura_duration
$4C24: 4C A7 41            JMP done_done

$4C27: 20 56 4E    spell_kill JSR combat_only
$4C2A: 20 E3 4E            JSR prompt_direction
$4C2D: 20 87 82            JSR input_target_xy
$4C30: D0 03               BNE +
$4C32: 4C B9 4E            JMP failed

$4C35: 20 90 4E    +       JSR spell_effect
$4C38: A9 8C               LDA #$8C     ;#tile_whirlpool
$4C3A: 8D FD AD            STA attack_sprite
$4C3D: 4C 2C 4B            JMP launch_attack_spell

$4C40: 20 90 4E    spell_light JSR spell_effect
$4C43: A9 64               LDA #$64     ;#-
$4C45: 85 21               STA light_duration
$4C47: A5 1B               LDA game_mode
$4C49: C9 03               CMP #$03     ;#mode_dungeon
$4C4B: D0 03               BNE +
$4C4D: 20 06 8C            JSR j_dng_neighbor_tiles
$4C50: 4C A7 41    +       JMP done_done

$4C53: 20 56 4E    spell_missile JSR combat_only
$4C56: 20 E3 4E            JSR prompt_direction
$4C59: 20 87 82            JSR input_target_xy
$4C5C: D0 03               BNE +
$4C5E: 4C B9 4E            JMP failed

$4C61: 20 90 4E    +       JSR spell_effect
$4C64: A9 4D               LDA #$4D     ;#tile_attack_small
$4C66: 8D FD AD            STA attack_sprite
$4C69: 4C 2C 4B            JMP launch_attack_spell

$4C6C: 20 90 4E    spell_negate JSR spell_effect
$4C6F: A9 CE               LDA #$CE     ;#aura_negate
$4C71: 4C 1E 4C            JMP set_spell_aura

$4C74: 20 90 4E    spell_open_chest JSR spell_effect
$4C77: A5 1B               LDA game_mode
$4C79: 30 07               BMI +
$4C7B: A9 00               LDA #$00     ;#-
$4C7D: 85 54               STA curr_player
$4C7F: 4C 39 53            JMP try_get_chest

$4C82: 4C 93 7C    +       JMP try_get_chest_combat

$4C85: 20 90 4E    spell_protect JSR spell_effect
$4C88: A9 D0               LDA #$D0     ;#aura_protect
$4C8A: 4C 1E 4C            JMP set_spell_aura

$4C8D: 20 90 4E    spell_quickness JSR spell_effect
$4C90: A9 D1               LDA #$D1     ;#aura_quickness
$4C92: 4C 1E 4C            JMP set_spell_aura

$4C95: A5 1B       spell_resurrect LDA game_mode
$4C97: 10 03               BPL try_resurrect ;not allowed in combat!
$4C99: 4C B9 4E    res_view_fail JMP failed

$4C9C: 20 21 08    try_resurrect JSR j_primm  ;b'WHO-\x00'
$4C9F:                     .BYTE $D7,$C8,$CF,$AD,$00
$4CA4: 20 5D 08            JSR j_getplayernum
$4CA7: D0 03               BNE +
$4CA9: 4C B9 4E            JMP failed

$4CAC: 20 90 4E    +       JSR spell_effect
$4CAF: 20 2D 08            JSR j_get_stats_ptr
$4CB2: A0 12               LDY #$12     ;#player_status
$4CB4: B1 7E               LDA (ptr1),Y
$4CB6: C9 C4               CMP #$C4     ;#status_Dead
$4CB8: F0 03               BEQ +
$4CBA: 4C B9 4E            JMP failed

$4CBD: A9 C7       +       LDA #$C7     ;#status_Good
$4CBF: 91 7E               STA (ptr1),Y
$4CC1: 4C A7 41            JMP done_done

$4CC4: 20 56 4E    spell_sleep JSR combat_only
$4CC7: 20 90 4E            JSR spell_effect
$4CCA: A2 0F               LDX #$0F     ;#foes_max
$4CCC: BD 50 AD    @next   LDA combat_foe_tile,X
$4CCF: F0 16               BEQ @skip
$4CD1: 20 CD 4E            JSR is_undead
$4CD4: F0 11               BEQ @skip
$4CD6: C9 FC               CMP #$FC     ;#tile_balron
$4CD8: F0 0D               BEQ @skip
$4CDA: 20 4E 08            JSR j_rand
$4CDD: DD 40 AD            CMP combat_foe_hp,X
$4CE0: 90 05               BCC @skip
$4CE2: A9 01               LDA #$01     ;#-
$4CE4: 9D 70 AD            STA combat_foe_slept,X
$4CE7: CA          @skip   DEX 
$4CE8: 10 E2               BPL @next
$4CEA: 4C A7 41            JMP done_done

$4CED: 20 56 4E    spell_tremor JSR combat_only
$4CF0: 20 90 4E            JSR spell_effect
$4CF3: 20 FD 85            JSR shake_screen
$4CF6: A2 0F               LDX #$0F     ;#foes_max
$4CF8: BD 50 AD    @next   LDA combat_foe_tile,X
$4CFB: F0 45               BEQ @skip
$4CFD: C9 5E               CMP #$5E     ;#tile_lord_british
$4CFF: F0 41               BEQ @skip
$4D01: BD 40 AD            LDA combat_foe_hp,X
$4D04: C9 C0               CMP #$C0     ;# 192+ hp == immune!
$4D06: B0 3A               BCS @skip
$4D08: 20 4E 08            JSR j_rand
$4D0B: 30 0C               BMI @hit     ;# 2/4 chance
$4D0D: 29 01               AND #$01     ;# 1/4 chance
$4D0F: D0 31               BNE @skip
$4D11: A9 17               LDA #$17     ;#hp_fleeing
$4D13: 9D 40 AD            STA combat_foe_hp,X
$4D16: 4C 42 4D            JMP @skip

$4D19: 86 6A       @hit    STX zp6A
$4D1B: BD 00 AD            LDA combat_foe_cur_x,X
$4D1E: 8D FE AD            STA target_x
$4D21: BD 10 AD            LDA combat_foe_cur_y,X
$4D24: 8D FF AD            STA target_y
$4D27: A9 4F               LDA #$4F     ;#tile_attack_red
$4D29: 8D FD AD            STA attack_sprite
$4D2C: 20 57 08            JSR j_update_view_combat
$4D2F: A9 06               LDA #$06     ;#sound_damage
$4D31: 20 54 08            JSR j_playsfx
$4D34: A9 00               LDA #$00     ;#-
$4D36: 8D FD AD            STA attack_sprite
$4D39: A9 FF               LDA #$FF
$4D3B: 85 5C               STA damage
$4D3D: 20 09 7B            JSR inflict_damage
$4D40: A6 6A               LDX zp6A
$4D42: CA          @skip   DEX 
$4D43: 10 B3               BPL @next
$4D45: 4C A7 41            JMP done_done

$4D48: 20 56 4E    spell_undead JSR combat_only
$4D4B: 20 90 4E            JSR spell_effect
$4D4E: A2 0F               LDX #$0F     ;#foes_max
$4D50: BD 50 AD    @next   LDA combat_foe_tile,X
$4D53: 20 CD 4E            JSR is_undead
$4D56: D0 0A               BNE @skip
$4D58: 20 4E 08            JSR j_rand
$4D5B: 30 05               BMI @skip    ;# 1/2 chance
$4D5D: A9 17               LDA #$17     ;#hp_fleeing
$4D5F: 9D 40 AD            STA combat_foe_hp,X
$4D62: CA          @skip   DEX 
$4D63: 10 EB               BPL @next
$4D65: 4C A7 41            JMP done_done

$4D68: A5 1B       spell_view LDA game_mode
$4D6A: 10 03               BPL +
$4D6C: 4C 99 4C            JMP res_view_fail

$4D6F: 20 90 4E    +       JSR spell_effect
$4D72: 20 E8 57            JSR do_view
$4D75: 4C A7 41            JMP done_done

$4D78: 20 71 4E    spell_wind JSR outdoors_only
$4D7B: 20 E3 4E            JSR prompt_direction
$4D7E: 20 9C 82            JSR input_direction
$4D81: D0 03               BNE +
$4D83: 4C B9 4E            JMP failed

$4D86: 20 90 4E    +       JSR spell_effect
$4D89: A5 78               LDA delta_x
$4D8B: D0 0E               BNE @east_west
$4D8D: A5 79               LDA delta_y
$4D8F: 10 05               BPL @south
$4D91: A9 01               LDA #$01     ;#wind_dir_north
$4D93: 4C A4 4D            JMP @done

$4D96: A9 03       @south  LDA #$03     ;#wind_dir_south
$4D98: 4C A4 4D            JMP @done

$4D9B: 10 05       @east_west BPL @east
$4D9D: A9 00               LDA #$00     ;#wind_dir_west
$4D9F: 4C A4 4D            JMP @done

$4DA2: A9 02       @east   LDA #$02     ;#wind_dir_east
$4DA4: 85 75       @done   STA direction
$4DA6: 4C A7 41            JMP done_done

$4DA9: 20 38 4E    spell_x_it JSR dungeon_only
$4DAC: 20 90 4E            JSR spell_effect
$4DAF: 4C 0D 46            JMP leave_to_world

$4DB2: 20 38 4E    spell_y_up JSR dungeon_only
$4DB5: 20 90 4E            JSR spell_effect
$4DB8: 20 2C 4E            JSR not_abyss
$4DBB: C6 1C               DEC dungeon_level
$4DBD: 10 03               BPL +
$4DBF: 4C 0D 46            JMP leave_to_world

$4DC2: A9 20       +       LDA #$20     ;# 32 attempts
$4DC4: 85 70               STA zp70     ;$zp_attempts
$4DC6: 20 4E 08    @try_random JSR j_rand
$4DC9: 29 07               AND #$07     ;#-
$4DCB: 85 16               STA dest_x
$4DCD: 20 4E 08            JSR j_rand
$4DD0: 29 07               AND #$07     ;#-
$4DD2: 85 17               STA dest_y
$4DD4: 20 96 08            JSR j_gettile_dungeon
$4DD7: F0 09               BEQ @ok
$4DD9: C6 70               DEC zp70     ;$zp_attempts
$4DDB: D0 E9               BNE @try_random
$4DDD: E6 1C               INC dungeon_level
$4DDF: 4C B9 4E            JMP failed

$4DE2: A5 16       @ok     LDA dest_x
$4DE4: 85 10               STA player_xpos
$4DE6: A5 17               LDA dest_y
$4DE8: 85 11               STA player_ypos
$4DEA: 4C A7 41            JMP done_done

$4DED: 20 38 4E    spell_z_down JSR dungeon_only
$4DF0: 20 90 4E            JSR spell_effect
$4DF3: 20 2C 4E            JSR not_abyss
$4DF6: A5 1C               LDA dungeon_level
$4DF8: C9 07               CMP #$07     ;#-
$4DFA: 90 03               BCC +
$4DFC: 20 B9 4E            JSR failed   ;# BUG: stack overflow
$4DFF: E6 1C       +       INC dungeon_level
$4E01: A9 20               LDA #$20     ;# 32 attempts
$4E03: 85 70               STA zp70     ;$zp_attempts
$4E05: 20 4E 08    @try_random JSR j_rand
$4E08: 29 07               AND #$07     ;#-
$4E0A: 85 16               STA dest_x
$4E0C: 20 4E 08            JSR j_rand
$4E0F: 29 07               AND #$07     ;#-
$4E11: 85 17               STA dest_y
$4E13: 20 96 08            JSR j_gettile_dungeon
$4E16: F0 09               BEQ @ok
$4E18: C6 70               DEC zp70     ;$zp_attempts
$4E1A: D0 E9               BNE @try_random
$4E1C: C6 1C               DEC dungeon_level
$4E1E: 4C B9 4E            JMP failed

$4E21: A5 16       @ok     LDA dest_x
$4E23: 85 10               STA player_xpos
$4E25: A5 17               LDA dest_y
$4E27: 85 11               STA player_ypos
$4E29: 4C A7 41            JMP done_done

$4E2C: A5 1A       not_abyss LDA current_location
$4E2E: C9 18               CMP #$18     ;#loc_dng_abyss
$4E30: D0 05               BNE @ok
$4E32: 68                  PLA 
$4E33: 68                  PLA 
$4E34: 4C B9 4E            JMP failed

$4E37: 60          @ok     RTS 

$4E38: A5 1B       dungeon_only LDA game_mode
$4E3A: C9 03               CMP #$03     ;#mode_dungeon
$4E3C: F0 17               BEQ @ok
$4E3E: 20 21 08            JSR j_primm  ;b'DUNGEON ONLY!\n\x00'
$4E41:                     .BYTE $C4,$D5,$CE,$C7,$C5,$CF,$CE,$A0
$4E49:                     .BYTE $CF,$CE,$CC,$D9,$A1,$8D,$00
$4E50: 68                  PLA 
$4E51: 68                  PLA 
$4E52: 4C B9 4E            JMP failed

$4E55: 60          @ok     RTS 

$4E56: A5 1B       combat_only LDA game_mode
$4E58: 30 16               BMI @ok
$4E5A: 20 21 08            JSR j_primm  ;b'COMBAT ONLY!\n\x00'
$4E5D:                     .BYTE $C3,$CF,$CD,$C2,$C1,$D4,$A0,$CF
$4E65:                     .BYTE $CE,$CC,$D9,$A1,$8D,$00
$4E6B: 68                  PLA 
$4E6C: 68                  PLA 
$4E6D: 4C B9 4E            JMP failed

$4E70: 60          @ok     RTS 

$4E71: A5 1B       outdoors_only LDA game_mode
$4E73: C9 01               CMP #$01     ;#mode_world
$4E75: F0 18               BEQ @ok
$4E77: 20 21 08            JSR j_primm  ;b'OUTDOORS ONLY!\n\x00'
$4E7A:                     .BYTE $CF,$D5,$D4,$C4,$CF,$CF,$D2,$D3
$4E82:                     .BYTE $A0,$CF,$CE,$CC,$D9,$A1,$8D,$00
$4E8A: 68                  PLA 
$4E8B: 68                  PLA 
$4E8C: 4C B9 4E            JMP failed

$4E8F: 60          @ok     RTS 

$4E90: AC EF 48    spell_effect LDY current_spell
$4E93: BE 24 49            LDX spell_mp_cost,Y
$4E96: A9 0A               LDA #$0A     ;#sound_cast
$4E98: 20 54 08            JSR j_playsfx
$4E9B: 20 78 08            JSR j_invertview
$4E9E: AD EF 48            LDA current_spell
$4EA1: 18                  CLC 
$4EA2: 69 60               ADC #$60     ;# base pitch
$4EA4: AA                  TAX 
$4EA5: A9 09               LDA #$09     ;#sound_spell_effect
$4EA7: 20 54 08            JSR j_playsfx
$4EAA: 20 78 08            JSR j_invertview
$4EAD: A5 46               LDA magic_aura
$4EAF: C9 CE               CMP #$CE     ;#aura_negate
$4EB1: D0 05               BNE @ok
$4EB3: 68                  PLA 
$4EB4: 68                  PLA 
$4EB5: 4C B9 4E            JMP failed

$4EB8: 60          @ok     RTS 

$4EB9: 20 21 08    failed  JSR j_primm  ;b'FAILED!\n\x00'
$4EBC:                     .BYTE $C6,$C1,$C9,$CC,$C5,$C4,$A1,$8D
$4EC4:                     .BYTE $00
$4EC5: A9 08               LDA #$08     ;#sound_alert
$4EC7: 20 54 08            JSR j_playsfx
$4ECA: 4C 1E 62            JMP cmd_done

$4ECD: C9 9C       is_undead CMP #$9C     ;#tile_ghost
$4ECF: F0 0F               BEQ @yes
$4ED1: C9 BC               CMP #$BC     ;#tile_phantom
$4ED3: F0 0B               BEQ @yes
$4ED5: C9 C4               CMP #$C4     ;#tile_skeleton
$4ED7: F0 07               BEQ @yes
$4ED9: C9 E4               CMP #$E4     ;#tile_liche
$4EDB: F0 03               BEQ @yes
$4EDD: A9 FF       @no     LDA #$FF
$4EDF: 60                  RTS 

$4EE0: A9 00       @yes    LDA #$00     ;#-
$4EE2: 60                  RTS 

$4EE3: 20 21 08    prompt_direction JSR j_primm  ;b'DIRECTION-\x00'
$4EE6:                     .BYTE $C4,$C9,$D2,$C5,$C3,$D4,$C9,$CF
$4EEE:                     .BYTE $CE,$AD,$00
$4EF1: 60                  RTS 

$4EF2: A5 1E       cmd_descend LDA player_transport
$4EF4: C9 18               CMP #$18     ;#tile_balloon
$4EF6: F0 4D               BEQ @balloon
$4EF8: 20 21 08            JSR j_primm  ;b'Descend \x00'
$4EFB:                     .BYTE $C4,$E5,$F3,$E3,$E5,$EE,$E4,$A0
$4F03:                     .BYTE $00
$4F04: A5 1A               LDA current_location
$4F06: C9 01               CMP #$01     ;#loc_castle_britannia
$4F08: F0 61               BEQ @castle_britannia
$4F0A: A5 1B               LDA game_mode
$4F0C: C9 03               CMP #$03     ;#mode_dungeon
$4F0E: F0 03               BEQ @dungeon
$4F10: 4C 12 41            JMP done_what

$4F13: A5 48       @dungeon LDA tile_under_player
$4F15: 29 F0               AND #$F0     ;#dng_tile_type_mask
$4F17: C9 20               CMP #$20     ;#dng_tile_ladder_d
$4F19: F0 07               BEQ +
$4F1B: C9 30               CMP #$30     ;#dng_tile_ladder_du
$4F1D: F0 03               BEQ +
$4F1F: 4C 12 41            JMP done_what

$4F22: E6 1C       +       INC dungeon_level
$4F24: 20 21 08            JSR j_primm  ;b'down!\nTo level \x00'
$4F27:                     .BYTE $E4,$EF,$F7,$EE,$A1,$8D,$D4,$EF
$4F2F:                     .BYTE $A0,$EC,$E5,$F6,$E5,$EC,$A0,$00
$4F37: 18                  CLC 
$4F38: A5 1C               LDA dungeon_level
$4F3A: 69 01               ADC #$01     ;#-
$4F3C: 20 66 08            JSR j_printdigit
$4F3F: 20 F7 85            JSR print_newline
$4F42: 4C 1E 62            JMP cmd_done

$4F45: 20 21 08    @balloon JSR j_primm  ;b'Land Balloon\n\x00'
$4F48:                     .BYTE $CC,$E1,$EE,$E4,$A0,$C2,$E1,$EC
$4F50:                     .BYTE $EC,$EF,$EF,$EE,$8D,$00
$4F56: A5 48               LDA tile_under_player
$4F58: C9 04               CMP #$04     ;#tile_grass
$4F5A: D0 09               BNE @not_here
$4F5C: A9 00               LDA #$00     ;#-
$4F5E: 85 74               STA movement_mode
$4F60: 85 1D               STA balloon_flying
$4F62: 4C 1E 62            JMP cmd_done

$4F65: 4C 78 41    @not_here JMP done_not_here

$4F68: 4C 12 41    @nope   JMP done_what

$4F6B: A5 1E       @castle_britannia LDA player_transport
$4F6D: C9 1F               CMP #$1F     ;#tile_walk
$4F6F: F0 03               BEQ +
$4F71: 4C 39 41            JMP done_only_on_foot

$4F74: A5 48       +       LDA tile_under_player
$4F76: C9 1C               CMP #$1C     ;#tile_ladder_down
$4F78: D0 EE               BNE @nope
$4F7A: A5 11               LDA player_ypos
$4F7C: C9 02               CMP #$02     ;#-
$4F7E: F0 26               BEQ @to_dungeon
$4F80: 20 21 08            JSR j_primm  ;b'to\nfirst floor!\n\x00'
$4F83:                     .BYTE $F4,$EF,$8D,$E6,$E9,$F2,$F3,$F4
$4F8B:                     .BYTE $A0,$E6,$EC,$EF,$EF,$F2,$A1,$8D
$4F93:                     .BYTE $00
$4F94: A9 00               LDA #$00     ;#music_off
$4F96: 20 20 AF            JSR music_ctl
$4F99: A9 C1               LDA #$C1     ;#char_A
$4F9B: 20 03 52            JSR load_letter_location
$4F9E: A9 01               LDA #$01     ;#music_explore
$4FA0: 20 20 AF            JSR music_ctl
$4FA3: 4C 1E 62            JMP cmd_done

$4FA6: 20 21 08    @to_dungeon JSR j_primm  ;b'into\nthe depths!\n\x00'
$4FA9:                     .BYTE $E9,$EE,$F4,$EF,$8D,$F4,$E8,$E5
$4FB1:                     .BYTE $A0,$E4,$E5,$F0,$F4,$E8,$F3,$A1
$4FB9:                     .BYTE $8D,$00
$4FBB: A9 05               LDA #$05     ;# start in the middle, not usual 1,1
$4FBD: 85 7A               STA temp_x
$4FBF: 85 7B               STA temp_y
$4FC1: A9 EF               LDA #$EF     ;# hythloth longitude
$4FC3: 85 18               STA britannia_x
$4FC5: A9 F0               LDA #$F0     ;# hythloth latitude
$4FC7: 85 19               STA britannia_y
$4FC9: A9 17               LDA #$17     ;#loc_dng_hythloth
$4FCB: 85 1A               STA current_location
$4FCD: 4C 7D 50            JMP begin_dng_load

$4FD0: 20 21 08    cmd_enter JSR j_primm  ;b'Enter \x00'
$4FD3:                     .BYTE $C5,$EE,$F4,$E5,$F2,$A0,$00
$4FDA: A5 1A               LDA current_location
$4FDC: F0 03               BEQ +        ;only in world
$4FDE: 4C 12 41            JMP done_what

$4FE1: A2 20       +       LDX #$20     ;#object_last
$4FE3: CA          @next   DEX 
$4FE4: 10 03               BPL +
$4FE6: 4C 12 41            JMP done_what

$4FE9: BD 9A 51    +       LDA location_map_x,X
$4FEC: C5 10               CMP player_xpos
$4FEE: D0 F3               BNE @next
$4FF0: BD BA 51            LDA location_map_y,X
$4FF3: C5 11               CMP player_ypos
$4FF5: D0 EC               BNE @next
$4FF7: 86 1A               STX current_location
$4FF9: E6 1A               INC current_location
$4FFB: A5 10               LDA player_xpos
$4FFD: 85 18               STA britannia_x
$4FFF: A5 11               LDA player_ypos
$5001: 85 19               STA britannia_y
$5003: A5 48               LDA tile_under_player
$5005: C9 09               CMP #$09     ;#tile_dungeon_entrance
$5007: F0 49               BEQ enter_dungeon
$5009: C9 0A               CMP #$0A     ;#tile_towne
$500B: D0 03               BNE +
$500D: 4C D3 50            JMP print_towne

$5010: C9 0B       +       CMP #$0B     ;#tile_castle
$5012: D0 03               BNE +
$5014: 4C 3B 51            JMP print_castle

$5017: C9 0C       +       CMP #$0C     ;#tile_village
$5019: D0 03               BNE +
$501B: 4C 2B 51            JMP print_village

$501E: C9 0E       +       CMP #$0E     ;#tile_castle_center
$5020: D0 03               BNE +
$5022: 4C 3B 51            JMP print_castle

$5025: C9 1D       +       CMP #$1D     ;#tile_ruin
$5027: D0 03               BNE +
$5029: 4C C6 50            JMP print_ruin

$502C: C9 1E       +       CMP #$1E     ;#tile_shrine
$502E: D0 03               BNE +
$5030: 4C 66 51            JMP print_shrine

$5033: C9 46       +       CMP #$46     ;#tile_field_fire
$5035: F0 07               BEQ enter_abyss
$5037: A9 00               LDA #$00     ;#location_world
$5039: 85 1A               STA current_location
$503B: 4C 12 41            JMP done_what

$503E: AD 0E AB    enter_abyss LDA bell_book_candle
$5041: C9 77               CMP #$77     ;#-
$5043: F0 07               BEQ +
$5045: A9 00               LDA #$00     ;#location_world
$5047: 85 1A               STA current_location
$5049: 4C 89 41            JMP done_cant

$504C: 20 DA 51    +       JSR print_location_name
$504F: 4C 62 50            JMP check_on_foot

$5052: 20 21 08    enter_dungeon JSR j_primm  ;b'dungeon!\n\x00'
$5055:                     .BYTE $E4,$F5,$EE,$E7,$E5,$EF,$EE,$A1
$505D:                     .BYTE $8D,$00
$505F: 20 DA 51            JSR print_location_name
$5062: A5 1E       check_on_foot LDA player_transport
$5064: C9 1F               CMP #$1F     ;#tile_walk
$5066: F0 07               BEQ +
$5068: A9 00               LDA #$00     ;#-
$506A: 85 1A               STA current_location
$506C: 4C 39 41            JMP done_only_on_foot

$506F: A9 01       +       LDA #$01     ;# start at 1,1
$5071: 85 7A               STA temp_x
$5073: 85 7B               STA temp_y
$5075: A9 00               LDA #$00     ;#music_off
$5077: 20 20 AF            JSR music_ctl
$507A: 20 E9 51            JSR file_write_temp_map
$507D: A9 00       begin_dng_load LDA #$00     ;#music_off
$507F: 20 20 AF            JSR music_ctl
$5082: A9 04               LDA #$04     ;#disk_dungeon
$5084: 20 42 08            JSR j_request_disk
$5087: A9 CC               LDA #$CC     ;#char_L
$5089: A2 95               LDX #$95     ;#file_id_dung
$508B: 20 00 A1            JSR j_fileio
$508E: 20 AD 50            JSR load_map_dungeon
$5091: A9 03               LDA #$03     ;#mode_dungeon
$5093: 85 1B               STA game_mode
$5095: A9 01               LDA #$01     ;#dng_dir_east
$5097: 85 20               STA dng_direction
$5099: A5 7A               LDA temp_x
$509B: 85 10               STA player_xpos
$509D: A5 7B               LDA temp_y
$509F: 85 11               STA player_ypos
$50A1: A9 00               LDA #$00     ;#-
$50A3: 85 1C               STA dungeon_level
$50A5: A9 C4               LDA #$C4     ;#music_Dungeon
$50A7: 20 20 AF            JSR music_ctl
$50AA: 4C 1E 62            JMP cmd_done

$50AD: 18          load_map_dungeon CLC 
$50AE: A5 1A               LDA current_location
$50B0: 38                  SEC 
$50B1: E9 11               SBC #$11     ;#loc_dng_first
$50B3: 18                  CLC 
$50B4: 69 8C               ADC #$8C     ;#file_id_dng0
$50B6: AA                  TAX 
$50B7: A9 CC               LDA #$CC     ;#char_L
$50B9: 20 00 A1            JSR j_fileio
$50BC: A2 00               LDX #$00     ;#-
$50BE: 8A                  TXA 
$50BF: 9D 00 AC    @reset_map STA object_tile_sprite,X
$50C2: E8                  INX 
$50C3: D0 FA               BNE @reset_map
$50C5: 60                  RTS 

$50C6: 20 21 08    print_ruin JSR j_primm  ;b'ruin!\n\x00'
$50C9:                     .BYTE $F2,$F5,$E9,$EE,$A1,$8D,$00
$50D0: 4C DE 50            JMP enter_towne

$50D3: 20 21 08    print_towne JSR j_primm  ;b'towne!\n\x00'
$50D6:                     .BYTE $F4,$EF,$F7,$EE,$E5,$A1,$8D,$00
$50DE: A9 00       enter_towne LDA #$00     ;#music_off
$50E0: 20 20 AF            JSR music_ctl
$50E3: 20 DA 51            JSR print_location_name
$50E6: 20 F6 51            JSR load_towne
$50E9: A9 0F               LDA #$0F     ;#-
$50EB: 85 11               STA player_ypos
$50ED: A9 01               LDA #$01     ;#-
$50EF: 85 10               STA player_xpos
$50F1: A5 1A               LDA current_location
$50F3: 38                  SEC 
$50F4: E9 05               SBC #$05     ;#towne_first
$50F6: C9 08               CMP #$08     ;#num_townes
$50F8: B0 29               BCS @play_towne_music
$50FA: 85 58               STA zp58     ;$zp_index
$50FC: A5 1F               LDA party_size
$50FE: 85 54               STA curr_player
$5100: A5 54       @check_npc_joined LDA curr_player
$5102: C9 02               CMP #$02     ;#-
$5104: 90 1D               BCC @play_towne_music
$5106: 20 2D 08            JSR j_get_stats_ptr
$5109: A0 11               LDY #$11     ;#player_class_index
$510B: B1 7E               LDA (ptr1),Y
$510D: C5 58               CMP zp58     ;$zp_index
$510F: F0 05               BEQ @remove_joinable_npc
$5111: C6 54               DEC curr_player
$5113: 4C 00 51            JMP @check_npc_joined

$5116: A9 00       @remove_joinable_npc LDA #$00     ;#-
$5118: A2 1F               LDX #$1F     ;#object_max
$511A: 9D 60 AC            STA object_tile_type,X
$511D: 9D 00 AC            STA object_tile_sprite,X
$5120: 9D C0 AC            STA object_dng_level,X
$5123: A9 D4       @play_towne_music LDA #$D4     ;#music_Towne
$5125: 20 20 AF            JSR music_ctl
$5128: 4C 1E 62            JMP cmd_done

$512B: 20 21 08    print_village JSR j_primm  ;b'village!\n\x00'
$512E:                     .BYTE $F6,$E9,$EC,$EC,$E1,$E7,$E5,$A1
$5136:                     .BYTE $8D,$00
$5138: 4C DE 50            JMP enter_towne

$513B: A9 00       print_castle LDA #$00     ;#music_off
$513D: 20 20 AF            JSR music_ctl
$5140: 20 21 08            JSR j_primm  ;b'castle!\n\x00'
$5143:                     .BYTE $E3,$E1,$F3,$F4,$EC,$E5,$A1,$8D
$514B:                     .BYTE $00
$514C: 20 DA 51            JSR print_location_name
$514F: 20 F6 51            JSR load_towne
$5152: A9 0F               LDA #$0F     ;#-
$5154: 85 10               STA player_xpos
$5156: A9 1E               LDA #$1E     ;#-
$5158: 85 11               STA player_ypos
$515A: A9 00               LDA #$00     ;#-
$515C: 85 1C               STA dungeon_level
$515E: A9 C3               LDA #$C3     ;#music_Castles
$5160: 20 20 AF            JSR music_ctl
$5163: 4C 1E 62            JMP cmd_done

$5166: 20 21 08    print_shrine JSR j_primm  ;b'the\nshrine of\n\x00'
$5169:                     .BYTE $F4,$E8,$E5,$8D,$F3,$E8,$F2,$E9
$5171:                     .BYTE $EE,$E5,$A0,$EF,$E6,$8D,$00
$5178: A5 1A               LDA current_location
$517A: 18                  CLC 
$517B: 69 7E               ADC #$7E     ;#string_shrines
$517D: 20 7E 08            JSR j_printstring
$5180: 20 F7 85            JSR print_newline
$5183: A9 00       load_shrine LDA #$00     ;#music_off
$5185: 20 20 AF            JSR music_ctl
$5188: A9 CC               LDA #$CC     ;#char_L
$518A: A2 82               LDX #$82     ;#file_id_shri ;shrine
$518C: 20 00 A1            JSR j_fileio
$518F: 20 00 88            JSR j_overlay_entry
$5192: A9 01               LDA #$01     ;#music_explore
$5194: 20 20 AF            JSR music_ctl
$5197: 4C 1E 62            JMP cmd_done

$519A:             location_map_x .BYTE $56,$DA,$1C,$92,$E8,$52,$24,$3A
$51A2:                     .BYTE $9F,$6A,$16,$BB,$62,$88,$C9,$88
$51AA:                     .BYTE $F0,$5B,$48,$7E,$9C,$3A,$EF,$E9
$51B2:                     .BYTE $E9,$80,$24,$49,$CD,$51,$E7,$E7
$51BA:             location_map_y .BYTE $6B,$6B,$32,$F1,$87,$6A,$DE,$2B
$51C2:                     .BYTE $14,$B8,$80,$A9,$91,$9E,$3B,$5A
$51CA:                     .BYTE $49,$43,$A8,$14,$1B,$66,$F0,$E9
$51D2:                     .BYTE $42,$5C,$E5,$0B,$2D,$CF,$D8,$D8
-                                                                           
$51DA: 20 F7 85    print_location_name JSR print_newline
$51DD: A5 1A               LDA current_location
$51DF: 18                  CLC 
$51E0: 69 7E               ADC #$7E     ;#string_locations
$51E2: 20 7B 08            JSR j_centerstring
$51E5: 20 F7 85            JSR print_newline
$51E8: 60                  RTS 

$51E9: A9 02       file_write_temp_map LDA #$02     ;#disk_britannia
$51EB: 20 42 08            JSR j_request_disk
$51EE: A9 D3               LDA #$D3     ;#char_S
$51F0: A2 7E               LDX #$7E     ;#file_id_stmp ;temp_map
$51F2: 20 00 A1            JSR j_fileio
$51F5: 60                  RTS 

$51F6: 20 E9 51    load_towne JSR file_write_temp_map
$51F9: A9 03               LDA #$03     ;#disk_towne
$51FB: 20 42 08            JSR j_request_disk
$51FE: A5 1A               LDA current_location
$5200: 18                  CLC 
$5201: 69 C0               ADC #$C0     ;#char_at_sign
$5203: C9 C0       load_letter_location CMP #$C0     ;#char_at_sign
$5205: D0 05               BNE @get_file_id
$5207: A9 6C               LDA #$6C     ;# map file 6C is castle floor 2
$5209: 4C 12 52            JMP @load_map

$520C: 38          @get_file_id SEC 
$520D: E9 C0               SBC #$C0     ;#char_at_sign
$520F: 18                  CLC 
$5210: 69 5B               ADC #$5B     ; map files 5c..6b are locations 1..16
$5212: AA          @load_map TAX 
$5213: A9 CC               LDA #$CC     ;#char_L
$5215: 20 00 A1            JSR j_fileio
$5218: A2 00               LDX #$00     ;#-
$521A: BD 00 8B    @clear_buffers LDA map_buf,X
$521D: 9D 00 E8            STA gem_buf,X
$5220: BD 00 8C            LDA j_dng_check_update,X
$5223: 9D 00 E9            STA fE900,X
$5226: BD 00 8D            LDA f8D00,X
$5229: 9D 00 EA            STA fEA00,X
$522C: BD 00 8E            LDA f8E00,X
$522F: 9D 00 EB            STA fEB00,X
$5232: BD 00 8F            LDA f8F00,X
$5235: 9D 00 AC            STA object_tile_sprite,X
$5238: E8                  INX 
$5239: D0 DF               BNE @clear_buffers
$523B: A9 02               LDA #$02     ;#mode_towne
$523D: 85 1B               STA game_mode
$523F: 60                  RTS 

$5240: 4C 12 41    fire_at_what JMP done_what

$5243: 20 21 08    cmd_fire JSR j_primm  ;b'Fire-\x00'
$5246:                     .BYTE $C6,$E9,$F2,$E5,$AD,$00
$524C: A5 1E               LDA player_transport
$524E: C9 10               CMP #$10     ;#tile_ship_first
$5250: 90 EE               BCC fire_at_what
$5252: C9 14               CMP #$14     ;#tile_ship_last
$5254: B0 EA               BCS fire_at_what
$5256: 20 9C 82            JSR input_direction
$5259: D0 03               BNE +
$525B: 4C 06 41            JMP done_pass

$525E: A5 78       +       LDA delta_x
$5260: F0 27               BEQ @moving_n_s
$5262: A5 1E               LDA player_transport
$5264: C9 11               CMP #$11     ;#tile_ship_north
$5266: F0 2E               BEQ @do_fire
$5268: C9 13               CMP #$13     ;#tile_ship_south
$526A: F0 2A               BEQ @do_fire
$526C: 20 21 08    @only_broadsides JSR j_primm  ;b'ONLY BROADSIDES!\n\x00'
$526F:                     .BYTE $CF,$CE,$CC,$D9,$A0,$C2,$D2,$CF
$5277:                     .BYTE $C1,$C4,$D3,$C9,$C4,$C5,$D3,$A1
$527F:                     .BYTE $8D,$00
$5281: A9 02               LDA #$02     ;#sound_what
$5283: 20 54 08            JSR j_playsfx
$5286: 4C 1E 62            JMP cmd_done

$5289: A5 1E       @moving_n_s LDA player_transport
$528B: C9 10               CMP #$10     ;#tile_ship_west
$528D: F0 07               BEQ @do_fire
$528F: C9 12               CMP #$12     ;#tile_ship_east
$5291: F0 03               BEQ @do_fire
$5293: 4C 6C 52            JMP @only_broadsides

$5296: A9 03       @do_fire LDA #$03     ;#sound_cannon
$5298: 20 54 08            JSR j_playsfx
$529B: A9 03               LDA #$03     ;#range_missile_travel
$529D: 85 6A               STA zp6A
$529F: 20 3A 83    @next   JSR any_obj_at_temp_xy
$52A2: 10 26               BPL @cannon_hit
$52A4: 20 87 08            JSR j_gettile_opposite
$52A7: 48                  PHA 
$52A8: A9 4D               LDA #$4D     ;#tile_attack_small
$52AA: 91 7E               STA (ptr1),Y
$52AC: 20 63 08            JSR j_animate_view
$52AF: 20 87 08            JSR j_gettile_opposite
$52B2: 68                  PLA 
$52B3: 91 7E               STA (ptr1),Y
$52B5: 18                  CLC 
$52B6: A5 7A               LDA temp_x
$52B8: 65 78               ADC delta_x
$52BA: 85 7A               STA temp_x
$52BC: 18                  CLC 
$52BD: A5 7B               LDA temp_y
$52BF: 65 79               ADC delta_y
$52C1: 85 7B               STA temp_y
$52C3: C6 6A               DEC zp6A
$52C5: D0 D8               BNE @next
$52C7: 4C 1E 62            JMP cmd_done

$52CA: 86 59       @cannon_hit STX zp59
$52CC: 20 87 08            JSR j_gettile_opposite
$52CF: 48                  PHA 
$52D0: A9 4F               LDA #$4F     ;#tile_attack_red
$52D2: 91 7E               STA (ptr1),Y
$52D4: 20 63 08            JSR j_animate_view
$52D7: A9 06               LDA #$06     ;#sound_damage
$52D9: 20 54 08            JSR j_playsfx
$52DC: 20 87 08            JSR j_gettile_opposite
$52DF: 68                  PLA 
$52E0: 91 7E               STA (ptr1),Y
$52E2: A5 59               LDA zp59
$52E4: C9 08               CMP #$08     ;# characters roll chance, objects instant obliterate
$52E6: B0 07               BCS @destroyed
$52E8: 20 4E 08            JSR j_rand
$52EB: 29 03               AND #$03     ;# 1/4 chance
$52ED: D0 11               BNE @done
$52EF: A9 00       @destroyed LDA #$00     ;#-
$52F1: A6 59               LDX zp59
$52F3: BC 60 AC            LDY object_tile_type,X
$52F6: C0 5E               CPY #$5E     ;#tile_lord_british
$52F8: F0 06               BEQ @done
$52FA: 9D 60 AC            STA object_tile_type,X
$52FD: 9D 00 AC            STA object_tile_sprite,X
$5300: 4C 1E 62    @done   JMP cmd_done

$5303: 20 21 08    cmd_get_chest JSR j_primm  ;b'Get chest, who\nwill open-\x00'
$5306:                     .BYTE $C7,$E5,$F4,$A0,$E3,$E8,$E5,$F3
$530E:                     .BYTE $F4,$AC,$A0,$F7,$E8,$EF,$8D,$F7
$5316:                     .BYTE $E9,$EC,$EC,$A0,$EF,$F0,$E5,$EE
$531E:                     .BYTE $AD,$00
$5320: 20 5D 08            JSR j_getplayernum
$5323: D0 03               BNE +
$5325: 4C 97 41            JMP done_aborted

$5328: C5 1F       +       CMP party_size
$532A: 90 05               BCC +
$532C: F0 03               BEQ +
$532E: 4C 24 41            JMP done_not_a_player

$5331: 20 AF 7D    +       JSR is_awake
$5334: F0 03               BEQ try_get_chest
$5336: 4C CD 41            JMP done_disabled

$5339: A5 1B       try_get_chest LDA game_mode
$533B: C9 03               CMP #$03     ;#mode_dungeon
$533D: F0 57               BEQ get_in_dungeon
$533F: A5 48               LDA tile_under_player
$5341: C9 3C               CMP #$3C     ;#tile_chest
$5343: F0 03               BEQ +
$5345: 4C 78 41            JMP done_not_here

$5348: A5 1A       +       LDA current_location
$534A: F0 23               BEQ get_in_world
$534C: 20 90 08            JSR j_get_player_tile
$534F: C9 3C               CMP #$3C     ;#tile_chest
$5351: D0 1C               BNE get_in_world
$5353: A9 3E               LDA #$3E     ;#tile_floor_brick
$5355: 91 7C               STA (ptr2),Y
$5357: A0 00               LDY #$00     ;#virtue_honesty
$5359: A9 01               LDA #$01     ;#-
$535B: 20 72 84            JSR dec_virtue
$535E: A0 03               LDY #$03     ;#virtue_justice
$5360: A9 01               LDA #$01     ;#-
$5362: 20 72 84            JSR dec_virtue
$5365: A0 05               LDY #$05     ;#virtue_honor
$5367: A9 01               LDA #$01     ;#-
$5369: 20 72 84            JSR dec_virtue
$536C: 4C 93 53            JMP get_chest

$536F: A2 1F       get_in_world LDX #$1F     ;#object_max
$5371: BD 60 AC    @next   LDA object_tile_type,X
$5374: C9 3C               CMP #$3C     ;#tile_chest
$5376: D0 0E               BNE @skip
$5378: BD 20 AC            LDA object_xpos,X
$537B: C5 10               CMP player_xpos
$537D: D0 07               BNE @skip
$537F: BD 40 AC            LDA object_ypos,X
$5382: C5 11               CMP player_ypos
$5384: F0 05               BEQ @found_chest
$5386: CA          @skip   DEX 
$5387: 10 E8               BPL @next
$5389: 30 08               BMI get_chest
$538B: A9 00       @found_chest LDA #$00     ;#-
$538D: 9D 60 AC            STA object_tile_type,X
$5390: 9D 00 AC            STA object_tile_sprite,X
$5393: 4C AE 53    get_chest JMP do_get_chest

$5396: A5 48       get_in_dungeon LDA tile_under_player
$5398: C9 40               CMP #$40     ;#dng_tile_chest
$539A: F0 03               BEQ +
$539C: 4C 78 41            JMP done_not_here

$539F: A5 10       +       LDA player_xpos
$53A1: 85 16               STA dest_x
$53A3: A5 11               LDA player_ypos
$53A5: 85 17               STA dest_y
$53A7: 20 96 08            JSR j_gettile_dungeon
$53AA: A9 00               LDA #$00     ;#-
$53AC: 91 7E               STA (ptr1),Y
$53AE: 20 4E 08    do_get_chest JSR j_rand
$53B1: 10 03               BPL @trapped
$53B3: 4C 70 54            JMP collect_gold

$53B6: 29 03       @trapped AND #$03     ;#-
$53B8: 85 5A               STA zp5A     ;$zp_trap_type
$53BA: 20 4E 08            JSR j_rand   ;1/16 bomb, 3/16 poison, 3/16 sleep, 9/16 acid
$53BD: 25 5A               AND zp5A     ;$zp_trap_type
$53BF: 85 5A               STA zp5A     ;$zp_trap_type
$53C1: D0 0B               BNE +
$53C3: 20 21 08            JSR j_primm  ;b'ACID\x00'
$53C6:                     .BYTE $C1,$C3,$C9,$C4,$00
$53CB: 4C F7 53            JMP @try_evade

$53CE: C9 01       +       CMP #$01     ;#trap_sleep
$53D0: D0 0C               BNE +
$53D2: 20 21 08            JSR j_primm  ;b'SLEEP\x00'
$53D5:                     .BYTE $D3,$CC,$C5,$C5,$D0,$00
$53DB: 4C F7 53            JMP @try_evade

$53DE: C9 02       +       CMP #$02     ;#trap_poison
$53E0: D0 0D               BNE +
$53E2: 20 21 08            JSR j_primm  ;b'POISON\x00'
$53E5:                     .BYTE $D0,$CF,$C9,$D3,$CF,$CE,$00
$53EC: 4C F7 53            JMP @try_evade

$53EF: 20 21 08    +       JSR j_primm  ;b'BOMB\x00'
$53F2:                     .BYTE $C2,$CF,$CD,$C2,$00
$53F7: 20 21 08    @try_evade JSR j_primm  ;b' TRAP!\n\x00'
$53FA:                     .BYTE $A0,$D4,$D2,$C1,$D0,$A1,$8D,$00
$5402: A5 54               LDA curr_player
$5404: F0 18               BEQ trap_evaded
$5406: 20 2D 08            JSR j_get_stats_ptr
$5409: A0 14               LDY #$14     ;#player_dexterity
$540B: B1 7E               LDA (ptr1),Y
$540D: 20 32 84            JSR decode_bcd_value
$5410: 18                  CLC 
$5411: 69 19               ADC #$19     ;# DEX + 25
$5413: 85 59               STA zp59
$5415: A9 64               LDA #$64     ;#-
$5417: 20 03 7E            JSR rand_modulo
$541A: C5 59               CMP zp59
$541C: B0 14               BCS check_acid
$541E: 20 21 08    trap_evaded JSR j_primm  ;b'EVADED!\n\x00'
$5421:                     .BYTE $C5,$D6,$C1,$C4,$C5,$C4,$A1,$8D
$5429:                     .BYTE $00
$542A: A9 08               LDA #$08     ;#sound_alert
$542C: 20 54 08            JSR j_playsfx
$542F: 4C 70 54            JMP collect_gold

$5432: A5 5A       check_acid LDA zp5A     ;$zp_trap_type
$5434: D0 06               BNE @check_sleep
$5436: 20 6B 85            JSR burn_player
$5439: 4C 70 54            JMP collect_gold

$543C: C9 01       @check_sleep CMP #$01     ;#trap_sleep
$543E: D0 1A               BNE @check_poison
$5440: 20 2D 08            JSR j_get_stats_ptr
$5443: A0 12               LDY #$12     ;#player_status
$5445: A9 D3               LDA #$D3     ;#status_Sleep
$5447: 91 7E               STA (ptr1),Y
$5449: 20 EB 85            JSR hilight_damaged_plr
$544C: A5 1B               LDA game_mode
$544E: 10 20               BPL collect_gold
$5450: A9 38               LDA #$38     ;#tile_human_prone
$5452: A6 54               LDX curr_player
$5454: 9D 9F AD            STA combat_player_tile-1,X
$5457: 4C 70 54            JMP collect_gold

$545A: C9 02       @check_poison CMP #$02     ;#trap_poison
$545C: D0 0F               BNE check_bomb
$545E: 20 2D 08            JSR j_get_stats_ptr
$5461: A0 12               LDY #$12     ;#player_status
$5463: A9 D0               LDA #$D0     ;#status_Poison
$5465: 91 7E               STA (ptr1),Y
$5467: 20 EB 85            JSR hilight_damaged_plr
$546A: 4C 70 54            JMP collect_gold

$546D: 20 7A 85    check_bomb JSR damage_party
-                                                                           
$5470: 20 21 08    collect_gold JSR j_primm  ;b'THE CHEST HOLDS:\n\x00'
$5473:                     .BYTE $D4,$C8,$C5,$A0,$C3,$C8,$C5,$D3
$547B:                     .BYTE $D4,$A0,$C8,$CF,$CC,$C4,$D3,$BA
$5483:                     .BYTE $8D,$00
$5485: A9 64               LDA #$64     ;#-
$5487: 20 03 7E            JSR rand_modulo
$548A: 20 1A 84            JSR encode_bcd_value
$548D: 20 26 85            JSR inc_party_gold
$5490: A5 5A               LDA zp5A     ;$zp_amount
$5492: 20 33 08            JSR j_printbcd
$5495: 20 21 08            JSR j_primm  ;b'-GOLD!\n\x00'
$5498:                     .BYTE $AD,$C7,$CF,$CC,$C4,$A1,$8D,$00
$54A0: 4C 1E 62            JMP cmd_done

$54A3: 20 21 08    cmd_hole_up JSR j_primm  ;b'Hole up & camp\n\x00'
$54A6:                     .BYTE $C8,$EF,$EC,$E5,$A0,$F5,$F0,$A0
$54AE:                     .BYTE $A6,$A0,$E3,$E1,$ED,$F0,$8D,$00
$54B6: A5 1A               LDA current_location
$54B8: F0 09               BEQ @check_transport ;loc_world
$54BA: A5 1B               LDA game_mode
$54BC: C9 03               CMP #$03     ;#mode_dungeon
$54BE: F0 03               BEQ @check_transport
$54C0: 4C 78 41            JMP done_not_here

$54C3: A5 1E       @check_transport LDA player_transport
$54C5: C9 1F               CMP #$1F     ;#tile_walk
$54C7: F0 18               BEQ @load_file_camp
$54C9: 20 21 08            JSR j_primm  ;b'MUST BE ON FOOT!\n\x00'
$54CC:                     .BYTE $CD,$D5,$D3,$D4,$A0,$C2,$C5,$A0
$54D4:                     .BYTE $CF,$CE,$A0,$C6,$CF,$CF,$D4,$A1
$54DC:                     .BYTE $8D,$00
$54DE: 4C 1E 62            JMP cmd_done

$54E1: A9 00       @load_file_camp LDA #$00     ;#music_off
$54E3: 20 20 AF            JSR music_ctl
$54E6: A9 CC               LDA #$CC     ;#char_L
$54E8: A2 85               LDX #$85     ;#file_id_camp 
$54EA: 20 00 A1            JSR j_fileio
$54ED: 20 00 88            JSR j_overlay_entry
$54F0: 20 45 08            JSR j_update_status
$54F3: A9 01               LDA #$01     ;#music_explore
$54F5: 20 20 AF            JSR music_ctl
$54F8: A5 1B               LDA game_mode
$54FA: C9 03               CMP #$03     ;#mode_dungeon
$54FC: D0 03               BNE +
$54FE: 20 06 8C            JSR j_dng_neighbor_tiles
$5501: 4C 1E 62    +       JMP cmd_done

$5504: 20 21 08    cmd_ignite JSR j_primm  ;b'Ignite torch!\n\x00'
$5507:                     .BYTE $C9,$E7,$EE,$E9,$F4,$E5,$A0,$F4
$550F:                     .BYTE $EF,$F2,$E3,$E8,$A1,$8D,$00
$5516: A0 08               LDY #$08     ;#party_stat_torches
$5518: 20 50 84            JSR dec_stat
$551B: B0 03               BCS +
$551D: 4C B7 41            JMP done_have_none

$5520: A9 64       +       LDA #$64     ;#-
$5522: 85 21               STA light_duration
$5524: A5 1B               LDA game_mode
$5526: C9 03               CMP #$03     ;#mode_dungeon
$5528: D0 03               BNE +
$552A: 20 06 8C            JSR j_dng_neighbor_tiles
$552D: 4C 1E 62    +       JMP cmd_done

$5530: 20 21 08    cmd_jimmy_lock JSR j_primm  ;b'Jimmy lock-\x00'
$5533:                     .BYTE $CA,$E9,$ED,$ED,$F9,$A0,$EC,$EF
$553B:                     .BYTE $E3,$EB,$AD,$00
$553F: 20 9C 82            JSR input_direction
$5542: A5 1B               LDA game_mode
$5544: C9 01               CMP #$01     ;#mode_world
$5546: D0 03               BNE +
$5548: 4C 78 41            JMP done_not_here

$554B: 20 93 08    +       JSR j_gettile_towne
$554E: C9 3A               CMP #$3A     ;#tile_door_locked
$5550: F0 03               BEQ +
$5552: 4C 78 41            JMP done_not_here

$5555: A0 0A       +       LDY #$0A     ;#party_stat_keys
$5557: 20 50 84            JSR dec_stat
$555A: B0 03               BCS +
$555C: 4C B7 41            JMP done_have_none

$555F: A9 3B       +       LDA #$3B     ;#tile_door_unlocked
$5561: A0 00               LDY #$00     ;#-
$5563: 91 7C               STA (ptr2),Y
$5565: 4C A7 41            JMP done_done

$5568: 20 21 08    cmd_klimb JSR j_primm  ;b'Klimb \x00'
$556B:                     .BYTE $CB,$EC,$E9,$ED,$E2,$A0,$00
$5572: A5 1A               LDA current_location
$5574: F0 43               BEQ @world
$5576: C9 01               CMP #$01     ;#loc_castle_britannia
$5578: F0 5B               BEQ @castle_britannia
$557A: A5 1B               LDA game_mode
$557C: C9 03               CMP #$03     ;#mode_dungeon
$557E: F0 03               BEQ @dungeon
$5580: 4C 12 41    @deny   JMP done_what

$5583: A5 48       @dungeon LDA tile_under_player
$5585: 29 F0               AND #$F0     ;#dng_tile_type_mask
$5587: C9 10               CMP #$10     ;#dng_tile_ladder_u
$5589: F0 04               BEQ +
$558B: C9 30               CMP #$30     ;#dng_tile_ladder_du
$558D: D0 F1               BNE @deny
$558F: 20 21 08    +       JSR j_primm  ;b'up!\n\x00'
$5592:                     .BYTE $F5,$F0,$A1,$8D,$00
$5597: C6 1C               DEC dungeon_level
$5599: 10 03               BPL +
$559B: 4C 0D 46            JMP leave_to_world

$559E: 20 21 08    +       JSR j_primm  ;b'To level \x00'
$55A1:                     .BYTE $D4,$EF,$A0,$EC,$E5,$F6,$E5,$EC
$55A9:                     .BYTE $A0,$00
$55AB: 18                  CLC 
$55AC: A5 1C               LDA dungeon_level
$55AE: 69 01               ADC #$01     ;#-
$55B0: 20 66 08            JSR j_printdigit
$55B3: 20 F7 85            JSR print_newline
$55B6: 4C 1E 62            JMP cmd_done

$55B9: A5 1E       @world  LDA player_transport
$55BB: C9 18               CMP #$18     ;#tile_balloon
$55BD: D0 C1               BNE @deny
$55BF: 20 21 08            JSR j_primm  ;b'altitude\n\x00'
$55C2:                     .BYTE $E1,$EC,$F4,$E9,$F4,$F5,$E4,$E5
$55CA:                     .BYTE $8D,$00
$55CC: A9 FF               LDA #$FF
$55CE: 85 74               STA movement_mode
$55D0: 85 1D               STA balloon_flying
$55D2: 4C 1E 62            JMP cmd_done

$55D5: A5 48       @castle_britannia LDA tile_under_player
$55D7: C9 1B               CMP #$1B     ;#tile_ladder_up
$55D9: D0 A5               BNE @deny
$55DB: A5 1E               LDA player_transport
$55DD: C9 1F               CMP #$1F     ;#tile_walk
$55DF: F0 06               BEQ +
$55E1: 20 F7 85            JSR print_newline
$55E4: 4C 39 41            JMP done_only_on_foot

$55E7: 20 21 08    +       JSR j_primm  ;b'to\nsecond floor!\n\x00'
$55EA:                     .BYTE $F4,$EF,$8D,$F3,$E5,$E3,$EF,$EE
$55F2:                     .BYTE $E4,$A0,$E6,$EC,$EF,$EF,$F2,$A1
$55FA:                     .BYTE $8D,$00
$55FC: A9 00               LDA #$00     ;#music_off
$55FE: 20 20 AF            JSR music_ctl
$5601: A9 C0               LDA #$C0     ;# second floor of castle britannia
$5603: 20 03 52            JSR load_letter_location
$5606: A9 01               LDA #$01     ;#music_explore
$5608: 20 20 AF            JSR music_ctl
$560B: 4C 1E 62            JMP cmd_done

$560E: 20 21 08    cmd_locate JSR j_primm  ;b'Locate position\n\x00'
$5611:                     .BYTE $CC,$EF,$E3,$E1,$F4,$E5,$A0,$F0
$5619:                     .BYTE $EF,$F3,$E9,$F4,$E9,$EF,$EE,$8D
$5621:                     .BYTE $00
$5622: AD 0B AB            LDA sextant
$5625: D0 0C               BNE @have_sextant
$5627: 20 21 08            JSR j_primm  ;b'WITH \x00'
$562A:                     .BYTE $D7,$C9,$D4,$C8,$A0,$00
$5630: 4C 12 41            JMP done_what

$5633: 20 21 08    @have_sextant JSR j_primm  ;b'with sextant:\n\n latitude:\x00'
$5636:                     .BYTE $F7,$E9,$F4,$E8,$A0,$F3,$E5,$F8
$563E:                     .BYTE $F4,$E1,$EE,$F4,$BA,$8D,$8D,$A0
$5646:                     .BYTE $EC,$E1,$F4,$E9,$F4,$F5,$E4,$E5
$564E:                     .BYTE $BA,$00
$5650: A5 11               LDA player_ypos
$5652: 4A                  LSR 
$5653: 4A                  LSR 
$5654: 4A                  LSR 
$5655: 4A                  LSR 
$5656: 18                  CLC 
$5657: 69 C1               ADC #$C1     ;#char_alpha_first
$5659: 20 24 08            JSR j_console_out
$565C: A9 A7               LDA #$A7
$565E: 20 24 08            JSR j_console_out
$5661: A5 11               LDA player_ypos
$5663: 29 0F               AND #$0F     ;#-
$5665: 18                  CLC 
$5666: 69 C1               ADC #$C1     ;#char_alpha_first
$5668: 20 24 08            JSR j_console_out
$566B: 20 21 08            JSR j_primm  ;b'"\nlongitude:\x00'
$566E:                     .BYTE $A2,$8D,$EC,$EF,$EE,$E7,$E9,$F4
$5676:                     .BYTE $F5,$E4,$E5,$BA,$00
$567B: A5 10               LDA player_xpos
$567D: 4A                  LSR 
$567E: 4A                  LSR 
$567F: 4A                  LSR 
$5680: 4A                  LSR 
$5681: 18                  CLC 
$5682: 69 C1               ADC #$C1     ;#char_alpha_first
$5684: 20 24 08            JSR j_console_out
$5687: A9 A7               LDA #$A7
$5689: 20 24 08            JSR j_console_out
$568C: A5 10               LDA player_xpos
$568E: 29 0F               AND #$0F     ;#-
$5690: 18                  CLC 
$5691: 69 C1               ADC #$C1     ;#char_alpha_first
$5693: 20 24 08            JSR j_console_out
$5696: A9 A2               LDA #$A2
$5698: 20 24 08            JSR j_console_out
$569B: 20 F7 85            JSR print_newline
$569E: 4C 1E 62            JMP cmd_done

$56A1: 20 A5 61    cmd_mix_reagents JSR display_spells
$56A4: 20 21 08            JSR j_primm  ;b'Mix reagents\n\x00'
$56A7:                     .BYTE $CD,$E9,$F8,$A0,$F2,$E5,$E1,$E7
$56AF:                     .BYTE $E5,$EE,$F4,$F3,$8D,$00
$56B5: A9 00               LDA #$00     ;#music_off
$56B7: 20 20 AF            JSR music_ctl
$56BA: A9 CC               LDA #$CC     ;#char_L
$56BC: A2 7B               LDX #$7B     ;#file_id_mixr
$56BE: 20 00 A1            JSR j_fileio
$56C1: 20 00 88            JSR j_overlay_entry
$56C4: A9 01               LDA #$01     ;#music_explore
$56C6: 20 20 AF            JSR music_ctl
$56C9: 4C 1E 62            JMP cmd_done

$56CC: 20 21 08    cmd_new_order JSR j_primm  ;b'New order:\nexchange #\x00'
$56CF:                     .BYTE $CE,$E5,$F7,$A0,$EF,$F2,$E4,$E5
$56D7:                     .BYTE $F2,$BA,$8D,$E5,$F8,$E3,$E8,$E1
$56DF:                     .BYTE $EE,$E7,$E5,$A0,$A3,$00
$56E5: 20 5D 08            JSR j_getplayernum
$56E8: D0 03               BNE +
$56EA: 4C 97 41            JMP done_aborted

$56ED: C9 01       +       CMP #$01     ;#-
$56EF: F0 67               BEQ you_must_lead
$56F1: C5 1F               CMP party_size
$56F3: 90 05               BCC +
$56F5: F0 03               BEQ +
$56F7: 4C 78 41            JMP done_not_here

$56FA: 85 55       +       STA target_player
$56FC: 20 2D 08            JSR j_get_stats_ptr
$56FF: A5 7E               LDA ptr1
$5701: 8D 72 57            STA new_order_stat_ptr
$5704: A5 7F               LDA ptr1 + 1
$5706: 8D 73 57            STA new_order_stat_ptr+1
$5709: 20 21 08            JSR j_primm  ;b'    with #\x00'
$570C:                     .BYTE $A0,$A0,$A0,$A0,$F7,$E9,$F4,$E8
$5714:                     .BYTE $A0,$A3,$00
$5717: 20 5D 08            JSR j_getplayernum
$571A: D0 03               BNE +
$571C: 4C 97 41            JMP done_aborted

$571F: C9 01       +       CMP #$01     ;#-
$5721: F0 35               BEQ you_must_lead
$5723: C5 55               CMP target_player
$5725: D0 03               BNE +
$5727: 4C A7 41            JMP done_done

$572A: C5 1F       +       CMP party_size
$572C: 90 05               BCC +
$572E: F0 03               BEQ +
$5730: 4C 78 41            JMP done_not_here

$5733: 20 2D 08    +       JSR j_get_stats_ptr
$5736: A0 1F               LDY #$1F     ;#player_stat_max
$5738: AD 72 57            LDA new_order_stat_ptr
$573B: 85 7C               STA ptr2
$573D: AD 73 57            LDA new_order_stat_ptr+1
$5740: 85 7D               STA ptr2 + 1
$5742: B1 7E       @next   LDA (ptr1),Y
$5744: 48                  PHA 
$5745: B1 7C               LDA (ptr2),Y
$5747: 91 7E               STA (ptr1),Y
$5749: 68                  PLA 
$574A: 91 7C               STA (ptr2),Y
$574C: 88                  DEY 
$574D: 10 F3               BPL @next
$574F: 20 69 08            JSR j_clearstatwindow
$5752: 20 45 08            JSR j_update_status
$5755: 4C A7 41            JMP done_done

$5758: 20 30 08    you_must_lead JSR j_printname
$575B: 20 21 08            JSR j_primm  ;b'\nYOU MUST LEAD!\n\x00'
$575E:                     .BYTE $8D,$D9,$CF,$D5,$A0,$CD,$D5,$D3
$5766:                     .BYTE $D4,$A0,$CC,$C5,$C1,$C4,$A1,$8D
$576E:                     .BYTE $00
$576F: 4C 97 41            JMP done_aborted

$5772:             new_order_stat_ptr .BYTE $00
$5773:             new_order_stat_ptr+1 .BYTE $00
-                                                                           
$5774: 20 0A 80    cmd_open_door JSR close_open_door
$5777: AD 35 80            LDA door_open_countdown
$577A: D0 F8               BNE cmd_open_door
$577C: 20 21 08            JSR j_primm  ;b'Open-\x00'
$577F:                     .BYTE $CF,$F0,$E5,$EE,$AD,$00
$5785: 20 9C 82            JSR input_direction
$5788: A5 1B               LDA game_mode
$578A: C9 02               CMP #$02     ;#mode_towne
$578C: F0 03               BEQ +
$578E: 4C 78 41    @not_here JMP done_not_here

$5791: 20 93 08    +       JSR j_gettile_towne
$5794: C9 3B               CMP #$3B     ;#tile_door_unlocked
$5796: F0 07               BEQ +
$5798: C9 3A               CMP #$3A     ;#tile_door_locked
$579A: D0 F2               BNE @not_here
$579C: 4C 89 41            JMP done_cant

$579F: A5 7A       +       LDA temp_x
$57A1: 8D 33 80            STA door_open_x
$57A4: A5 7B               LDA temp_y
$57A6: 8D 34 80            STA door_open_y
$57A9: A9 05               LDA #$05     ;# self close after N turns
$57AB: 8D 35 80            STA door_open_countdown
$57AE: A9 3E               LDA #$3E     ;#tile_floor_brick
$57B0: 91 7C               STA (ptr2),Y
$57B2: 20 21 08            JSR j_primm  ;b'OPENED!\n\x00'
$57B5:                     .BYTE $CF,$D0,$C5,$CE,$C5,$C4,$A1,$8D
$57BD:                     .BYTE $00
$57BE: 4C 1E 62            JMP cmd_done

$57C1: 20 21 08    cmd_peer_gem JSR j_primm  ;b'Peer at \x00'
$57C4:                     .BYTE $D0,$E5,$E5,$F2,$A0,$E1,$F4,$A0
$57CC:                     .BYTE $00
$57CD: A0 09               LDY #$09     ;#party_stat_gems
$57CF: 20 50 84            JSR dec_stat
$57D2: B0 03               BCS +
$57D4: 4C 12 41            JMP done_what

$57D7: 20 21 08    +       JSR j_primm  ;b'a gem!\n\x00'
$57DA:                     .BYTE $E1,$A0,$E7,$E5,$ED,$A1,$8D,$00
$57E2: 20 E8 57            JSR do_view
$57E5: 4C 1E 62            JMP cmd_done

$57E8: A9 00       do_view LDA #$00     ;#music_off
$57EA: 20 20 AF            JSR music_ctl
$57ED: A9 CC               LDA #$CC     ;#char_L
$57EF: A2 77               LDX #$77     ;#file_id_peer 
$57F1: 20 00 A1            JSR j_fileio
$57F4: A9 03               LDA #$03     ;#music_peer
$57F6: 20 20 AF            JSR music_ctl
$57F9: 20 00 90            JSR e9000
$57FC: A5 1B               LDA game_mode
$57FE: C9 03               CMP #$03     ;#mode_dungeon
$5800: D0 0C               BNE @skip
$5802: A9 00               LDA #$00     ;#music_off
$5804: 20 20 AF            JSR music_ctl
$5807: A9 CC               LDA #$CC     ;#char_L
$5809: A2 95               LDX #$95     ;#file_id_dung 
$580B: 20 00 A1            JSR j_fileio
$580E: A9 01       @skip   LDA #$01     ;#music_explore
$5810: 20 20 AF            JSR music_ctl
$5813: 60                  RTS 

$5814: 20 21 08    cmd_quit JSR j_primm  ;b'Quit & save...\n\x00'
$5817:                     .BYTE $D1,$F5,$E9,$F4,$A0,$A6,$A0,$F3
$581F:                     .BYTE $E1,$F6,$E5,$AE,$AE,$AE,$8D,$00
$5827: 20 54 58            JSR @print_move_count
$582A: A5 1A               LDA current_location
$582C: F0 03               BEQ +
$582E: 4C 78 41            JMP done_not_here

$5831: A9 00       +       LDA #$00     ;#music_off
$5833: 20 20 AF            JSR music_ctl
$5836: A9 02               LDA #$02     ;#disk_britannia
$5838: 20 42 08            JSR j_request_disk
$583B: A9 D3               LDA #$D3     ;#char_S
$583D: A2 7F               LDX #$7F     ;#file_id_smap ;saved_map
$583F: 20 00 A1            JSR j_fileio
$5842: A2 80               LDX #$80     ;#file_id_spar ;saved_party
$5844: 20 00 A1            JSR j_fileio
$5847: A2 1A               LDX #$1A     ;#file_id_ssta ;saved_game
$5849: 20 00 A1            JSR j_fileio
$584C: A9 01               LDA #$01     ;#music_explore
$584E: 20 20 AF            JSR music_ctl
$5851: 4C 1E 62            JMP cmd_done

$5854: A5 2C       @print_move_count LDA move_counter
$5856: C9 10               CMP #$10     ;#-
$5858: B0 22               BCS @digits_8
$585A: C9 00               CMP #$00     ;#-
$585C: D0 23               BNE @digits_7
$585E: A5 2D               LDA move_counter + 1
$5860: C9 10               CMP #$10     ;#-
$5862: B0 22               BCS @digits_6
$5864: C9 00               CMP #$00     ;#-
$5866: D0 23               BNE @digits_5
$5868: A5 2E               LDA move_counter + 2
$586A: C9 10               CMP #$10     ;#-
$586C: B0 22               BCS @digits_4
$586E: C9 00               CMP #$00     ;#-
$5870: D0 23               BNE @digits_3
$5872: A5 2F               LDA move_counter + 3
$5874: C9 10               CMP #$10     ;#-
$5876: B0 22               BCS @digits_2
$5878: C9 00               CMP #$00     ;#-
$587A: D0 23               BNE @digits_1
$587C: A5 2C       @digits_8 LDA move_counter
$587E: 20 B1 58            JSR @print_hi_bcd
$5881: A5 2C       @digits_7 LDA move_counter
$5883: 20 B9 58            JSR @print_lo_bcd
$5886: A5 2D       @digits_6 LDA move_counter + 1
$5888: 20 B1 58            JSR @print_hi_bcd
$588B: A5 2D       @digits_5 LDA move_counter + 1
$588D: 20 B9 58            JSR @print_lo_bcd
$5890: A5 2E       @digits_4 LDA move_counter + 2
$5892: 20 B1 58            JSR @print_hi_bcd
$5895: A5 2E       @digits_3 LDA move_counter + 2
$5897: 20 B9 58            JSR @print_lo_bcd
$589A: A5 2F       @digits_2 LDA move_counter + 3
$589C: 20 B1 58            JSR @print_hi_bcd
$589F: A5 2F       @digits_1 LDA move_counter + 3
$58A1: 20 B9 58            JSR @print_lo_bcd
$58A4: 20 21 08            JSR j_primm  ;b' moves!\n\x00'
$58A7:                     .BYTE $A0,$ED,$EF,$F6,$E5,$F3,$A1,$8D
$58AF:                     .BYTE $00
$58B0: 60                  RTS 

$58B1: 4A          @print_hi_bcd LSR 
$58B2: 4A                  LSR 
$58B3: 4A                  LSR 
$58B4: 4A                  LSR 
$58B5: 20 66 08            JSR j_printdigit
$58B8: 60                  RTS 

$58B9: 29 0F       @print_lo_bcd AND #$0F     ;#-
$58BB: 20 66 08            JSR j_printdigit
$58BE: 60                  RTS 

$58BF: 20 21 08    cmd_ready_weapon JSR j_primm  ;b'Ready a weapon\nfor player-\x00'
$58C2:                     .BYTE $D2,$E5,$E1,$E4,$F9,$A0,$E1,$A0
$58CA:                     .BYTE $F7,$E5,$E1,$F0,$EF,$EE,$8D,$E6
$58D2:                     .BYTE $EF,$F2,$A0,$F0,$EC,$E1,$F9,$E5
$58DA:                     .BYTE $F2,$AD,$00
$58DD: 20 5D 08            JSR j_getplayernum
$58E0: F0 06               BEQ +
$58E2: C5 1F               CMP party_size
$58E4: 90 05               BCC ask_weapon
$58E6: F0 03               BEQ ask_weapon
$58E8: 4C 24 41    +       JMP done_not_a_player

$58EB: 20 A4 5E    ask_weapon JSR ztats_1_weapons
$58EE: 20 21 08            JSR j_primm  ;b'Weapon:\x00'
$58F1:                     .BYTE $D7,$E5,$E1,$F0,$EF,$EE,$BA,$00
$58F9: 20 98 83            JSR input_char
$58FC: 48                  PHA 
$58FD: 20 69 08            JSR j_clearstatwindow
$5900: 20 45 08            JSR j_update_status
$5903: A5 1B               LDA game_mode
$5905: 10 03               BPL +
$5907: 20 EF 83            JSR invert_player_name
$590A: 68          +       PLA 
$590B: 38                  SEC 
$590C: E9 C1               SBC #$C1     ;#char_alpha_first
$590E: C9 10               CMP #$10     ;#weapon_last
$5910: 90 03               BCC @check_inv
$5912: 4C 97 41            JMP done_aborted

$5915: 85 6A       @check_inv STA zp6A     ;$zp_selected
$5917: C9 00               CMP #$00     ;#weapon_none
$5919: F0 0C               BEQ @check_class_legal
$591B: 18                  CLC 
$591C: 69 20               ADC #$20     ;#party_stat_weapons
$591E: A8                  TAY 
$591F: B9 00 AB            LDA party_stats,Y
$5922: D0 03               BNE @check_class_legal
$5924: 4C B7 41            JMP done_have_none

$5927: 20 2D 08    @check_class_legal JSR j_get_stats_ptr
$592A: A0 17               LDY #$17     ;#player_class_bit
$592C: B1 7E               LDA (ptr1),Y
$592E: A6 6A               LDX zp6A     ;$zp_selected
$5930: 3D 62 59            AND weapon_class_masks,X
$5933: D0 03               BNE @unequip_current
$5935: 4C 72 59            JMP weap_arm_disallowed

$5938: A0 1E       @unequip_current LDY #$1E     ;#player_weapon
$593A: B1 7E               LDA (ptr1),Y
$593C: F0 07               BEQ @equip_new
$593E: 18                  CLC 
$593F: 69 20               ADC #$20     ;#party_stat_weapons
$5941: A8                  TAY 
$5942: 20 42 84            JSR inc_stat
$5945: A0 1E       @equip_new LDY #$1E     ;#player_weapon
$5947: A5 6A               LDA zp6A     ;$zp_selected
$5949: 91 7E               STA (ptr1),Y
$594B: F0 07               BEQ @print_weapon_name
$594D: 18                  CLC 
$594E: 69 20               ADC #$20     ;#party_stat_weapons
$5950: A8                  TAY 
$5951: 20 50 84            JSR dec_stat
$5954: A5 6A       @print_weapon_name LDA zp6A     ;$zp_selected
$5956: 18                  CLC 
$5957: 69 25               ADC #$25     ;#string_weapon_first
$5959: 20 7E 08            JSR j_printstring
$595C: 20 F7 85            JSR print_newline
$595F: 4C A7 41            JMP done_done

$5962:             weapon_class_masks .BYTE $FF,$FF,$FF,$FF,$7F,$6F,$6F,$7E
$596A:                     .BYTE $7E,$FF,$2C,$0C,$2E,$5E,$D0,$FF
-                                                                           
$5972: 20 F7 85    weap_arm_disallowed JSR print_newline
$5975: 20 21 08            JSR j_primm
$5978:                     .BYTE $C1,$A0,$00 ;b'A \x00'
$597B: 20 2D 08            JSR j_get_stats_ptr
$597E: A0 11               LDY #$11     ;#player_class_index
$5980: B1 7E               LDA (ptr1),Y
$5982: 18                  CLC 
$5983: 69 4D               ADC #$4D     ;#string_class_first
$5985: 20 7E 08            JSR j_printstring
$5988: 20 21 08            JSR j_primm  ;b'\nMAY NOT USE A\n\x00'
$598B:                     .BYTE $8D,$CD,$C1,$D9,$A0,$CE,$CF,$D4
$5993:                     .BYTE $A0,$D5,$D3,$C5,$A0,$C1,$8D,$00
$599B: A5 6A               LDA zp6A     ;$zp_selected
$599D: 18                  CLC 
$599E: 69 25               ADC #$25     ;#string_weapon_first
$59A0: 20 7E 08            JSR j_printstring
$59A3: 20 F7 85            JSR print_newline
$59A6: 4C 97 41            JMP done_aborted

$59A9: 20 21 08    cmd_search JSR j_primm  ;b'Search...\n\x00'
$59AC:                     .BYTE $D3,$E5,$E1,$F2,$E3,$E8,$AE,$AE
$59B4:                     .BYTE $AE,$8D,$00
$59B7: A9 00               LDA #$00     ;#music_off
$59B9: 20 20 AF            JSR music_ctl
$59BC: A9 CC               LDA #$CC     ;#char_L
$59BE: A2 79               LDX #$79     ;#file_id_sear ;search
$59C0: 20 00 A1            JSR j_fileio
$59C3: 20 00 88            JSR j_overlay_entry
$59C6: A9 01               LDA #$01     ;#music_explore
$59C8: 20 20 AF            JSR music_ctl
$59CB: 4C 1E 62            JMP cmd_done

$59CE: 20 21 08    cmd_talk JSR j_primm  ;b'Talk-\x00'
$59D1:                     .BYTE $D4,$E1,$EC,$EB,$AD,$00
$59D7: 20 9C 82            JSR input_direction
$59DA: D0 03               BNE check_through_sign
$59DC: 4C 06 41            JMP done_pass

$59DF: 20 93 08    check_through_sign JSR j_gettile_towne
$59E2: C9 60               CMP #$60     ;#tile_sign_first
$59E4: 90 21               BCC check_direct
$59E6: C9 7E               CMP #$7E     ;#tile_sign_last
$59E8: B0 1D               BCS check_direct
$59EA: 18                  CLC 
$59EB: A5 7A               LDA temp_x
$59ED: 65 78               ADC delta_x
$59EF: 85 7A               STA temp_x
$59F1: 18                  CLC 
$59F2: A5 7B               LDA temp_y
$59F4: 65 79               ADC delta_y
$59F6: 85 7B               STA temp_y
$59F8: 20 2D 83            JSR get_mob_at_temp_xy
$59FB: 30 19               BMI no_response
$59FD: BD 60 AC            LDA object_tile_type,X
$5A00: C9 52               CMP #$52     ;#tile_shopkeeper
$5A02: D0 12               BNE no_response
$5A04: 4C 91 5A            JMP check_shop

$5A07: 20 2D 83    check_direct JSR get_mob_at_temp_xy
$5A0A: 30 0A               BMI no_response
$5A0C: 86 6A               STX zp6A
$5A0E: A5 1A               LDA current_location
$5A10: F0 04               BEQ no_response
$5A12: C9 11               CMP #$11     ;#loc_dng_first
$5A14: 90 1B               BCC +
$5A16: 20 21 08    no_response JSR j_primm  ;b'FUNNY, NO\nRESPONSE!\n\x00'
$5A19:                     .BYTE $C6,$D5,$CE,$CE,$D9,$AC,$A0,$CE
$5A21:                     .BYTE $CF,$8D,$D2,$C5,$D3,$D0,$CF,$CE
$5A29:                     .BYTE $D3,$C5,$A1,$8D,$00
$5A2E: 4C 1E 62            JMP cmd_done

$5A31: 85 60       +       STA lt_hi
$5A33: C6 60               DEC lt_hi
$5A35: A6 6A               LDX zp6A
$5A37: BD E0 AC            LDA npc_dialogue,X
$5A3A: 85 61               STA lt_lo
$5A3C: F0 D8               BEQ no_response
$5A3E: C6 61               DEC lt_lo
$5A40: A9 01               LDA #$01     ;#lt_rwflag_read
$5A42: 85 62               STA lt_rwflag
$5A44: A9 AD               LDA #$AD
$5A46: 85 63               STA lt_addr_hi
$5A48: A9 00               LDA #$00     ;#music_off
$5A4A: 20 20 AF            JSR music_ctl
$5A4D: A6 6A               LDX zp6A
$5A4F: BD 60 AC            LDA object_tile_type,X
$5A52: C9 5E               CMP #$5E     ;#tile_lord_british
$5A54: D0 26               BNE @talk_non_british
$5A56: A9 02               LDA #$02     ;#disk_britannia
$5A58: 20 42 08            JSR j_request_disk
$5A5B: A9 CC               LDA #$CC     ;#char_L
$5A5D: A2 87               LDX #$87     ;#file_id_lbtk ;Lord British talk
$5A5F: 20 00 A1            JSR j_fileio
$5A62: A9 C2               LDA #$C2     ;#music_British
$5A64: 20 20 AF            JSR music_ctl
$5A67: 20 03 88            JSR talk_lord_british
$5A6A: A9 00               LDA #$00     ;#music_off
$5A6C: 20 20 AF            JSR music_ctl
$5A6F: A9 03               LDA #$03     ;#disk_towne
$5A71: 20 42 08            JSR j_request_disk
$5A74: A9 C3               LDA #$C3     ;#music_Castles
$5A76: 20 20 AF            JSR music_ctl
$5A79: 4C 89 5A            JMP @end_talk

$5A7C: 20 51 08    @talk_non_british JSR j_loadsector
$5A7F: A9 CC               LDA #$CC     ;#char_L
$5A81: A2 78               LDX #$78     ;#file_id_talk 
$5A83: 20 00 A1            JSR j_fileio
$5A86: 20 00 88            JSR j_overlay_entry
$5A89: A9 01       @end_talk LDA #$01     ;#music_explore
$5A8B: 20 20 AF            JSR music_ctl
$5A8E: 4C 1E 62            JMP cmd_done

$5A91: A9 00       check_shop LDA #$00     ;#music_off
$5A93: 20 20 AF            JSR music_ctl
$5A96: A9 CC               LDA #$CC     ;#char_L
$5A98: A2 19               LDX #$19     ;#file_id_shpi ;shop_index
$5A9A: 20 00 A1            JSR j_fileio
$5A9D: A9 88               LDA #$88     ;#-
$5A9F: 85 7F               STA ptr1 + 1
$5AA1: A5 1A               LDA current_location
$5AA3: 38                  SEC 
$5AA4: E9 01               SBC #$01     ;#-
$5AA6: 0A                  ASL 
$5AA7: 0A                  ASL 
$5AA8: 0A                  ASL 
$5AA9: 85 7E               STA ptr1
$5AAB: A0 07               LDY #$07     ;try 8 types of shop
$5AAD: B1 7E       @next   LDA (ptr1),Y
$5AAF: C5 17               CMP dest_y
$5AB1: F0 27               BEQ load_shop
$5AB3: 88                  DEY 
$5AB4: 10 F7               BPL @next
$5AB6: A5 17               LDA dest_y
$5AB8: C9 18               CMP #$18     ;row 24
$5ABA: D0 0A               BNE +
$5ABC: A5 1A               LDA current_location
$5ABE: C9 0D               CMP #$0D     ;#loc_village_paws
$5AC0: D0 04               BNE +
$5AC2: A0 08               LDY #$08     ;#shop_horse
$5AC4: D0 14               BNE load_shop
$5AC6: A5 17       +       LDA dest_y
$5AC8: C9 19               CMP #$19     ;row 25
$5ACA: D0 0B               BNE @no_response
$5ACC: A5 1A               LDA current_location
$5ACE: C9 01               CMP #$01     ;#loc_castle_britannia
$5AD0: D0 05               BNE @no_response
$5AD2: A0 09               LDY #$09     ;#shop_hawkwind
$5AD4: 4C DA 5A            JMP load_shop

$5AD7: 4C 16 5A    @no_response JMP no_response

$5ADA: 98          load_shop TYA 
$5ADB: 18                  CLC 
$5ADC: 69 6D               ADC #$6D     ;#file_id_shp0
$5ADE: AA                  TAX 
$5ADF: A9 CC               LDA #$CC     ;#char_L
$5AE1: 20 00 A1            JSR j_fileio
$5AE4: A9 04               LDA #$04     ;#music_shop
$5AE6: 20 20 AF            JSR music_ctl
$5AE9: 20 00 88            JSR j_overlay_entry
$5AEC: A9 01               LDA #$01     ;#music_explore
$5AEE: 20 20 AF            JSR music_ctl
$5AF1: 4C 1E 62            JMP cmd_done

$5AF4: 20 21 08    cmd_use_item JSR j_primm  ;b'Use...\n\x00'
$5AF7:                     .BYTE $D5,$F3,$E5,$AE,$AE,$AE,$8D,$00
$5AFF: A9 00               LDA #$00     ;#music_off
$5B01: 20 20 AF            JSR music_ctl
$5B04: A9 CC               LDA #$CC     ;#char_L
$5B06: A2 7A               LDX #$7A     ;#file_id_usei ;use_item
$5B08: 20 00 A1            JSR j_fileio
$5B0B: 20 00 88            JSR j_overlay_entry
$5B0E: A5 1B               LDA game_mode
$5B10: 30 08               BMI @combat
$5B12: A9 01               LDA #$01     ;#music_explore
$5B14: 20 20 AF            JSR music_ctl
$5B17: 4C 1E 62            JMP cmd_done

$5B1A: A9 02       @combat LDA #$02     ;#music_combat
$5B1C: 20 20 AF            JSR music_ctl
$5B1F: 4C 1E 62            JMP cmd_done

$5B22: 20 21 08    cmd_volume JSR j_primm  ;b'Volume \x00'
$5B25:                     .BYTE $D6,$EF,$EC,$F5,$ED,$E5,$A0,$00
$5B2D: A5 4D               LDA music_volume
$5B2F: D0 0E               BNE @off
$5B31: A9 FF               LDA #$FF
$5B33: 85 4D               STA music_volume
$5B35: 20 21 08            JSR j_primm  ;b'ON\n\x00'
$5B38:                     .BYTE $CF,$CE,$8D,$00
$5B3C: 4C 1E 62            JMP cmd_done

$5B3F: A9 00       @off    LDA #$00     ;#-
$5B41: 85 4D               STA music_volume
$5B43: 20 21 08            JSR j_primm  ;b'OFF\n\x00'
$5B46:                     .BYTE $CF,$C6,$C6,$8D,$00
$5B4B: 4C 1E 62            JMP cmd_done

$5B4E: 20 21 08    cmd_wear_armour JSR j_primm  ;b'Wear armour\nfor player-\x00'
$5B51:                     .BYTE $D7,$E5,$E1,$F2,$A0,$E1,$F2,$ED
$5B59:                     .BYTE $EF,$F5,$F2,$8D,$E6,$EF,$F2,$A0
$5B61:                     .BYTE $F0,$EC,$E1,$F9,$E5,$F2,$AD,$00
$5B69: 20 5D 08            JSR j_getplayernum
$5B6C: F0 06               BEQ +
$5B6E: C5 1F               CMP party_size
$5B70: 90 05               BCC ask_armour
$5B72: F0 03               BEQ ask_armour
$5B74: 4C 24 41    +       JMP done_not_a_player

$5B77: 20 26 5F    ask_armour JSR display_armour
$5B7A: 20 21 08            JSR j_primm  ;b'Armour:\x00'
$5B7D:                     .BYTE $C1,$F2,$ED,$EF,$F5,$F2,$BA,$00
$5B85: 20 98 83            JSR input_char
$5B88: 48                  PHA 
$5B89: 20 69 08            JSR j_clearstatwindow
$5B8C: 20 45 08            JSR j_update_status
$5B8F: A5 1B               LDA game_mode
$5B91: 10 03               BPL +
$5B93: 20 EF 83            JSR invert_player_name
$5B96: 68          +       PLA 
$5B97: 38                  SEC 
$5B98: E9 C1               SBC #$C1     ;#char_alpha_first
$5B9A: C9 08               CMP #$08     ;#armour_last
$5B9C: 90 03               BCC @check_inv
$5B9E: 4C 97 41            JMP done_aborted

$5BA1: 85 6A       @check_inv STA zp6A     ;$zp_selected
$5BA3: C9 00               CMP #$00     ;#armour_none
$5BA5: F0 0C               BEQ @check_class_legal
$5BA7: 18                  CLC 
$5BA8: 69 18               ADC #$18     ;#party_stat_armour
$5BAA: A8                  TAY 
$5BAB: B9 00 AB            LDA party_stats,Y
$5BAE: D0 03               BNE @check_class_legal
$5BB0: 4C B7 41            JMP done_have_none

$5BB3: 20 2D 08    @check_class_legal JSR j_get_stats_ptr
$5BB6: A0 17               LDY #$17     ;#player_class_bit
$5BB8: B1 7E               LDA (ptr1),Y
$5BBA: A6 6A               LDX zp6A     ;$zp_selected
$5BBC: 3D F5 5B            AND armour_class_masks,X
$5BBF: D0 0A               BNE @unequip_current
$5BC1: A5 6A               LDA zp6A     ;$zp_selected
$5BC3: 18                  CLC 
$5BC4: 69 10               ADC #$10     ;# adjust to re-use same code as weapon
$5BC6: 85 6A               STA zp6A     ;$zp_selected
$5BC8: 4C 72 59            JMP weap_arm_disallowed

$5BCB: A0 1F       @unequip_current LDY #$1F     ;#player_armour
$5BCD: B1 7E               LDA (ptr1),Y
$5BCF: F0 07               BEQ @eqiup_new
$5BD1: 18                  CLC 
$5BD2: 69 18               ADC #$18     ;#party_stat_armour
$5BD4: A8                  TAY 
$5BD5: 20 42 84            JSR inc_stat
$5BD8: A0 1F       @eqiup_new LDY #$1F     ;#player_armour
$5BDA: A5 6A               LDA zp6A     ;$zp_selected
$5BDC: 91 7E               STA (ptr1),Y
$5BDE: F0 07               BEQ @print_armour_name
$5BE0: 18                  CLC 
$5BE1: 69 18               ADC #$18     ;#party_stat_armour
$5BE3: A8                  TAY 
$5BE4: 20 50 84            JSR dec_stat
$5BE7: A5 6A       @print_armour_name LDA zp6A     ;$zp_selected
$5BE9: 18                  CLC 
$5BEA: 69 35               ADC #$35     ;#string_armour_first
$5BEC: 20 7E 08            JSR j_printstring
$5BEF: 20 F7 85            JSR print_newline
$5BF2: 4C A7 41            JMP done_done

$5BF5:             armour_class_masks .BYTE $FF,$FF,$7F,$2C,$2C,$24,$04,$FF
-                                                                           
$5BFD: 20 21 08    cmd_x_it JSR j_primm  ;b'X-it \x00'
$5C00:                     .BYTE $D8,$AD,$E9,$F4,$A0,$00
$5C06: A5 1E               LDA player_transport
$5C08: C9 10               CMP #$10     ;#tile_ship_first
$5C0A: 90 0C               BCC @what
$5C0C: C9 14               CMP #$14     ;#tile_ship_last
$5C0E: 90 0B               BCC @ship
$5C10: C9 16               CMP #$16     ;#tile_horse_last
$5C12: 90 14               BCC @horse
$5C14: C9 18               CMP #$18     ;#tile_balloon
$5C16: F0 17               BEQ @balloon
$5C18: 4C 12 41    @what   JMP done_what

$5C1B: A5 10       @ship   LDA player_xpos
$5C1D: 8D D8 47            STA last_ship_x
$5C20: A5 11               LDA player_ypos
$5C22: 8D D9 47            STA last_ship_y
$5C25: 4C 36 5C            JMP @find_empty_slot

$5C28: A9 00       @horse  LDA #$00     ;#-
$5C2A: 85 24               STA horse_mode
$5C2C: 4C 36 5C            JMP @find_empty_slot

$5C2F: A5 74       @balloon LDA movement_mode
$5C31: F0 03               BEQ @find_empty_slot
$5C33: 4C 78 41            JMP done_not_here

$5C36: A2 1F       @find_empty_slot LDX #$1F     ;#object_max
$5C38: BD 60 AC    @next   LDA object_tile_type,X
$5C3B: F0 0D               BEQ @exit_transport
$5C3D: CA                  DEX 
$5C3E: E0 08               CPX #$08     ;#object_inanimate_first
$5C40: B0 F6               BCS @next
$5C42: 20 4E 08            JSR j_rand
$5C45: 29 0F               AND #$0F     ;#-
$5C47: 09 10               ORA #$10     ;# overwrite random slot 10-1F
$5C49: AA                  TAX 
$5C4A: A5 1E       @exit_transport LDA player_transport
$5C4C: 9D 60 AC            STA object_tile_type,X
$5C4F: 9D 00 AC            STA object_tile_sprite,X
$5C52: A5 10               LDA player_xpos
$5C54: 9D 20 AC            STA object_xpos,X
$5C57: A5 11               LDA player_ypos
$5C59: 9D 40 AC            STA object_ypos,X
$5C5C: A9 00               LDA #$00     ;#-
$5C5E: 9D C0 AC            STA object_dng_level,X
$5C61: 9D E0 AC            STA npc_dialogue,X
$5C64: A9 1F               LDA #$1F     ;#tile_walk
$5C66: 85 1E               STA player_transport
$5C68: 20 F7 85            JSR print_newline
$5C6B: 4C 1E 62            JMP cmd_done

$5C6E: 20 21 08    cmd_yell_horse JSR j_primm  ;b'Yell \x00'
$5C71:                     .BYTE $D9,$E5,$EC,$EC,$A0,$00
$5C77: A5 1E               LDA player_transport
$5C79: C9 14               CMP #$14     ;#tile_horse_west
$5C7B: F0 07               BEQ +
$5C7D: C9 15               CMP #$15     ;#tile_horse_east
$5C7F: F0 03               BEQ +
$5C81: 4C 12 41            JMP done_what

$5C84: A5 24       +       LDA horse_mode
$5C86: 49 FF               EOR #$FF
$5C88: 85 24               STA horse_mode
$5C8A: 30 0D               BMI +
$5C8C: 20 21 08            JSR j_primm  ;b'whoa!\n\x00'
$5C8F:                     .BYTE $F7,$E8,$EF,$E1,$A1,$8D,$00
$5C96: 4C 1E 62            JMP cmd_done

$5C99: 20 21 08    +       JSR j_primm  ;b'giddyup!\n\x00'
$5C9C:                     .BYTE $E7,$E9,$E4,$E4,$F9,$F5,$F0,$A1
$5CA4:                     .BYTE $8D,$00
$5CA6: 4C 1E 62            JMP cmd_done

$5CA9: 20 21 08    cmd_ztats JSR j_primm  ;b'Ztats for-\x00'
$5CAC:                     .BYTE $DA,$F4,$E1,$F4,$F3,$A0,$E6,$EF
$5CB4:                     .BYTE $F2,$AD,$00
$5CB7: 20 5D 08            JSR j_getplayernum
$5CBA: D0 03               BNE @check_valid_player
$5CBC: 4C 30 5E            JMP zstats_page_1

$5CBF: C5 1F       @check_valid_player CMP party_size
$5CC1: 90 05               BCC zstats_for_player
$5CC3: F0 03               BEQ zstats_for_player
$5CC5: 4C 24 41            JMP done_not_a_player

$5CC8: 20 69 08    zstats_for_player JSR j_clearstatwindow
$5CCB: 20 06 62            JSR save_cursor
$5CCE: A2 1C               LDX #$1C     ;#-
$5CD0: A0 00               LDY #$00     ;#-
$5CD2: 20 1E 08            JSR j_primm_xy ;b'>PLR-\x00'
$5CD5:                     .BYTE $1E,$D0,$CC,$D2,$AD,$00
$5CDB: A5 54               LDA curr_player
$5CDD: 20 66 08            JSR j_printdigit
$5CE0: A9 1C               LDA #$1C     ;#char_left_arrow
$5CE2: 20 24 08            JSR j_console_out
$5CE5: A2 18               LDX #$18     ;#-
$5CE7: 86 4E               STX console_xpos
$5CE9: A0 01               LDY #$01     ;#-
$5CEB: 84 4F               STY console_ypos
$5CED: 20 6F 08            JSR j_centername
$5CF0: A2 18               LDX #$18     ;#-
$5CF2: 86 4E               STX console_xpos
$5CF4: A0 02               LDY #$02     ;#-
$5CF6: 84 4F               STY console_ypos
$5CF8: 20 2D 08            JSR j_get_stats_ptr
$5CFB: A0 10               LDY #$10     ;#player_gender
$5CFD: B1 7E               LDA (ptr1),Y
$5CFF: 20 24 08            JSR j_console_out
$5D02: A9 A0               LDA #$A0     ;#char_space
$5D04: 20 24 08            JSR j_console_out
$5D07: A2 18               LDX #$18     ;#-
$5D09: 86 4E               STX console_xpos
$5D0B: 20 2D 08            JSR j_get_stats_ptr
$5D0E: A0 11               LDY #$11     ;#player_class_index
$5D10: B1 7E               LDA (ptr1),Y
$5D12: 18                  CLC 
$5D13: 69 4D               ADC #$4D     ;#string_class
$5D15: 20 7B 08            JSR j_centerstring
$5D18: A2 26               LDX #$26
$5D1A: 86 4E               STX console_xpos
$5D1C: 20 2D 08            JSR j_get_stats_ptr
$5D1F: A0 12               LDY #$12     ;#player_status
$5D21: B1 7E               LDA (ptr1),Y
$5D23: 20 24 08            JSR j_console_out
$5D26: A2 19               LDX #$19     ;#-
$5D28: A0 03               LDY #$03     ;#-
$5D2A: 20 1E 08            JSR j_primm_xy ;b'MP:\x00'
$5D2D:                     .BYTE $CD,$D0,$BA,$00
$5D31: 20 2D 08            JSR j_get_stats_ptr
$5D34: A0 16               LDY #$16     ;#player_magic_points
$5D36: B1 7E               LDA (ptr1),Y
$5D38: 20 33 08            JSR j_printbcd
$5D3B: A2 20               LDX #$20     ;#-
$5D3D: A0 03               LDY #$03     ;#-
$5D3F: 20 1E 08            JSR j_primm_xy ;b'LV:\x00'
$5D42:                     .BYTE $CC,$D6,$BA,$00
$5D46: 20 2D 08            JSR j_get_stats_ptr
$5D49: A0 1A               LDY #$1A     ;#player_max_hp_hi
$5D4B: B1 7E               LDA (ptr1),Y
$5D4D: 20 66 08            JSR j_printdigit
$5D50: A2 18               LDX #$18     ;#-
$5D52: A0 04               LDY #$04     ;#-
$5D54: 20 1E 08            JSR j_primm_xy ;b'STR:\x00'
$5D57:                     .BYTE $D3,$D4,$D2,$BA,$00
$5D5C: 20 2D 08            JSR j_get_stats_ptr
$5D5F: A0 13               LDY #$13     ;#player_strength
$5D61: B1 7E               LDA (ptr1),Y
$5D63: 20 33 08            JSR j_printbcd
$5D66: A2 18               LDX #$18     ;#-
$5D68: A0 05               LDY #$05     ;#-
$5D6A: 20 1E 08            JSR j_primm_xy ;b'DEX:\x00'
$5D6D:                     .BYTE $C4,$C5,$D8,$BA,$00
$5D72: 20 2D 08            JSR j_get_stats_ptr
$5D75: A0 14               LDY #$14     ;#player_dexterity
$5D77: B1 7E               LDA (ptr1),Y
$5D79: 20 33 08            JSR j_printbcd
$5D7C: A2 18               LDX #$18     ;#-
$5D7E: A0 06               LDY #$06     ;#-
$5D80: 20 1E 08            JSR j_primm_xy ;b'INT:\x00'
$5D83:                     .BYTE $C9,$CE,$D4,$BA,$00
$5D88: 20 2D 08            JSR j_get_stats_ptr
$5D8B: A0 15               LDY #$15     ;#player_intelligence
$5D8D: B1 7E               LDA (ptr1),Y
$5D8F: 20 33 08            JSR j_printbcd
$5D92: A2 20               LDX #$20     ;#-
$5D94: A0 04               LDY #$04     ;#-
$5D96: 20 1E 08            JSR j_primm_xy ;b'HP:\x00'
$5D99:                     .BYTE $C8,$D0,$BA,$00
$5D9D: 20 2D 08            JSR j_get_stats_ptr
$5DA0: A0 18               LDY #$18     ;#player_cur_hp_hi
$5DA2: B1 7E               LDA (ptr1),Y
$5DA4: 20 33 08            JSR j_printbcd
$5DA7: A0 19               LDY #$19     ;#player_cur_hp_lo
$5DA9: B1 7E               LDA (ptr1),Y
$5DAB: 20 33 08            JSR j_printbcd
$5DAE: A2 20               LDX #$20     ;#-
$5DB0: A0 05               LDY #$05     ;#-
$5DB2: 20 1E 08            JSR j_primm_xy ;b'HM:\x00'
$5DB5:                     .BYTE $C8,$CD,$BA,$00
$5DB9: 20 2D 08            JSR j_get_stats_ptr
$5DBC: A0 1A               LDY #$1A     ;#player_max_hp_hi
$5DBE: B1 7E               LDA (ptr1),Y
$5DC0: 20 33 08            JSR j_printbcd
$5DC3: A0 1B               LDY #$1B     ;#player_max_hp_lo
$5DC5: B1 7E               LDA (ptr1),Y
$5DC7: 20 33 08            JSR j_printbcd
$5DCA: A2 20               LDX #$20     ;#-
$5DCC: A0 06               LDY #$06     ;#-
$5DCE: 20 1E 08            JSR j_primm_xy ;b'EX:\x00'
$5DD1:                     .BYTE $C5,$D8,$BA,$00
$5DD5: 20 2D 08            JSR j_get_stats_ptr
$5DD8: A0 1C               LDY #$1C     ;#player_experience_hi
$5DDA: B1 7E               LDA (ptr1),Y
$5DDC: 20 33 08            JSR j_printbcd
$5DDF: A0 1D               LDY #$1D     ;#player_experience_lo
$5DE1: B1 7E               LDA (ptr1),Y
$5DE3: 20 33 08            JSR j_printbcd
$5DE6: A2 18               LDX #$18     ;#-
$5DE8: A0 07               LDY #$07     ;#-
$5DEA: 20 1E 08            JSR j_primm_xy ;b'W:\x00'
$5DED:                     .BYTE $D7,$BA,$00
$5DF0: 20 2D 08            JSR j_get_stats_ptr
$5DF3: A0 1E               LDY #$1E     ;#player_weapon
$5DF5: B1 7E               LDA (ptr1),Y
$5DF7: 18                  CLC 
$5DF8: 69 25               ADC #$25     ;#string_weapon_first
$5DFA: 20 7E 08            JSR j_printstring
$5DFD: A2 18               LDX #$18     ;#-
$5DFF: A0 08               LDY #$08     ;#-
$5E01: 20 1E 08            JSR j_primm_xy ;b'A:\x00'
$5E04:                     .BYTE $C1,$BA,$00
$5E07: 20 2D 08            JSR j_get_stats_ptr
$5E0A: A0 1F               LDY #$1F     ;#player_armour
$5E0C: B1 7E               LDA (ptr1),Y
$5E0E: 18                  CLC 
$5E0F: 69 35               ADC #$35     ;#string_armour
$5E11: 20 7E 08            JSR j_printstring
$5E14: 20 11 62            JSR restore_cursor
$5E17: 20 8E 5E            JSR input_ztats_key
$5E1A: F0 5E               BEQ quit_view
$5E1C: 30 0B               BMI @prev_page
$5E1E: E6 54               INC curr_player
$5E20: A5 1F               LDA party_size
$5E22: C5 54               CMP curr_player
$5E24: 90 0A               BCC zstats_page_1
$5E26: 4C C8 5C            JMP zstats_for_player

$5E29: C6 54       @prev_page DEC curr_player
$5E2B: F0 3C               BEQ ztats_page_6
$5E2D: 4C C8 5C            JMP zstats_for_player

$5E30: 20 A4 5E    zstats_page_1 JSR ztats_1_weapons
$5E33: 20 8E 5E            JSR input_ztats_key
$5E36: F0 42               BEQ quit_view
$5E38: 10 07               BPL ztats_page_2
$5E3A: A5 1F               LDA party_size
$5E3C: 85 54               STA curr_player
$5E3E: 4C C8 5C            JMP zstats_for_player

$5E41: 20 26 5F    ztats_page_2 JSR display_armour
$5E44: 20 8E 5E            JSR input_ztats_key
$5E47: F0 31               BEQ quit_view
$5E49: 30 E5               BMI zstats_page_1
$5E4B: 20 A4 5F    ztats_page_3 JSR display_tools
$5E4E: 20 8E 5E            JSR input_ztats_key
$5E51: F0 27               BEQ quit_view
$5E53: 30 EC               BMI ztats_page_2
$5E55: 20 1A 60    ztats_page_4 JSR display_quests
$5E58: 20 8E 5E            JSR input_ztats_key
$5E5B: F0 1D               BEQ quit_view
$5E5D: 30 EC               BMI ztats_page_3
$5E5F: 20 44 61    ztats_page_5 JSR display_reagents
$5E62: 20 8E 5E            JSR input_ztats_key
$5E65: F0 13               BEQ quit_view
$5E67: 30 EC               BMI ztats_page_4
$5E69: 20 A5 61    ztats_page_6 JSR display_spells
$5E6C: 20 8E 5E            JSR input_ztats_key
$5E6F: F0 09               BEQ quit_view
$5E71: 30 EC               BMI ztats_page_5
$5E73: A9 01               LDA #$01     ;#-
$5E75: 85 54               STA curr_player
$5E77: 4C C8 5C            JMP zstats_for_player

$5E7A: 20 69 08    quit_view JSR j_clearstatwindow
$5E7D: 20 45 08            JSR j_update_status
$5E80: A5 1B               LDA game_mode
$5E82: 10 07               BPL @done
$5E84: A5 45               LDA curr_player_turn ;combat restore
$5E86: 85 54               STA curr_player
$5E88: 20 EF 83            JSR invert_player_name
$5E8B: 4C 1E 62    @done   JMP cmd_done ;BUG: STACK OVERFLOW

$5E8E: 20 00 08    input_ztats_key JSR j_waitkey
$5E91: 10 FB               BPL input_ztats_key
$5E93: C9 87               CMP #$87     ;#char_F5
$5E95: F0 07               BEQ @key_prev
$5E97: C9 88               CMP #$88     ;#char_F7
$5E99: F0 06               BEQ @key_next
$5E9B: A9 00               LDA #$00     ;#-
$5E9D: 60                  RTS 

$5E9E: A9 FF       @key_prev LDA #$FF
$5EA0: 60                  RTS 

$5EA1: A9 01       @key_next LDA #$01     ;#-
$5EA3: 60                  RTS 

$5EA4: 20 69 08    ztats_1_weapons JSR j_clearstatwindow
$5EA7: 20 06 62            JSR save_cursor
$5EAA: A2 1B               LDX #$1B     ;#-
$5EAC: A0 00               LDY #$00     ;#-
$5EAE: 84 58               STY zp58     ;$zp_index
$5EB0: 84 59               STY zp59     ;$zp_display_line
$5EB2: 20 1E 08            JSR j_primm_xy ;b'>WEAPONS<\x00'
$5EB5:                     .BYTE $1F,$D7,$C5,$C1,$D0,$CF,$CE,$D3
$5EBD:                     .BYTE $1D,$00
$5EBF: A5 59       @next   LDA zp59     ;$zp_display_line
$5EC1: 29 08               AND #$08     ;#-
$5EC3: 18                  CLC 
$5EC4: 69 18               ADC #$18     ;#-
$5EC6: 85 4E               STA console_xpos
$5EC8: A5 59               LDA zp59     ;$zp_display_line
$5ECA: 29 07               AND #$07     ;#-
$5ECC: 85 4F               STA console_ypos
$5ECE: E6 4F               INC console_ypos
$5ED0: A5 58               LDA zp58     ;$zp_index
$5ED2: F0 42               BEQ @nothing
$5ED4: 18                  CLC 
$5ED5: 69 20               ADC #$20     ;#party_stat_weapons
$5ED7: A8                  TAY 
$5ED8: B9 00 AB            LDA party_stats,Y
$5EDB: F0 2D               BEQ @skip
$5EDD: 48                  PHA 
$5EDE: A5 58               LDA zp58     ;$zp_index
$5EE0: 18                  CLC 
$5EE1: 69 C1               ADC #$C1     ;#char_alpha_first
$5EE3: 20 24 08            JSR j_console_out
$5EE6: 68                  PLA 
$5EE7: C9 10               CMP #$10     ;#-
$5EE9: B0 0D               BCS @two_digit
$5EEB: 48                  PHA 
$5EEC: A9 AD               LDA #$AD     ;#char_hyphen
$5EEE: 20 24 08            JSR j_console_out
$5EF1: 68                  PLA 
$5EF2: 20 66 08            JSR j_printdigit
$5EF5: 4C FB 5E            JMP +

$5EF8: 20 33 08    @two_digit JSR j_printbcd
$5EFB: A9 AD       +       LDA #$AD     ;#char_hyphen
$5EFD: 20 24 08            JSR j_console_out
$5F00: A5 58               LDA zp58     ;$zp_index
$5F02: 18                  CLC 
$5F03: 69 3D               ADC #$3D     ;#string_weapons_short
$5F05: 20 7E 08            JSR j_printstring
$5F08: E6 59               INC zp59     ;$zp_display_line
$5F0A: E6 58       @skip   INC zp58     ;$zp_index
$5F0C: A5 58               LDA zp58     ;$zp_index
$5F0E: C9 10               CMP #$10     ;#-
$5F10: 90 AD               BCC @next
$5F12: 20 11 62            JSR restore_cursor
$5F15: 60                  RTS 

$5F16: 20 21 08    @nothing JSR j_primm  ;b'A-HANDS\x00'
$5F19:                     .BYTE $C1,$AD,$C8,$C1,$CE,$C4,$D3,$00
$5F21: E6 59               INC zp59     ;$zp_display_line
$5F23: 4C 0A 5F            JMP @skip

$5F26: 20 69 08    display_armour JSR j_clearstatwindow
$5F29: 20 06 62            JSR save_cursor
$5F2C: A2 1B               LDX #$1B     ;#-
$5F2E: A0 00               LDY #$00     ;#-
$5F30: 84 58               STY zp58     ;$zp_index
$5F32: 84 59               STY zp59     ;$zp_display_line
$5F34: 20 1E 08            JSR j_primm_xy ;b'>ARMOUR<\x00'
$5F37:                     .BYTE $1F,$C1,$D2,$CD,$CF,$D5,$D2,$1C
$5F3F:                     .BYTE $00
$5F40: A9 18       @next   LDA #$18     ;#-
$5F42: 85 4E               STA console_xpos
$5F44: A5 59               LDA zp59     ;$zp_display_line
$5F46: 85 4F               STA console_ypos
$5F48: E6 4F               INC console_ypos
$5F4A: A5 58               LDA zp58     ;$zp_index
$5F4C: F0 42               BEQ @no_armour
$5F4E: 18                  CLC 
$5F4F: 69 18               ADC #$18     ;#-
$5F51: A8                  TAY 
$5F52: B9 00 AB            LDA party_stats,Y
$5F55: F0 2D               BEQ @skip
$5F57: 48                  PHA 
$5F58: A5 58               LDA zp58     ;$zp_index
$5F5A: 18                  CLC 
$5F5B: 69 C1               ADC #$C1     ;#char_alpha_first
$5F5D: 20 24 08            JSR j_console_out
$5F60: 68                  PLA 
$5F61: C9 10               CMP #$10     ;#-
$5F63: B0 0D               BCS @two_digit
$5F65: 48                  PHA 
$5F66: A9 AD               LDA #$AD     ;#char_hyphen
$5F68: 20 24 08            JSR j_console_out
$5F6B: 68                  PLA 
$5F6C: 20 66 08            JSR j_printdigit
$5F6F: 4C 75 5F            JMP +

$5F72: 20 33 08    @two_digit JSR j_printbcd
$5F75: A9 AD       +       LDA #$AD     ;#char_hyphen
$5F77: 20 24 08            JSR j_console_out
$5F7A: A5 58               LDA zp58     ;$zp_index
$5F7C: 18                  CLC 
$5F7D: 69 35               ADC #$35     ;#string_armour
$5F7F: 20 7E 08            JSR j_printstring
$5F82: E6 59               INC zp59     ;$zp_display_line
$5F84: E6 58       @skip   INC zp58     ;$zp_index
$5F86: A5 58               LDA zp58     ;$zp_index
$5F88: C9 08               CMP #$08     ;#-
$5F8A: 90 B4               BCC @next
$5F8C: 20 11 62            JSR restore_cursor
$5F8F: 60                  RTS 

$5F90: 20 21 08    @no_armour JSR j_primm  ;b'A-NO ARMOUR\x00'
$5F93:                     .BYTE $C1,$AD,$CE,$CF,$A0,$C1,$D2,$CD
$5F9B:                     .BYTE $CF,$D5,$D2,$00
$5F9F: E6 59               INC zp59     ;$zp_display_line
$5FA1: 4C 84 5F            JMP @skip

$5FA4: 20 69 08    display_tools JSR j_clearstatwindow
$5FA7: 20 06 62            JSR save_cursor
$5FAA: A2 1A               LDX #$1A     ;#-
$5FAC: A0 00               LDY #$00     ;#-
$5FAE: 20 1E 08            JSR j_primm_xy ;b'>EQUIPMENT<\x00'
$5FB1:                     .BYTE $1E,$C5,$D1,$D5,$C9,$D0,$CD,$C5
$5FB9:                     .BYTE $CE,$D4,$1C,$00
$5FBD: 20 2D 61            JSR next_line
$5FC0: A0 08               LDY #$08     ;#party_stat_torches
$5FC2: B9 00 AB            LDA party_stats,Y
$5FC5: 20 33 08            JSR j_printbcd
$5FC8: 20 21 08            JSR j_primm  ;b'-TORCHES\x00'
$5FCB:                     .BYTE $AD,$D4,$CF,$D2,$C3,$C8,$C5,$D3
$5FD3:                     .BYTE $00
$5FD4: 20 2D 61            JSR next_line
$5FD7: A0 09               LDY #$09     ;#party_stat_gems
$5FD9: B9 00 AB            LDA party_stats,Y
$5FDC: 20 33 08            JSR j_printbcd
$5FDF: 20 21 08            JSR j_primm  ;b'-GEMS\x00'
$5FE2:                     .BYTE $AD,$C7,$C5,$CD,$D3,$00
$5FE8: 20 2D 61            JSR next_line
$5FEB: A0 0A               LDY #$0A     ;#party_stat_keys
$5FED: B9 00 AB            LDA party_stats,Y
$5FF0: 20 33 08            JSR j_printbcd
$5FF3: 20 21 08            JSR j_primm  ;b'-KEYS\x00'
$5FF6:                     .BYTE $AD,$CB,$C5,$D9,$D3,$00
$5FFC: 20 2D 61            JSR next_line
$5FFF: A0 0B               LDY #$0B     ;#party_stat_sextant
$6001: B9 00 AB            LDA party_stats,Y
$6004: F0 10               BEQ +
$6006: 20 33 08            JSR j_printbcd
$6009: 20 21 08            JSR j_primm  ;b'-SEXTANTS\x00'
$600C:                     .BYTE $AD,$D3,$C5,$D8,$D4,$C1,$CE,$D4
$6014:                     .BYTE $D3,$00
$6016: 20 11 62    +       JSR restore_cursor
$6019: 60                  RTS 

$601A: 20 69 08    display_quests JSR j_clearstatwindow
$601D: 20 06 62            JSR save_cursor
$6020: A2 1C               LDX #$1C     ;#-
$6022: A0 00               LDY #$00     ;#-
$6024: 20 1E 08            JSR j_primm_xy ;b'>ITEMS<\x00'
$6027:                     .BYTE $1E,$C9,$D4,$C5,$CD,$D3,$1C,$00
$602F: A9 00               LDA #$00     ;#-
$6031: 85 4F               STA console_ypos
$6033: AD 0C AB            LDA stones
$6036: F0 23               BEQ display_runes
$6038: 85 58               STA zp58     ;$zp_item_flags
$603A: 20 2D 61            JSR next_line
$603D: 20 21 08            JSR j_primm  ;b'STONES:\x00'
$6040:                     .BYTE $D3,$D4,$CF,$CE,$C5,$D3,$BA,$00
$6048: A0 07               LDY #$07     ;#-
$604A: 26 58       @next   ROL zp58     ;$zp_item_flags
$604C: 90 0A               BCC @skip
$604E: 84 59               STY zp59
$6050: B9 34 61            LDA stone_sym,Y
$6053: 20 24 08            JSR j_console_out
$6056: A4 59               LDY zp59
$6058: 88          @skip   DEY 
$6059: 10 EF               BPL @next
$605B: AD 0D AB    display_runes LDA runes
$605E: F0 22               BEQ display_items
$6060: 85 58               STA zp58     ;$zp_item_flags
$6062: 20 2D 61            JSR next_line
$6065: 20 21 08            JSR j_primm  ;b'RUNES:\x00'
$6068:                     .BYTE $D2,$D5,$CE,$C5,$D3,$BA,$00
$606F: A0 07               LDY #$07     ;#-
$6071: 26 58       @next   ROL zp58     ;$zp_item_flags
$6073: 90 0A               BCC @skip
$6075: 84 59               STY zp59
$6077: B9 3C 61            LDA rune_sym,Y
$607A: 20 24 08            JSR j_console_out
$607D: A4 59               LDY zp59
$607F: 88          @skip   DEY 
$6080: 10 EF               BPL @next
$6082: AD 0E AB    display_items LDA bell_book_candle
$6085: F0 33               BEQ display_3_part_key
$6087: 20 2D 61            JSR next_line
$608A: AD 0E AB            LDA bell_book_candle
$608D: 29 04               AND #$04     ;#item_flag_bell
$608F: F0 09               BEQ +
$6091: 20 21 08            JSR j_primm  ;b'BELL \x00'
$6094:                     .BYTE $C2,$C5,$CC,$CC,$A0,$00
$609A: AD 0E AB    +       LDA bell_book_candle
$609D: 29 02               AND #$02     ;#item_flag_book
$609F: F0 09               BEQ +
$60A1: 20 21 08            JSR j_primm  ;b'BOOK \x00'
$60A4:                     .BYTE $C2,$CF,$CF,$CB,$A0,$00
$60AA: AD 0E AB    +       LDA bell_book_candle
$60AD: 29 01               AND #$01     ;#item_flag_candle
$60AF: F0 2C               BEQ +
$60B1: 20 21 08            JSR j_primm  ;b'CANDL\x00'
$60B4:                     .BYTE $C3,$C1,$CE,$C4,$CC,$00
$60BA: AD 0F AB    display_3_part_key LDA threepartkey
$60BD: F0 36               BEQ display_horn_etc
$60BF: 20 2D 61            JSR next_line
$60C2: 20 21 08            JSR j_primm  ;b'3 PART KEY:\x00'
$60C5:                     .BYTE $B3,$A0,$D0,$C1,$D2,$D4,$A0,$CB
$60CD:                     .BYTE $C5,$D9,$BA,$00
$60D1: AD 0F AB            LDA threepartkey
$60D4: 29 04               AND #$04     ;#key3_flag_truth
$60D6: F0 05               BEQ +
$60D8: A9 D4               LDA #$D4     ;#char_T
$60DA: 20 24 08            JSR j_console_out
$60DD: AD 0F AB    +       LDA threepartkey
$60E0: 29 02               AND #$02     ;#key3_flag_love
$60E2: F0 05               BEQ +
$60E4: A9 CC               LDA #$CC     ;#char_L
$60E6: 20 24 08            JSR j_console_out
$60E9: AD 0F AB    +       LDA threepartkey
$60EC: 29 01               AND #$01     ;#key3_flag_courage
$60EE: F0 05               BEQ display_horn_etc
$60F0: A9 C3               LDA #$C3     ;#char_C
$60F2: 20 24 08            JSR j_console_out
$60F5: AD 15 AB    display_horn_etc LDA horn
$60F8: F0 0B               BEQ +
$60FA: 20 2D 61            JSR next_line
$60FD: 20 21 08            JSR j_primm  ;b'HORN\x00'
$6100:                     .BYTE $C8,$CF,$D2,$CE,$00
$6105: AD 16 AB    +       LDA wheel
$6108: F0 0C               BEQ +
$610A: 20 2D 61            JSR next_line
$610D: 20 21 08            JSR j_primm  ;b'WHEEL\x00'
$6110:                     .BYTE $D7,$C8,$C5,$C5,$CC,$00
$6116: AD 17 AB    +       LDA skull
$6119: F0 0E               BEQ +
$611B: 30 0C               BMI +
$611D: 20 2D 61            JSR next_line
$6120: 20 21 08            JSR j_primm  ;b'SKULL\x00'
$6123:                     .BYTE $D3,$CB,$D5,$CC,$CC,$00
$6129: 20 11 62    +       JSR restore_cursor
$612C: 60                  RTS 

$612D: E6 4F       next_line INC console_ypos
$612F: A2 18               LDX #$18     ;#-
$6131: 86 4E               STX console_xpos
$6133: 60                  RTS 

$6134:             stone_sym .BYTE $C2,$D7,$D0,$CF,$C7,$D2,$D9,$C2 ;BWPOGRYB
$613C:             rune_sym .BYTE $C8,$D3,$C8,$D3,$CA,$D6,$C3,$C8 ;HSHSJVCH
-                                                                           
$6144: 20 69 08    display_reagents JSR j_clearstatwindow
$6147: 20 06 62            JSR save_cursor
$614A: A2 1A               LDX #$1A     ;#-
$614C: A0 00               LDY #$00     ;#-
$614E: 84 70               STY zp70     ;$zp_reagent_index
$6150: 20 1E 08            JSR j_primm_xy ;b'>REAGENTS<\x00'
$6153:                     .BYTE $1E,$D2,$C5,$C1,$C7,$C5,$CE,$D4
$615B:                     .BYTE $D3,$1D,$00
$615E: 18          @next   CLC 
$615F: A5 70               LDA zp70     ;$zp_reagent_index
$6161: 69 38               ADC #$38     ;#party_stat_reagents
$6163: A8                  TAY 
$6164: B9 00 AB            LDA party_stats,Y
$6167: F0 30               BEQ @skip
$6169: 85 6A               STA zp6A     ;$zp_reagent_count
$616B: 20 2D 61            JSR next_line
$616E: 18                  CLC 
$616F: A5 70               LDA zp70     ;$zp_reagent_index
$6171: 69 C1               ADC #$C1     ;#char_A
$6173: 20 24 08            JSR j_console_out
$6176: A5 6A               LDA zp6A     ;$zp_reagent_count
$6178: C9 10               CMP #$10     ;#-
$617A: B0 0D               BCS @two_digit
$617C: A9 AD               LDA #$AD     ;#char_hyphen
$617E: 20 24 08            JSR j_console_out
$6181: A5 6A               LDA zp6A     ;$zp_reagent_count
$6183: 20 66 08            JSR j_printdigit
$6186: 4C 8C 61            JMP +

$6189: 20 33 08    @two_digit JSR j_printbcd
$618C: A9 AD       +       LDA #$AD     ;#char_hyphen
$618E: 20 24 08            JSR j_console_out
$6191: 18                  CLC 
$6192: A5 70               LDA zp70     ;$zp_reagent_index
$6194: 69 5D               ADC #$5D     ;#string_reagent_first
$6196: 20 7E 08            JSR j_printstring
$6199: E6 70       @skip   INC zp70     ;$zp_reagent_index
$619B: A5 70               LDA zp70     ;$zp_reagent_index
$619D: C9 08               CMP #$08     ;#-
$619F: 90 BD               BCC @next
$61A1: 20 11 62            JSR restore_cursor
$61A4: 60                  RTS 

$61A5: 20 69 08    display_spells JSR j_clearstatwindow
$61A8: 20 06 62            JSR save_cursor
$61AB: A2 1A               LDX #$1A     ;#-
$61AD: A0 00               LDY #$00     ;#-
$61AF: 84 58               STY zp58     ;$zp_index
$61B1: 84 59               STY zp59     ;$zp_display_line
$61B3: 20 1E 08            JSR j_primm_xy ;b'>MIXTURES<\x00'
$61B6:                     .BYTE $1E,$CD,$C9,$D8,$D4,$D5,$D2,$C5
$61BE:                     .BYTE $D3,$1D,$00
$61C1: A5 59       @next   LDA zp59     ;$zp_display_line
$61C3: 4A                  LSR 
$61C4: 4A                  LSR 
$61C5: 4A                  LSR 
$61C6: A2 05               LDX #$05     ;# column width
$61C8: 20 2A 08            JSR j_mulax
$61CB: 18                  CLC 
$61CC: 69 18               ADC #$18     ;# left margin
$61CE: 85 4E               STA console_xpos
$61D0: C9 24               CMP #$24
$61D2: B0 26               BCS @skip
$61D4: A5 59               LDA zp59     ;$zp_display_line
$61D6: 29 07               AND #$07     ;# wrap after 8 rows
$61D8: 85 4F               STA console_ypos
$61DA: E6 4F               INC console_ypos
$61DC: A4 58               LDY zp58     ;$zp_index
$61DE: B9 40 AB            LDA mixtures,Y
$61E1: F0 17               BEQ @skip
$61E3: A5 58               LDA zp58     ;$zp_index
$61E5: 18                  CLC 
$61E6: 69 C1               ADC #$C1     ;#char_A
$61E8: 20 24 08            JSR j_console_out
$61EB: A9 AD               LDA #$AD     ;#char_hyphen
$61ED: 20 24 08            JSR j_console_out
$61F0: A4 58               LDY zp58     ;$zp_index
$61F2: B9 40 AB            LDA mixtures,Y
$61F5: 20 33 08            JSR j_printbcd
$61F8: E6 59               INC zp59     ;$zp_display_line
$61FA: E6 58       @skip   INC zp58     ;$zp_index
$61FC: A5 58               LDA zp58     ;$zp_index
$61FE: C9 1A               CMP #$1A     ;# 26, A-Z spells
$6200: 90 BF               BCC @next
$6202: 20 11 62            JSR restore_cursor
$6205: 60                  RTS 

$6206: A5 4E       save_cursor LDA console_xpos
$6208: 8D 1C 62            STA saved_cursor_x
$620B: A5 4F               LDA console_ypos
$620D: 8D 1D 62            STA saved_cursor_y
$6210: 60                  RTS 

$6211: AD 1C 62    restore_cursor LDA saved_cursor_x
$6214: 85 4E               STA console_xpos
$6216: AD 1D 62            LDA saved_cursor_y
$6219: 85 4F               STA console_ypos
$621B: 60                  RTS 

$621C:             saved_cursor_x .BYTE $00
$621D:             saved_cursor_y .BYTE $00
-                                                                           
$621E: 20 A8 83    cmd_done JSR anyone_awake
$6221: A5 1B               LDA game_mode
$6223: 10 03               BPL +
$6225: 4C 33 71            JMP combat_cmd_done

$6228: A5 2B       +       LDA ship_hull
$622A: C9 50               CMP #$50     ;# full hull strength
$622C: B0 10               BCS update_player_health
$622E: 20 4E 08            JSR j_rand
$6231: 29 03               AND #$03     ;1/4 chance
$6233: D0 09               BNE update_player_health
$6235: A5 2B               LDA ship_hull
$6237: F8                  SED 
$6238: 18                  CLC 
$6239: 69 01               ADC #$01     ;# repair 1 hull
$623B: D8                  CLD 
$623C: 85 2B               STA ship_hull
$623E: A5 1F       update_player_health LDA party_size
$6240: 85 54               STA curr_player
$6242: 20 2D 08    @next   JSR j_get_stats_ptr
$6245: A0 12               LDY #$12     ;#player_status
$6247: B1 7E               LDA (ptr1),Y
$6249: C9 D3               CMP #$D3     ;#status_Sleep
$624B: D0 0E               BNE @check_poison
$624D: 20 4E 08            JSR j_rand
$6250: 29 07               AND #$07     ;1/8 chance
$6252: D0 1B               BNE @player_done
$6254: A9 C7               LDA #$C7     ;#status_Good
$6256: 91 7E               STA (ptr1),Y ;wake up
$6258: 4C 6F 62            JMP @player_done

$625B: C9 D0       @check_poison CMP #$D0     ;#status_Poison
$625D: D0 10               BNE @player_done
$625F: A9 02               LDA #$02     ;#-
$6261: 20 B0 84            JSR dec_player_hp
$6264: 20 EF 83            JSR invert_player_name
$6267: A9 06               LDA #$06     ;#sound_damage
$6269: 20 54 08            JSR j_playsfx
$626C: 20 EF 83            JSR invert_player_name
$626F: C6 54       @player_done DEC curr_player
$6271: D0 CF               BNE @next
$6273: A5 1F               LDA party_size
$6275: 20 00 65            JSR eat_food
$6278: B0 03               BCS +
$627A: 20 1E 64            JSR starving
$627D: 20 4D 64    +       JSR recover_mp
$6280: A5 74               LDA movement_mode
$6282: 30 0C               BMI @update_dungeon
$6284: 20 B7 6A            JSR check_water_hazards
$6287: 20 30 65            JSR spawn_monsters
$628A: 20 7C 66            JSR mobs_act
$628D: 20 B7 6A            JSR check_water_hazards
$6290: A5 1B       @update_dungeon LDA game_mode
$6292: C9 03               CMP #$03     ;#mode_dungeon
$6294: D0 11               BNE @update_light
$6296: 20 72 08            JSR j_print_direction
$6299: 20 F2 6C            JSR dng_check_attacked
$629C: A5 48               LDA tile_under_player
$629E: 29 F0               AND #$F0     ;#dng_tile_type_mask
$62A0: C9 D0               CMP #$D0     ;#dng_tile_room
$62A2: D0 03               BNE @update_light
$62A4: 4C 7F 6D            JMP do_dungeon_room

$62A7: A5 21       @update_light LDA light_duration
$62A9: F0 02               BEQ +
$62AB: C6 21               DEC light_duration
$62AD: 4C 86 6C    +       JMP end_turn

$62B0: A5 1B       tile_effect LDA game_mode
$62B2: C9 01               CMP #$01     ;#mode_world
$62B4: D0 34               BNE @no_trolls
$62B6: A5 48               LDA tile_under_player
$62B8: C9 17               CMP #$17     ;#tile_bridge_narrow
$62BA: D0 2E               BNE @no_trolls
$62BC: 20 4E 08            JSR j_rand
$62BF: 29 07               AND #$07     ;#chance_8
$62C1: D0 27               BNE @no_trolls
$62C3: 20 21 08            JSR j_primm  ;b'\nBRIDGE TROLLS!\n\x00'
$62C6:                     .BYTE $8D,$C2,$D2,$C9,$C4,$C7,$C5,$A0
$62CE:                     .BYTE $D4,$D2,$CF,$CC,$CC,$D3,$A1,$8D
$62D6:                     .BYTE $00
$62D7: A9 A4               LDA #$A4     ;#tile_troll
$62D9: 85 40               STA foe_type_encountered
$62DB: A5 10               LDA player_xpos
$62DD: 85 41               STA pre_combat_x
$62DF: A5 11               LDA player_ypos
$62E1: 85 42               STA pre_combat_y
$62E3: A9 17               LDA #$17     ;#tile_bridge_narrow
$62E5: 85 43               STA pre_combat_tile
$62E7: 4C A3 6E            JMP init_combat

$62EA: A5 74       @no_trolls LDA movement_mode
$62EC: 10 01               BPL +
$62EE: 60                  RTS          ;airborne

$62EF: A5 1B       +       LDA game_mode
$62F1: 30 09               BMI @in_combat
$62F3: C9 03               CMP #$03     ;#mode_dungeon
$62F5: F0 62               BEQ @in_dungeon
$62F7: A5 48               LDA tile_under_player
$62F9: 4C B9 63            JMP @check_field

$62FC: A6 54       @in_combat LDX curr_player
$62FE: BD 9F AD            LDA combat_player_tile-1,X
$6301: F0 53               BEQ @end_effect
$6303: BD 7F AD            LDA combat_player_xpos-1,X
$6306: 85 16               STA dest_x
$6308: BD 8F AD            LDA combat_player_ypos-1,X
$630B: 85 17               STA dest_y
$630D: 20 8D 08            JSR j_gettile_tempmap
$6310: C9 03               CMP #$03     ;#tile_swamp
$6312: F0 16               BEQ @poison1
$6314: C9 44               CMP #$44     ;#tile_field_poison
$6316: F0 12               BEQ @poison1
$6318: C9 46               CMP #$46     ;#tile_field_fire
$631A: F0 08               BEQ @burn
$631C: C9 47               CMP #$47     ;#tile_field_sleep
$631E: F0 20               BEQ @sleep1
$6320: C9 4C               CMP #$4C     ;#tile_lava
$6322: D0 32               BNE @end_effect
$6324: 20 6B 85    @burn   JSR burn_player
$6327: 4C 56 63            JMP @end_effect

$632A: 20 AF 7D    @poison1 JSR is_awake
$632D: B1 7E               LDA (ptr1),Y
$632F: C9 C7               CMP #$C7     ;#status_Good
$6331: D0 23               BNE @end_effect
$6333: A9 D0               LDA #$D0     ;#status_Poison
$6335: 91 7E               STA (ptr1),Y
$6337: 20 EB 85            JSR hilight_damaged_plr
$633A: 20 45 08            JSR j_update_status
$633D: 4C 56 63            JMP @end_effect

$6340: 20 AF 7D    @sleep1 JSR is_awake
$6343: 30 11               BMI @end_effect
$6345: A9 D3               LDA #$D3     ;#status_Sleep
$6347: 91 7E               STA (ptr1),Y
$6349: A6 54               LDX curr_player
$634B: A9 38               LDA #$38     ;#tile_human_prone
$634D: 9D 9F AD            STA combat_player_tile-1,X
$6350: 20 EB 85            JSR hilight_damaged_plr
$6353: 20 45 08            JSR j_update_status
$6356: 4C D0 63    @end_effect JMP @field_done

$6359: A5 48       @in_dungeon LDA tile_under_player
$635B: 29 F0               AND #$F0     ;#dng_tile_type_mask
$635D: C9 A0               CMP #$A0     ;#dng_tile_field
$635F: D0 11               BNE @check_trap
$6361: A5 48               LDA tile_under_player
$6363: 29 03               AND #$03     ;#-
$6365: F0 6C               BEQ @poison_all
$6367: C9 02               CMP #$02     ;#-
$6369: F0 62               BEQ @damage_all
$636B: C9 03               CMP #$03     ;#-
$636D: D0 61               BNE @field_done
$636F: 4C FA 63            JMP @sleep_all

$6372: C9 80       @check_trap CMP #$80     ;#dng_tile_trap
$6374: D0 5A               BNE @field_done
$6376: A5 48               LDA tile_under_player
$6378: 29 0F               AND #$0F     ;#-
$637A: F0 06               BEQ @winds
$637C: C9 08               CMP #$08     ;#-
$637E: 90 15               BCC @falling_rocks
$6380: B0 2A               BCS @pit
$6382: 20 21 08    @winds  JSR j_primm  ;b'\nWINDS!\n\x00'
$6385:                     .BYTE $8D,$D7,$C9,$CE,$C4,$D3,$A1,$8D
$638D:                     .BYTE $00
$638E: A9 00               LDA #$00     ;#-
$6390: 85 21               STA light_duration
$6392: 4C D0 63            JMP @field_done

$6395: 20 21 08    @falling_rocks JSR j_primm  ;b'\nFALLING ROCKS!\n\x00'
$6398:                     .BYTE $8D,$C6,$C1,$CC,$CC,$C9,$CE,$C7
$63A0:                     .BYTE $A0,$D2,$CF,$C3,$CB,$D3,$A1,$8D
$63A8:                     .BYTE $00
$63A9: 4C CD 63            JMP @damage_all

$63AC: 20 21 08    @pit    JSR j_primm  ;b'\nPIT!\n\x00'
$63AF:                     .BYTE $8D,$D0,$C9,$D4,$A1,$8D,$00
$63B6: 4C CD 63            JMP @damage_all

$63B9: C9 03       @check_field CMP #$03     ;#tile_swamp
$63BB: F0 16               BEQ @poison_all
$63BD: C9 44               CMP #$44     ;#tile_field_poison
$63BF: F0 12               BEQ @poison_all
$63C1: C9 46               CMP #$46     ;#tile_field_fire
$63C3: F0 08               BEQ @damage_all
$63C5: C9 47               CMP #$47     ;#tile_field_sleep
$63C7: F0 31               BEQ @sleep_all
$63C9: C9 4C               CMP #$4C     ;#tile_lava
$63CB: D0 03               BNE @field_done
$63CD: 20 7A 85    @damage_all JSR damage_party
$63D0: 4C 1D 64    @field_done JMP @done

$63D3: A5 1F       @poison_all LDA party_size
$63D5: 85 54               STA curr_player
$63D7: 20 AF 7D    @next_p JSR is_awake
$63DA: B1 7E               LDA (ptr1),Y
$63DC: C9 C7               CMP #$C7     ;#status_Good
$63DE: D0 3D               BNE @done
$63E0: 20 4E 08            JSR j_rand
$63E3: 29 07               AND #$07     ;#chance_8
$63E5: D0 0C               BNE @skip_p
$63E7: A9 D0               LDA #$D0     ;#status_Poison
$63E9: A0 12               LDY #$12     ;#player_status
$63EB: 91 7E               STA (ptr1),Y
$63ED: 20 EB 85            JSR hilight_damaged_plr
$63F0: 20 45 08            JSR j_update_status
$63F3: C6 54       @skip_p DEC curr_player
$63F5: D0 E0               BNE @next_p
$63F7: 4C 1D 64            JMP @done

$63FA: A5 1F       @sleep_all LDA party_size
$63FC: 85 54               STA curr_player
$63FE: 20 AF 7D    @next_s JSR is_awake
$6401: 30 13               BMI @skip_s
$6403: 20 4E 08            JSR j_rand
$6406: 29 03               AND #$03     ;#chance_4
$6408: D0 0C               BNE @skip_s
$640A: A9 D3               LDA #$D3     ;#status_Sleep
$640C: A0 12               LDY #$12     ;#player_status
$640E: 91 7E               STA (ptr1),Y
$6410: 20 EB 85            JSR hilight_damaged_plr
$6413: 20 45 08            JSR j_update_status
$6416: C6 54       @skip_s DEC curr_player
$6418: D0 E4               BNE @next_s
$641A: 4C 1D 64            JMP @done

$641D: 60          @done   RTS 

$641E: 20 21 08    starving JSR j_primm  ;b'\nSTARVING!!!\n\x00'
$6421:                     .BYTE $8D,$D3,$D4,$C1,$D2,$D6,$C9,$CE
$6429:                     .BYTE $C7,$A1,$A1,$A1,$8D,$00
$642F: A5 1F               LDA party_size
$6431: 85 54               STA curr_player
$6433: 20 C1 7D    @next   JSR is_alive
$6436: 30 05               BMI +
$6438: A9 02               LDA #$02     ;#-
$643A: 20 B0 84            JSR dec_player_hp
$643D: C6 54       +       DEC curr_player
$643F: D0 F2               BNE @next
$6441: 20 E3 83            JSR invert_all_players
$6444: A9 06               LDA #$06     ;#sound_damage
$6446: 20 54 08            JSR j_playsfx
$6449: 20 E3 83            JSR invert_all_players
$644C: 60                  RTS 

$644D: A5 1F       recover_mp LDA party_size
$644F: 85 54               STA curr_player
$6451: 20 C1 7D    @next   JSR is_alive
$6454: 30 4C               BMI @skip
$6456: A0 11               LDY #$11     ;#player_class_index
$6458: B1 7E               LDA (ptr1),Y
$645A: 85 58               STA zp58     ;$zp_index
$645C: A0 15               LDY #$15     ;#player_intelligence
$645E: B1 7E               LDA (ptr1),Y
$6460: 20 32 84            JSR decode_bcd_value
$6463: 0A                  ASL 
$6464: A6 58               LDX zp58     ;$zp_index ;mage
$6466: F0 26               BEQ @mp_4_of_4
$6468: CA                  DEX          ;bard
$6469: F0 19               BEQ @mp_2_of_4
$646B: CA                  DEX          ;fighter
$646C: F0 0C               BEQ @mp_0
$646E: CA                  DEX          ;druid
$646F: F0 17               BEQ @mp_3_of_4
$6471: CA                  DEX          ;tinker
$6472: F0 0B               BEQ @mp_1_of_4
$6474: CA                  DEX          ;paladin
$6475: F0 0D               BEQ @mp_2_of_4
$6477: CA                  DEX          ;ranger
$6478: F0 0A               BEQ @mp_2_of_4
$647A: A9 00       @mp_0   LDA #$00     ;# shepherd
$647C: 4C 8E 64            JMP @mp_4_of_4

$647F: 4A          @mp_1_of_4 LSR 
$6480: 4A                  LSR 
$6481: 4C 8E 64            JMP @mp_4_of_4

$6484: 4A          @mp_2_of_4 LSR 
$6485: 4C 8E 64            JMP @mp_4_of_4

$6488: 4A          @mp_3_of_4 LSR 
$6489: 85 58               STA zp58
$648B: 4A                  LSR 
$648C: 65 58               ADC zp58
$648E: 20 1A 84    @mp_4_of_4 JSR encode_bcd_value
$6491: 85 58               STA zp58     ;$zp_mp_max
$6493: A0 16               LDY #$16     ;#player_magic_points
$6495: B1 7E               LDA (ptr1),Y
$6497: C5 58               CMP zp58     ;$zp_mp_max
$6499: B0 07               BCS @skip
$649B: F8                  SED 
$649C: 18                  CLC 
$649D: 69 01               ADC #$01     ;#-
$649F: D8                  CLD 
$64A0: 91 7E               STA (ptr1),Y
$64A2: C6 54       @skip   DEC curr_player
$64A4: 10 AB               BPL @next
$64A6: 60                  RTS 

			 ; junk from segment alignment
$64A7:                     .BYTE $0D,$20,$06,$87,$01,$3E,$31,$0D
$64AF:                     .BYTE $20,$04,$9C,$00,$0D,$20,$06,$87
$64B7:                     .BYTE $01,$3E,$32,$0D,$20,$04,$9C,$00
$64BF:                     .BYTE $0D,$20,$06,$87,$01,$3E,$33,$0D
$64C7:                     .BYTE $20,$06,$86,$01,$3E,$39,$0D,$20
$64CF:                     .BYTE $03,$3B,$0D,$20,$0F,$5E,$30,$20
$64D7:                     .BYTE $20,$20,$20,$20,$20,$CB,$01,$50
$64DF:                     .BYTE $52,$57,$0D,$20,$06,$CA,$01,$3E
$64E7:                     .BYTE $39,$0D,$20,$0F,$5E,$31,$20,$20
$64EF:                     .BYTE $20,$20,$20,$20,$CB,$01,$50,$52
$64F7:                     .BYTE $4E,$0D,$20,$06,$CA,$01,$3E,$39
$64FF:                     .BYTE $0D
-                                                                           
$6500: 85 58       eat_food STA zp58
$6502: F8                  SED 
$6503: 38                  SEC 
$6504: AD 12 AB            LDA food_frac
$6507: E5 58               SBC zp58
$6509: 8D 12 AB            STA food_frac
$650C: B0 20               BCS @done
$650E: AD 11 AB            LDA food_lo
$6511: E9 00               SBC #$00     ;#-
$6513: 8D 11 AB            STA food_lo
$6516: B0 16               BCS @done
$6518: AD 10 AB            LDA food_hi
$651B: E9 00               SBC #$00     ;#-
$651D: 8D 10 AB            STA food_hi
$6520: B0 0C               BCS @done
$6522: A9 00               LDA #$00     ;#-
$6524: 8D 12 AB            STA food_frac
$6527: 8D 11 AB            STA food_lo
$652A: 8D 10 AB            STA food_hi
$652D: 18                  CLC 
$652E: D8          @done   CLD 
$652F: 60                  RTS 

$6530: A5 1B       spawn_monsters LDA game_mode
$6532: C9 01               CMP #$01     ;#mode_world
$6534: D0 03               BNE +
$6536: 4C 41 65            JMP spawn_world

$6539: C9 03       +       CMP #$03     ;#mode_dungeon
$653B: D0 03               BNE +
$653D: 4C 14 66            JMP spawn_dungeon

$6540: 60          +       RTS 

$6541: 20 4E 08    spawn_world JSR j_rand
$6544: 29 0F               AND #$0F     ;#chance_16
$6546: F0 03               BEQ +
$6548: 4C 13 66            JMP @done

$654B: A5 14       +       LDA map_x    ;# set temp2 to world-space coord of loaded region's origin
$654D: 0A                  ASL 
$654E: 0A                  ASL 
$654F: 0A                  ASL 
$6550: 0A                  ASL 
$6551: 85 76               STA temp2_x
$6553: A5 15               LDA map_y
$6555: 0A                  ASL 
$6556: 0A                  ASL 
$6557: 0A                  ASL 
$6558: 0A                  ASL 
$6559: 85 77               STA temp2_y
$655B: 38                  SEC 
$655C: A5 12               LDA tile_xpos
$655E: E9 05               SBC #$05     ;#xy_center_screen
$6560: 85 78               STA delta_x
$6562: 38                  SEC 
$6563: A5 13               LDA tile_ypos
$6565: E9 05               SBC #$05     ;#xy_center_screen
$6567: 85 79               STA delta_y
$6569: A2 03               LDX #$03     ;#object_wandering_max
$656B: BD 60 AC    @try_spawn LDA object_tile_type,X
$656E: D0 6F               BNE @no_spawn ;# slot already occupied
$6570: 20 4E 08            JSR j_rand
$6573: 29 1F               AND #$1F     ;#xy_max_tile_cache
$6575: 85 16               STA dest_x
$6577: 38                  SEC 
$6578: E5 78               SBC delta_x
$657A: C9 0B               CMP #$0B     ;#xy_last_screen
$657C: 90 61               BCC @no_spawn ;# don't spawn in view, always off-screen
$657E: 20 4E 08            JSR j_rand
$6581: 29 1F               AND #$1F     ;#xy_max_tile_cache
$6583: 85 17               STA dest_y
$6585: 38                  SEC 
$6586: E5 79               SBC delta_y
$6588: C9 0B               CMP #$0B     ;#xy_last_screen
$658A: 90 53               BCC @no_spawn
$658C: 20 84 08            JSR j_gettile_britannia
$658F: C9 02               CMP #$02     ;#tile_water_shallow
$6591: 90 4F               BCC @water   ;# allowed in deep or coast water
$6593: C9 04               CMP #$04     ;#tile_grass
$6595: 90 48               BCC @no_spawn ;# not in shallow water or swamp
$6597: C9 08               CMP #$08     ;#tile_mountain
$6599: B0 44               BCS @no_spawn ;# not in anything mountain or higher
$659B: 18          @land   CLC          ;Convert from cache coordinate (tile_x,y) to absolute coordinate (player_x,y)
$659C: A5 16               LDA dest_x
$659E: 65 76               ADC temp2_x
$65A0: 9D 20 AC            STA object_xpos,X
$65A3: 18                  CLC 
$65A4: A5 17               LDA dest_y
$65A6: 65 77               ADC temp2_y
$65A8: 9D 40 AC            STA object_ypos,X
                                                                           
			 ; Set difficulty based on how long you've been playing
$65AB: A5 2C               LDA move_counter
$65AD: D0 16               BNE @foes_hard ;# moves >= 1,000,000
$65AF: A5 2D               LDA move_counter + 1
$65B1: C9 01               CMP #$01     ;#-
$65B3: 90 0B               BCC @foes_easy ;# moves < 10,000
$65B5: F0 04               BEQ @foes_medium ;# moves < 20,000
$65B7: C9 03               CMP #$03     ;#-
$65B9: B0 0A               BCS @foes_hard ;moves >= 30,000
$65BB: A9 07       @foes_medium LDA #$07     ;# mask, orc - wisp
$65BD: 4C C7 65            JMP @choose_monster

$65C0: A9 03       @foes_easy LDA #$03     ;# mask, orc - snake
$65C2: 4C C7 65            JMP @choose_monster

$65C5: A9 0F       @foes_hard LDA #$0F     ;# mask, orc - balron
$65C7: 85 58       @choose_monster STA zp58
$65C9: 20 4E 08            JSR j_rand
$65CC: 25 58               AND zp58
$65CE: 85 58               STA zp58
$65D0: 20 4E 08            JSR j_rand
$65D3: 25 58               AND zp58     ;# rand AND rand => each bit has 1/4 chance of being set
$65D5: 0A                  ASL 
$65D6: 0A                  ASL 
$65D7: 69 C0               ADC #$C0     ;#tile_monster_land
$65D9: 9D 60 AC            STA object_tile_type,X
$65DC: 9D 00 AC            STA object_tile_sprite,X
$65DF: 4C 0D 66    @no_spawn JMP @next_spawn_slot

$65E2: 20 4E 08    @water  JSR j_rand
$65E5: 29 07               AND #$07     ;#chance_8
$65E7: D0 24               BNE @next_spawn_slot
$65E9: 18                  CLC 
$65EA: A5 16               LDA dest_x
$65EC: 65 76               ADC temp2_x
$65EE: 9D 20 AC            STA object_xpos,X
$65F1: 18                  CLC 
$65F2: A5 17               LDA dest_y
$65F4: 65 77               ADC temp2_y
$65F6: 9D 40 AC            STA object_ypos,X
$65F9: 20 4E 08            JSR j_rand
$65FC: 29 07               AND #$07     ;# random water monster
$65FE: 0A                  ASL 
$65FF: 69 80               ADC #$80     ;#tile_monster_water
$6601: C9 82               CMP #$82     ;#tile_pirate_east
$6603: D0 02               BNE +
$6605: A9 80               LDA #$80     ;#tile_pirate_west
$6607: 9D 60 AC    +       STA object_tile_type,X
$660A: 9D 00 AC            STA object_tile_sprite,X
$660D: CA          @next_spawn_slot DEX 
$660E: 30 03               BMI @done
$6610: 4C 6B 65            JMP @try_spawn

$6613: 60          @done   RTS 

$6614: A5 1C       spawn_dungeon LDA dungeon_level
$6616: 0A                  ASL 
$6617: 0A                  ASL 
$6618: 69 01               ADC #$01     ;#-
$661A: AA                  TAX 
$661B: BD 60 AC    @try_spawn LDA object_tile_type,X
$661E: D0 51               BNE @next_spawn_slot
$6620: 86 58               STX zp58     ;$zp_index
$6622: 20 4E 08            JSR j_rand
$6625: 29 07               AND #$07     ;#xy_max_dungeon
$6627: 85 16               STA dest_x
$6629: C5 10               CMP player_xpos
$662B: F0 44               BEQ @next_spawn_slot
$662D: 20 4E 08            JSR j_rand
$6630: 29 07               AND #$07     ;#xy_max_dungeon
$6632: 85 17               STA dest_y
$6634: C5 11               CMP player_ypos
$6636: F0 39               BEQ @next_spawn_slot
$6638: 20 96 08            JSR j_gettile_dungeon
$663B: D0 34               BNE @next_spawn_slot ;# space occupied
$663D: 20 4E 08            JSR j_rand
$6640: 29 03               AND #$03     ;# 4 possibilities, starting from index = dungeon level
$6642: 18                  CLC 
$6643: 65 1C               ADC dungeon_level
$6645: 0A                  ASL 
$6646: 0A                  ASL 
$6647: 69 90               ADC #$90     ;#tile_monster_dungeon
$6649: C9 AC               CMP #$AC     ;#tile_monster_mimic
$664B: F0 24               BEQ @next_spawn_slot
$664D: A6 58               LDX zp58     ;$zp_index
$664F: 9D 60 AC            STA object_tile_type,X
$6652: A5 16               LDA dest_x
$6654: 9D 20 AC            STA object_xpos,X
$6657: 9D 80 AC            STA object_xpos_prev,X
$665A: A5 17               LDA dest_y
$665C: 9D 40 AC            STA object_ypos,X
$665F: 9D A0 AC            STA object_ypos_prev,X
$6662: A5 1C               LDA dungeon_level
$6664: 9D C0 AC            STA object_dng_level,X
$6667: BD 60 AC            LDA object_tile_type,X
$666A: 20 83 6A            JSR tile_to_monster_num
$666D: 11 7E               ORA (ptr1),Y
$666F: 91 7E               STA (ptr1),Y
$6671: CA          @next_spawn_slot DEX 
$6672: 30 07               BMI @done
$6674: 8A                  TXA 
$6675: 4A                  LSR 
$6676: 4A                  LSR 
$6677: C5 1C               CMP dungeon_level
$6679: B0 A0               BCS @try_spawn
$667B: 60          @done   RTS 

$667C: A5 1B       mobs_act LDA game_mode
$667E: C9 01               CMP #$01     ;#mode_world
$6680: D0 03               BNE +
$6682: 4C 94 66            JMP mobs_act_world

$6685: C9 02       +       CMP #$02     ;#mode_towne
$6687: D0 03               BNE +
$6689: 4C EA 68            JMP mobs_act_towne

$668C: C9 03       +       CMP #$03     ;#mode_dungeon
$668E: D0 03               BNE +
$6690: 4C B2 69            JMP mobs_act_dungeon

$6693: 60          +       RTS 

$6694: A5 14       mobs_act_world LDA map_x
$6696: 0A                  ASL 
$6697: 0A                  ASL 
$6698: 0A                  ASL 
$6699: 0A                  ASL 
$669A: 85 76               STA temp2_x
$669C: A5 15               LDA map_y
$669E: 0A                  ASL 
$669F: 0A                  ASL 
$66A0: 0A                  ASL 
$66A1: 0A                  ASL 
$66A2: 85 77               STA temp2_y
$66A4: A2 07               LDX #$07     ;#object_mobs_max
$66A6: BD 60 AC    @next   LDA object_tile_type,X
$66A9: F0 26               BEQ @skip
$66AB: 38                  SEC 
$66AC: BD 20 AC            LDA object_xpos,X
$66AF: E5 76               SBC temp2_x
$66B1: C9 20               CMP #$20     ;#-
$66B3: B0 14               BCS @out_of_range
$66B5: 38                  SEC 
$66B6: BD 40 AC            LDA object_ypos,X
$66B9: E5 77               SBC temp2_y
$66BB: C9 20               CMP #$20     ;#-
$66BD: B0 0A               BCS @out_of_range
$66BF: 86 58               STX zp58     ;$zp_index
$66C1: 20 D5 66            JSR mob_world_take_turn
$66C4: A6 58               LDX zp58     ;$zp_index
$66C6: 4C D1 66            JMP @skip

$66C9: A9 00       @out_of_range LDA #$00     ;#-
$66CB: 9D 60 AC            STA object_tile_type,X
$66CE: 9D 00 AC            STA object_tile_sprite,X
$66D1: CA          @skip   DEX 
$66D2: 10 D2               BPL @next
$66D4: 60                  RTS 

$66D5: BD 60 AC    mob_world_take_turn LDA object_tile_type,X
$66D8: C9 8C               CMP #$8C     ;#tile_whirlpool
$66DA: F0 33               BEQ check_range
$66DC: C9 8E               CMP #$8E     ;#tile_twister
$66DE: F0 2F               BEQ check_range
$66E0: 20 2E 6C            JSR manhattan_dist_foe
$66E3: C9 02               CMP #$02     ;#-
$66E5: B0 28               BCS check_range
$66E7: 20 4B 08    player_attacked JSR j_update_view
$66EA: 20 21 08            JSR j_primm  ;b'\nATTACKED BY\n\x00'
$66ED:                     .BYTE $8D,$C1,$D4,$D4,$C1,$C3,$CB,$C5
$66F5:                     .BYTE $C4,$A0,$C2,$D9,$8D,$00
$66FB: 20 57 83            JSR print_attacker_name
$66FE: A6 58               LDX zp58     ;$zp_index
$6700: BD 20 AC            LDA object_xpos,X
$6703: 85 7A               STA temp_x
$6705: BD 40 AC            LDA object_ypos,X
$6708: 85 7B               STA temp_y
$670A: 68                  PLA 
$670B: 68                  PLA 
$670C: 4C 31 47            JMP do_attack

$670F: C9 04       check_range CMP #$04     ;#range_missile_travel + 1
$6711: B0 27               BCS @try_ship_move
$6713: BD 60 AC            LDA object_tile_type,X
$6716: C9 80               CMP #$80     ;#tile_pirate
$6718: F0 03               BEQ @check_cannon
$671A: 4C 25 68            JMP @not_pirate

$671D: BD 00 AC    @check_cannon LDA object_tile_sprite,X
$6720: C9 80               CMP #$80     ;#tile_pirate_west
$6722: F0 0F               BEQ @facing_e_w
$6724: C9 81               CMP #$81     ;#tile_pirate_north
$6726: F0 04               BEQ @facing_n_s
$6728: C9 82               CMP #$82     ;#tile_pirate_east
$672A: F0 07               BEQ @facing_e_w
$672C: A5 79       @facing_n_s LDA delta_y
$672E: D0 0A               BNE @try_ship_move
$6730: 4C 80 6B            JMP fire_cannon_pirate

$6733: A5 78       @facing_e_w LDA delta_x
$6735: D0 03               BNE @try_ship_move
$6737: 4C 80 6B            JMP fire_cannon_pirate

$673A: BD 60 AC    @try_ship_move LDA object_tile_type,X
$673D: C9 80               CMP #$80     ;#tile_pirate
$673F: F0 03               BEQ @facing_west
$6741: 4C 25 68            JMP @not_pirate

$6744: BD 00 AC    @facing_west LDA object_tile_sprite,X
$6747: C9 80               CMP #$80     ;#tile_pirate_west
$6749: D0 06               BNE @facing_north
$674B: A5 78               LDA delta_x
$674D: 30 59               BMI @try_sail_e_w
$674F: 10 1E               BPL @turn_or_sail
$6751: C9 81       @facing_north CMP #$81     ;#tile_pirate_north
$6753: D0 06               BNE @facing_east
$6755: A5 79               LDA delta_y
$6757: 30 71               BMI @try_sail_n_s
$6759: 10 14               BPL @turn_or_sail
$675B: C9 82       @facing_east CMP #$82     ;#tile_pirate_east
$675D: D0 08               BNE @facing_south
$675F: A5 78               LDA delta_x
$6761: F0 0C               BEQ @turn_or_sail
$6763: 10 43               BPL @try_sail_e_w
$6765: 30 08               BMI @turn_or_sail
$6767: A5 79       @facing_south LDA delta_y
$6769: F0 04               BEQ @turn_or_sail
$676B: 10 5D               BPL @try_sail_n_s
$676D: 30 00               BMI @turn_or_sail
$676F: 20 2E 6C    @turn_or_sail JSR manhattan_dist_foe
$6772: C9 06               CMP #$06     ;#-
$6774: B0 77               BCS @turn_ship
$6776: 20 4E 08            JSR j_rand
$6779: 29 03               AND #$03     ;# chance_4
$677B: F0 70               BEQ @turn_ship
$677D: BD 00 AC            LDA object_tile_sprite,X
$6780: C9 80               CMP #$80     ;#tile_pirate_west
$6782: D0 07               BNE @try_sail_north
$6784: A9 FF               LDA #$FF
$6786: 85 78               STA delta_x
$6788: 4C A8 67            JMP @try_sail_e_w

$678B: C9 81       @try_sail_north CMP #$81     ;#tile_pirate_north
$678D: D0 07               BNE @try_sail_east
$678F: A9 FF               LDA #$FF
$6791: 85 79               STA delta_y
$6793: 4C CA 67            JMP @try_sail_n_s

$6796: C9 82       @try_sail_east CMP #$82     ;#tile_pirate_east
$6798: D0 07               BNE @try_sail_south
$679A: A9 01               LDA #$01     ;#-
$679C: 85 78               STA delta_x
$679E: 4C A8 67            JMP @try_sail_e_w

$67A1: A9 01       @try_sail_south LDA #$01     ;#-
$67A3: 85 79               STA delta_y
$67A5: 4C CA 67            JMP @try_sail_n_s

$67A8: 18          @try_sail_e_w CLC 
$67A9: BD 20 AC            LDA object_xpos,X
$67AC: 65 78               ADC delta_x
$67AE: 85 7A               STA temp_x
$67B0: BD 40 AC            LDA object_ypos,X
$67B3: 85 7B               STA temp_y
$67B5: 20 81 08            JSR j_gettile_bounds
$67B8: 20 1D 7E            JSR legal_move_world_twn
$67BB: D0 56               BNE @turn_ship_random
$67BD: BD 00 AC            LDA object_tile_sprite,X
$67C0: 29 03               AND #$03     ;#-
$67C2: 20 96 6A            JSR is_wind_favorable
$67C5: D0 25               BNE @no_move
$67C7: 4C D3 68            JMP @do_move

$67CA: 18          @try_sail_n_s CLC 
$67CB: BD 20 AC            LDA object_xpos,X
$67CE: 85 7A               STA temp_x
$67D0: BD 40 AC            LDA object_ypos,X
$67D3: 65 79               ADC delta_y
$67D5: 85 7B               STA temp_y
$67D7: 20 81 08            JSR j_gettile_bounds
$67DA: 20 1D 7E            JSR legal_move_world_twn
$67DD: D0 34               BNE @turn_ship_random
$67DF: BD 00 AC            LDA object_tile_sprite,X
$67E2: 29 03               AND #$03     ;#-
$67E4: 20 96 6A            JSR is_wind_favorable
$67E7: D0 03               BNE @no_move
$67E9: 4C D3 68            JMP @do_move

$67EC: 60          @no_move RTS 

$67ED: A5 7A       @turn_ship LDA temp_x
$67EF: C5 7B               CMP temp_y
$67F1: B0 10               BCS @turn_east_or_west
$67F3: A5 7B               LDA temp_y
$67F5: 10 06               BPL @turn_south
$67F7: A9 81               LDA #$81     ;#tile_pirate_north
$67F9: 9D 00 AC            STA object_tile_sprite,X
$67FC: 60                  RTS 

$67FD: A9 83       @turn_south LDA #$83     ;#tile_pirate_south
$67FF: 9D 00 AC            STA object_tile_sprite,X
$6802: 60                  RTS 

$6803: A5 7A       @turn_east_or_west LDA temp_x
$6805: 10 06               BPL @turn_east
$6807: A9 80               LDA #$80     ;#tile_pirate_west
$6809: 9D 00 AC            STA object_tile_sprite,X
$680C: 60                  RTS 

$680D: A9 82       @turn_east LDA #$82     ;#tile_pirate_east
$680F: 9D 00 AC            STA object_tile_sprite,X
$6812: 60                  RTS 

$6813: 20 4E 08    @turn_ship_random JSR j_rand
$6816: 20 6A 82            JSR math_sign
$6819: 18                  CLC 
$681A: 7D 00 AC            ADC object_tile_sprite,X
$681D: 29 03               AND #$03     ;#-
$681F: 09 80               ORA #$80     ;#tile_pirate
$6821: 9D 00 AC            STA object_tile_sprite,X
$6824: 60                  RTS 

$6825: BD 60 AC    @not_pirate LDA object_tile_type,X
$6828: C9 88               CMP #$88     ;#tile_serpent
$682A: F0 08               BEQ @range_attack
$682C: C9 E8               CMP #$E8     ;#tile_lava_lizard
$682E: F0 04               BEQ @range_attack
$6830: C9 F4               CMP #$F4     ;#tile_hydra
$6832: 90 1F               BCC @try_move
$6834: 20 2E 6C    @range_attack JSR manhattan_dist_foe
$6837: A5 7A               LDA temp_x
$6839: 20 76 82            JSR math_abs
$683C: C9 05               CMP #$05     ;#range_missile_attack
$683E: B0 13               BCS @try_move
$6840: A5 7B               LDA temp_y
$6842: 20 76 82            JSR math_abs
$6845: C9 05               CMP #$05     ;#range_missile_attack
$6847: B0 0A               BCS @try_move
$6849: 20 4E 08            JSR j_rand
$684C: 30 05               BMI @try_move
$684E: 20 A0 6B            JSR fire_red_missile
$6851: A6 58               LDX zp58     ;$zp_index
$6853: A9 02       @try_move LDA #$02     ;#-
$6855: 85 70               STA zp70     ;$zp_attempts
$6857: BD 60 AC            LDA object_tile_type,X
$685A: C9 8C               CMP #$8C     ;#tile_whirlpool
$685C: F0 60               BEQ @try_random
$685E: C9 8E               CMP #$8E     ;#tile_twister
$6860: F0 5C               BEQ @try_random
$6862: 20 CD 86            JSR is_evil
$6865: 30 07               BMI @x_or_y
$6867: 20 4E 08            JSR j_rand
$686A: 29 03               AND #$03     ;#chance_4
$686C: D0 50               BNE @try_random
$686E: 20 4E 08    @x_or_y JSR j_rand
$6871: 30 19               BMI @try_y
$6873: A5 78               LDA delta_x
$6875: F0 15               BEQ @try_y
$6877: 18                  CLC 
$6878: BD 20 AC            LDA object_xpos,X
$687B: 65 78               ADC delta_x
$687D: 85 7A               STA temp_x
$687F: BD 40 AC            LDA object_ypos,X
$6882: 85 7B               STA temp_y
$6884: 20 81 08            JSR j_gettile_bounds
$6887: 20 1D 7E            JSR legal_move_world_twn
$688A: F0 47               BEQ @do_move
$688C: A5 79       @try_y  LDA delta_y
$688E: F0 15               BEQ @try_x
$6890: BD 20 AC            LDA object_xpos,X
$6893: 85 7A               STA temp_x
$6895: 18                  CLC 
$6896: BD 40 AC            LDA object_ypos,X
$6899: 65 79               ADC delta_y
$689B: 85 7B               STA temp_y
$689D: 20 81 08            JSR j_gettile_bounds
$68A0: 20 1D 7E            JSR legal_move_world_twn
$68A3: F0 2E               BEQ @do_move
$68A5: A5 78       @try_x  LDA delta_x
$68A7: F0 15               BEQ @try_random
$68A9: 18                  CLC 
$68AA: BD 20 AC            LDA object_xpos,X
$68AD: 65 78               ADC delta_x
$68AF: 85 7A               STA temp_x
$68B1: BD 40 AC            LDA object_ypos,X
$68B4: 85 7B               STA temp_y
$68B6: 20 81 08            JSR j_gettile_bounds
$68B9: 20 1D 7E            JSR legal_move_world_twn
$68BC: F0 15               BEQ @do_move
$68BE: 20 4E 08    @try_random JSR j_rand
$68C1: 20 6A 82            JSR math_sign
$68C4: 85 78               STA delta_x
$68C6: 20 4E 08            JSR j_rand
$68C9: 20 6A 82            JSR math_sign
$68CC: 85 79               STA delta_y
$68CE: C6 70               DEC zp70     ;$zp_attempts
$68D0: D0 9C               BNE @x_or_y
$68D2: 60                  RTS 

$68D3: BD 20 AC    @do_move LDA object_xpos,X
$68D6: 9D 80 AC            STA object_xpos_prev,X
$68D9: BD 40 AC            LDA object_ypos,X
$68DC: 9D A0 AC            STA object_ypos_prev,X
$68DF: A5 7A               LDA temp_x
$68E1: 9D 20 AC            STA object_xpos,X
$68E4: A5 7B               LDA temp_y
$68E6: 9D 40 AC            STA object_ypos,X
$68E9: 60                  RTS 

$68EA: C9 10       mobs_act_towne CMP #$10     ;# mode non-combat
$68EC: 90 01               BCC +
$68EE: 60                  RTS 

$68EF: A2 1F       +       LDX #$1F     ;#object_max
$68F1: A9 02       @next   LDA #$02     ;#-
$68F3: 85 70               STA zp70     ;$zp_attempts
$68F5: BD 60 AC            LDA object_tile_type,X
$68F8: F0 32               BEQ @no_move
$68FA: BD C0 AC            LDA object_dng_level,X
$68FD: F0 2D               BEQ @no_move
$68FF: 30 18               BMI @toward_player
$6901: 20 4E 08            JSR j_rand
$6904: 30 26               BMI @no_move
$6906: 20 4E 08    @try_random JSR j_rand
$6909: 20 6A 82            JSR math_sign
$690C: 85 78               STA delta_x
$690E: 20 4E 08            JSR j_rand
$6911: 20 6A 82            JSR math_sign
$6914: 85 79               STA delta_y
$6916: 4C 2F 69            JMP @x_or_y

$6919: 20 5A 6C    @toward_player JSR manhattan_dist_towne
$691C: C9 02               CMP #$02     ;#-
$691E: B0 0F               BCS @x_or_y
$6920: BD C0 AC            LDA object_dng_level,X
$6923: C9 FF               CMP #$FF
$6925: D0 08               BNE @x_or_y
$6927: 86 58               STX zp58     ;$zp_index
$6929: 20 E7 66            JSR player_attacked
$692C: 4C AB 69    @no_move JMP @skip

$692F: 20 4E 08    @x_or_y JSR j_rand
$6932: 30 19               BMI @try_y
$6934: A5 78               LDA delta_x
$6936: F0 15               BEQ @try_y
$6938: 18                  CLC 
$6939: BD 20 AC            LDA object_xpos,X
$693C: 65 78               ADC delta_x
$693E: 85 7A               STA temp_x
$6940: BD 40 AC            LDA object_ypos,X
$6943: 85 7B               STA temp_y
$6945: 20 93 08            JSR j_gettile_towne
$6948: 20 1D 7E            JSR legal_move_world_twn
$694B: F0 3C               BEQ @do_move
$694D: A5 79       @try_y  LDA delta_y
$694F: F0 15               BEQ @try_x
$6951: 18                  CLC 
$6952: BD 40 AC            LDA object_ypos,X
$6955: 65 79               ADC delta_y
$6957: 85 7B               STA temp_y
$6959: BD 20 AC            LDA object_xpos,X
$695C: 85 7A               STA temp_x
$695E: 20 93 08            JSR j_gettile_towne
$6961: 20 1D 7E            JSR legal_move_world_twn
$6964: F0 23               BEQ @do_move
$6966: 18          @try_x  CLC 
$6967: BD 20 AC            LDA object_xpos,X
$696A: 65 78               ADC delta_x
$696C: 85 7A               STA temp_x
$696E: BD 40 AC            LDA object_ypos,X
$6971: 85 7B               STA temp_y
$6973: 20 93 08            JSR j_gettile_towne
$6976: 20 1D 7E            JSR legal_move_world_twn
$6979: F0 0E               BEQ @do_move
$697B: BD C0 AC            LDA object_dng_level,X
$697E: C9 80               CMP #$80     ;dng_tile_trap|file_id_spar|file_saved_party|mode_combat_wandering|tile_monster_water|tile_pirate|tile_pirate_west
$6980: F0 29               BEQ @skip
$6982: C6 70               DEC zp70     ;$zp_attempts
$6984: 30 25               BMI @skip
$6986: 4C 06 69            JMP @try_random

$6989: A5 7A       @do_move LDA temp_x
$698B: C9 20               CMP #$20     ;#xy_last_towne
$698D: B0 1C               BCS @skip
$698F: A5 7B               LDA temp_y
$6991: C9 20               CMP #$20     ;#xy_last_towne
$6993: B0 16               BCS @skip
$6995: BD 20 AC            LDA object_xpos,X
$6998: 9D 80 AC            STA object_xpos_prev,X
$699B: BD 40 AC            LDA object_ypos,X
$699E: 9D A0 AC            STA object_ypos_prev,X
$69A1: A5 7A               LDA temp_x
$69A3: 9D 20 AC            STA object_xpos,X
$69A6: A5 7B               LDA temp_y
$69A8: 9D 40 AC            STA object_ypos,X
$69AB: CA          @skip   DEX 
$69AC: 30 03               BMI @done
$69AE: 4C F1 68            JMP @next

$69B1: 60          @done   RTS 

$69B2: A2 1F       mobs_act_dungeon LDX #$1F     ;#object_max
$69B4: BD 60 AC    @next   LDA object_tile_type,X
$69B7: F0 19               BEQ @skip
$69B9: BD C0 AC            LDA object_dng_level,X
$69BC: C5 1C               CMP dungeon_level
$69BE: D0 12               BNE @skip
$69C0: BD 60 AC            LDA object_tile_type,X
$69C3: C9 AC               CMP #$AC     ;#tile_mimic
$69C5: F0 0B               BEQ @skip
$69C7: C9 B0               CMP #$B0     ;#tile_reaper
$69C9: F0 07               BEQ @skip
$69CB: A9 07               LDA #$07     ;#-
$69CD: 85 70               STA zp70     ;$zp_attempts
$69CF: 4C D5 69            JMP @check_at_player

$69D2: 4C 79 6A    @skip   JMP @no_move

$69D5: BD 20 AC    @check_at_player LDA object_xpos,X
$69D8: C5 10               CMP player_xpos
$69DA: D0 07               BNE @try_random
$69DC: BD 40 AC            LDA object_ypos,X
$69DF: C5 11               CMP player_ypos
$69E1: F0 EF               BEQ @skip
$69E3: 20 4E 08    @try_random JSR j_rand
$69E6: 20 6A 82            JSR math_sign
$69E9: 85 78               STA delta_x
$69EB: 20 4E 08            JSR j_rand
$69EE: 20 6A 82            JSR math_sign
$69F1: 85 79               STA delta_y
$69F3: 20 4E 08            JSR j_rand
$69F6: 30 19               BMI @try_y
$69F8: A5 78               LDA delta_x
$69FA: F0 15               BEQ @try_y
$69FC: 18                  CLC 
$69FD: 7D 20 AC            ADC object_xpos,X
$6A00: 29 07               AND #$07     ;#xy_max_dungeon
$6A02: 85 16               STA dest_x
$6A04: BD 40 AC            LDA object_ypos,X
$6A07: 85 17               STA dest_y
$6A09: 20 96 08            JSR j_gettile_dungeon
$6A0C: 20 B0 7F            JSR legal_move_dungeon
$6A0F: F0 37               BEQ @do_move
$6A11: A5 79       @try_y  LDA delta_y
$6A13: F0 15               BEQ @try_x
$6A15: 18                  CLC 
$6A16: 7D 40 AC            ADC object_ypos,X
$6A19: 29 07               AND #$07     ;#xy_max_dungeon
$6A1B: 85 17               STA dest_y
$6A1D: BD 20 AC            LDA object_xpos,X
$6A20: 85 16               STA dest_x
$6A22: 20 96 08            JSR j_gettile_dungeon
$6A25: 20 B0 7F            JSR legal_move_dungeon
$6A28: F0 1E               BEQ @do_move
$6A2A: 18          @try_x  CLC 
$6A2B: BD 20 AC            LDA object_xpos,X
$6A2E: 65 78               ADC delta_x
$6A30: 29 07               AND #$07     ;#xy_max_dungeon
$6A32: 85 16               STA dest_x
$6A34: BD 40 AC            LDA object_ypos,X
$6A37: 85 17               STA dest_y
$6A39: 20 96 08            JSR j_gettile_dungeon
$6A3C: 20 B0 7F            JSR legal_move_dungeon
$6A3F: F0 07               BEQ @do_move
$6A41: C6 70               DEC zp70     ;$zp_attempts
$6A43: 10 9E               BPL @try_random
$6A45: 4C 79 6A            JMP @no_move

$6A48: BD 60 AC    @do_move LDA object_tile_type,X
$6A4B: 20 83 6A            JSR tile_to_monster_num
$6A4E: 11 7E               ORA (ptr1),Y
$6A50: 91 7E               STA (ptr1),Y
$6A52: BD 20 AC            LDA object_xpos,X
$6A55: 9D 80 AC            STA object_xpos_prev,X
$6A58: BD 40 AC            LDA object_ypos,X
$6A5B: 9D A0 AC            STA object_ypos_prev,X
$6A5E: A5 16               LDA dest_x
$6A60: 9D 20 AC            STA object_xpos,X
$6A63: A5 17               LDA dest_y
$6A65: 9D 40 AC            STA object_ypos,X
$6A68: BD 80 AC            LDA object_xpos_prev,X
$6A6B: 85 16               STA dest_x
$6A6D: BD A0 AC            LDA object_ypos_prev,X
$6A70: 85 17               STA dest_y
$6A72: 20 96 08            JSR j_gettile_dungeon
$6A75: 29 F0               AND #$F0     ;#dng_tile_type_mask
$6A77: 91 7E               STA (ptr1),Y
$6A79: CA          @no_move DEX 
$6A7A: 30 03               BMI @done
$6A7C: 4C B4 69            JMP @next

$6A7F: 20 00 8C    @done   JSR j_dng_check_update
$6A82: 60                  RTS 

$6A83: 38          tile_to_monster_num SEC 
$6A84: E9 90               SBC #$90     ;#tile_monster_dungeon
$6A86: 4A                  LSR 
$6A87: 4A                  LSR 
$6A88: 18                  CLC 
$6A89: 69 01               ADC #$01     ;#-
$6A8B: A0 00               LDY #$00     ;#-
$6A8D: 60                  RTS 

$6A8E:                     .BYTE $FF,$00,$01,$00,$00,$FF,$00,$01
-                                                                           
$6A96: C5 75       is_wind_favorable CMP direction
$6A98: F0 11               BEQ @upwind
$6A9A: 18                  CLC 
$6A9B: 69 02               ADC #$02     ;# opposite
$6A9D: 29 03               AND #$03     ;# modulo
$6A9F: C5 75               CMP direction
$6AA1: D0 11               BNE @yes
$6AA3: A5 69       @downwind LDA turn_counter
$6AA5: 29 03               AND #$03     ;#-
$6AA7: D0 0B               BNE @yes
$6AA9: F0 06               BEQ @no
$6AAB: A5 69       @upwind LDA turn_counter
$6AAD: 29 03               AND #$03     ;#-
$6AAF: F0 03               BEQ @yes
$6AB1: A9 FF       @no     LDA #$FF
$6AB3: 60                  RTS 

$6AB4: A9 00       @yes    LDA #$00     ;#-
$6AB6: 60                  RTS 

$6AB7: A5 1B       check_water_hazards LDA game_mode
$6AB9: C9 01               CMP #$01     ;#mode_world
$6ABB: F0 01               BEQ +
$6ABD: 60                  RTS 

$6ABE: A2 03       +       LDX #$03     ;#object_wandering_max
$6AC0: BD 60 AC    @next_obj LDA object_tile_type,X
$6AC3: C9 8C               CMP #$8C     ;#tile_whirlpool
$6AC5: F0 08               BEQ @whirlpool
$6AC7: C9 8E               CMP #$8E     ;#tile_twister
$6AC9: F0 54               BEQ @twister
$6ACB: CA          @next_hazard DEX 
$6ACC: 10 F2               BPL @next_obj
$6ACE: 60                  RTS 

$6ACF: A9 0B       @whirlpool LDA #$0B     ;#sound_drown
$6AD1: 85 5B               STA zp5B     ;$zp_sound
$6AD3: BD 20 AC            LDA object_xpos,X
$6AD6: C5 10               CMP player_xpos
$6AD8: D0 0A               BNE @check_objects
$6ADA: BD 40 AC            LDA object_ypos,X
$6ADD: C5 11               CMP player_ypos
$6ADF: D0 03               BNE @check_objects
$6AE1: 20 37 6B            JSR enter_whirlpool
-                                                                           
$6AE4: A0 1F       @check_objects LDY #$1F     ;#object_max
$6AE6: 86 58       @next_victim STX zp58     ;$zp_index
$6AE8: C4 58               CPY zp58     ;$zp_index
$6AEA: F0 2D               BEQ @skip    ;# doesn't affect itself
$6AEC: B9 60 AC            LDA object_tile_type,Y
$6AEF: F0 28               BEQ @skip    ;# nothing there
$6AF1: BD 20 AC            LDA object_xpos,X
$6AF4: D9 20 AC            CMP object_xpos,Y
$6AF7: D0 20               BNE @skip
$6AF9: BD 40 AC            LDA object_ypos,X
$6AFC: D9 40 AC            CMP object_ypos,Y
$6AFF: D0 18               BNE @skip
$6B01: A9 00               LDA #$00     ;# destroy what's there
$6B03: 99 60 AC            STA object_tile_type,Y
$6B06: 99 00 AC            STA object_tile_sprite,Y
$6B09: 86 58               STX zp58     ;$zp_index
$6B0B: 84 59               STY zp59
$6B0D: 20 4B 08            JSR j_update_view
$6B10: A5 5B               LDA zp5B     ;$zp_sound
$6B12: 20 54 08            JSR j_playsfx
$6B15: A6 58               LDX zp58     ;$zp_index
$6B17: A4 59               LDY zp59
$6B19: 88          @skip   DEY 
$6B1A: 10 CA               BPL @next_victim
$6B1C: 4C CB 6A            JMP @next_hazard

$6B1F: A9 0C       @twister LDA #$0C     ;#sound_twister
$6B21: 85 5B               STA zp5B     ;$zp_sound
$6B23: BD 20 AC            LDA object_xpos,X
$6B26: C5 10               CMP player_xpos
$6B28: D0 BA               BNE @check_objects
$6B2A: BD 40 AC            LDA object_ypos,X
$6B2D: C5 11               CMP player_ypos
$6B2F: D0 B3               BNE @check_objects
$6B31: 20 5D 6B            JSR enter_twister
$6B34: 4C E4 6A            JMP @check_objects

$6B37: 86 58       enter_whirlpool STX zp58
$6B39: 20 4B 08            JSR j_update_view
$6B3C: A9 8C               LDA #$8C     ;#tile_whirlpool
$6B3E: 85 1E               STA player_transport
$6B40: 20 4B 08            JSR j_update_view
$6B43: A9 7F               LDA #$7F     ;# center of Lock Lake
$6B45: 85 10               STA player_xpos
$6B47: A9 4E               LDA #$4E     ;#-
$6B49: 85 11               STA player_ypos
$6B4B: A9 0B               LDA #$0B     ;#sound_drown
$6B4D: 20 54 08            JSR j_playsfx
$6B50: 20 7A 85            JSR damage_party
$6B53: A6 58               LDX zp58
$6B55: A9 10               LDA #$10     ;#tile_ship_west
$6B57: 85 1E               STA player_transport
$6B59: 20 03 08            JSR j_player_teleport
$6B5C: 60                  RTS 

$6B5D: 86 58       enter_twister STX zp58
$6B5F: A5 1E               LDA player_transport
$6B61: 48                  PHA 
$6B62: A9 8E               LDA #$8E     ;#tile_twister
$6B64: 85 1E               STA player_transport
$6B66: 20 4B 08            JSR j_update_view
$6B69: A9 0C               LDA #$0C     ;#sound_twister
$6B6B: 20 54 08            JSR j_playsfx
$6B6E: 20 7A 85            JSR damage_party
$6B71: 20 7A 85            JSR damage_party
$6B74: 20 7A 85            JSR damage_party
$6B77: 20 7A 85            JSR damage_party
$6B7A: 68                  PLA 
$6B7B: 85 1E               STA player_transport
$6B7D: A6 58               LDX zp58
$6B7F: 60                  RTS 

$6B80: A9 4D       fire_cannon_pirate LDA #$4D     ;#tile_attack_small
$6B82: 8D FD AD            STA attack_sprite
$6B85: 20 C0 6B            JSR fire_world_missile
$6B88: 10 01               BPL +
$6B8A: 60                  RTS 

$6B8B: 20 87 08    +       JSR j_gettile_opposite
$6B8E: 48                  PHA 
$6B8F: A9 4F               LDA #$4F     ;#tile_attack_red
$6B91: 91 7E               STA (ptr1),Y
$6B93: 20 63 08            JSR j_animate_view
$6B96: 20 7A 85            JSR damage_party
$6B99: 20 87 08            JSR j_gettile_opposite
$6B9C: 68                  PLA 
$6B9D: 91 7E               STA (ptr1),Y
$6B9F: 60                  RTS 

$6BA0: A9 4F       fire_red_missile LDA #$4F     ;#tile_attack_red
$6BA2: 8D FD AD            STA attack_sprite
$6BA5: 20 C0 6B            JSR fire_world_missile
$6BA8: 10 01               BPL +
$6BAA: 60                  RTS 

$6BAB: 20 87 08    +       JSR j_gettile_opposite
$6BAE: 48                  PHA 
$6BAF: A9 4F               LDA #$4F     ;#tile_attack_red
$6BB1: 91 7E               STA (ptr1),Y
$6BB3: 20 63 08            JSR j_animate_view
$6BB6: 20 7A 85            JSR damage_party
$6BB9: 20 87 08            JSR j_gettile_opposite
$6BBC: 68                  PLA 
$6BBD: 91 7E               STA (ptr1),Y
$6BBF: 60                  RTS 

$6BC0: A9 03       fire_world_missile LDA #$03     ;#range_missile_travel
$6BC2: 85 6A               STA zp6A     ;$zp_missile_travel
$6BC4: BD 20 AC            LDA object_xpos,X
$6BC7: 85 7A               STA temp_x
$6BC9: BD 40 AC            LDA object_ypos,X
$6BCC: 85 7B               STA temp_y
$6BCE: 20 4B 08            JSR j_update_view
$6BD1: A9 03               LDA #$03     ;#sound_cannon
$6BD3: 20 54 08            JSR j_playsfx
$6BD6: 18          @next   CLC 
$6BD7: A5 7A               LDA temp_x
$6BD9: 65 78               ADC delta_x
$6BDB: 85 7A               STA temp_x
$6BDD: 18                  CLC 
$6BDE: A5 7B               LDA temp_y
$6BE0: 65 79               ADC delta_y
$6BE2: 85 7B               STA temp_y
$6BE4: C5 11               CMP player_ypos
$6BE6: D0 09               BNE @check_other_object
$6BE8: A5 7A               LDA temp_x
$6BEA: C5 10               CMP player_xpos
$6BEC: D0 03               BNE @check_other_object
$6BEE: A9 00               LDA #$00     ;# hit player
$6BF0: 60                  RTS 

$6BF1: 20 3A 83    @check_other_object JSR any_obj_at_temp_xy
$6BF4: 10 19               BPL @missile_impact
$6BF6: 20 87 08            JSR j_gettile_opposite
$6BF9: 48                  PHA 
$6BFA: AD FD AD            LDA attack_sprite
$6BFD: 91 7E               STA (ptr1),Y
$6BFF: 20 63 08            JSR j_animate_view
$6C02: 20 87 08            JSR j_gettile_opposite
$6C05: 68                  PLA 
$6C06: 91 7E               STA (ptr1),Y
$6C08: C6 6A               DEC zp6A     ;$zp_missile_travel
$6C0A: D0 CA               BNE @next
$6C0C: A9 FF               LDA #$FF     ;# miss
$6C0E: 60                  RTS 

$6C0F: 86 59       @missile_impact STX zp59
$6C11: A9 06               LDA #$06     ;#sound_damage
$6C13: 20 54 08            JSR j_playsfx
$6C16: A6 59               LDX zp59
$6C18: E0 08               CPX #$08     ;# characters roll chance, objects instant obliterate
$6C1A: B0 07               BCS @destroyed
$6C1C: 20 4E 08            JSR j_rand
$6C1F: 29 03               AND #$03     ;#chance_4
$6C21: D0 08               BNE @no_player_damage
$6C23: A9 00       @destroyed LDA #$00     ;#-
$6C25: 9D 60 AC            STA object_tile_type,X
$6C28: 9D 00 AC            STA object_tile_sprite,X
$6C2B: A9 FF       @no_player_damage LDA #$FF
$6C2D: 60                  RTS 

$6C2E: 38          manhattan_dist_foe SEC 
$6C2F: A5 10               LDA player_xpos
$6C31: FD 20 AC            SBC object_xpos,X
$6C34: 85 7A               STA temp_x
$6C36: 20 6A 82            JSR math_sign
$6C39: 85 78               STA delta_x
$6C3B: 38                  SEC 
$6C3C: A5 11               LDA player_ypos
$6C3E: FD 40 AC            SBC object_ypos,X
$6C41: 85 7B               STA temp_y
$6C43: 20 6A 82            JSR math_sign
$6C46: 85 79               STA delta_y
$6C48: A5 7A               LDA temp_x
$6C4A: 20 76 82            JSR math_abs
$6C4D: 85 59               STA zp59
$6C4F: A5 7B               LDA temp_y
$6C51: 20 76 82            JSR math_abs
$6C54: 18                  CLC 
$6C55: 65 59               ADC zp59
$6C57: 85 59               STA zp59
$6C59: 60                  RTS 

			 ; stupid; same routine pasted twice!
$6C5A: 38          manhattan_dist_towne SEC 
$6C5B: A5 10               LDA player_xpos
$6C5D: FD 20 AC            SBC object_xpos,X
$6C60: 85 7A               STA temp_x
$6C62: 20 6A 82            JSR math_sign
$6C65: 85 78               STA delta_x
$6C67: 38                  SEC 
$6C68: A5 11               LDA player_ypos
$6C6A: FD 40 AC            SBC object_ypos,X
$6C6D: 85 7B               STA temp_y
$6C6F: 20 6A 82            JSR math_sign
$6C72: 85 79               STA delta_y
$6C74: A5 7A               LDA temp_x
$6C76: 20 76 82            JSR math_abs
$6C79: 85 59               STA zp59
$6C7B: A5 7B               LDA temp_y
$6C7D: 20 76 82            JSR math_abs
$6C80: 18                  CLC 
$6C81: 65 59               ADC zp59
$6C83: 85 59               STA zp59
$6C85: 60                  RTS 

$6C86: E6 69       end_turn INC turn_counter
$6C88: F8                  SED 
$6C89: 18                  CLC 
$6C8A: A5 2F               LDA move_counter + 3
$6C8C: 69 01               ADC #$01     ;#-
$6C8E: 85 2F               STA move_counter + 3
$6C90: A5 2E               LDA move_counter + 2
$6C92: 69 00               ADC #$00     ;#-
$6C94: 85 2E               STA move_counter + 2
$6C96: A5 2D               LDA move_counter + 1
$6C98: 69 00               ADC #$00     ;#-
$6C9A: 85 2D               STA move_counter + 1
$6C9C: A5 2C               LDA move_counter
$6C9E: 69 00               ADC #$00     ;#-
$6CA0: 85 2C               STA move_counter
$6CA2: D8                  CLD 
$6CA3: A5 47               LDA aura_duration
$6CA5: F0 08               BEQ @check_light
$6CA7: C6 47               DEC aura_duration
$6CA9: D0 04               BNE @check_light
$6CAB: A9 25               LDA #$25     ;#aura_none
$6CAD: 85 46               STA magic_aura
$6CAF: A5 1B       @check_light LDA game_mode
$6CB1: C9 03               CMP #$03     ;#mode_dungeon
$6CB3: D0 13               BNE @update
$6CB5: A5 21               LDA light_duration
$6CB7: D0 0F               BNE @update
$6CB9: 20 21 08            JSR j_primm  ;b"IT'S DARK!\n\x00"
$6CBC:                     .BYTE $C9,$D4,$A7,$D3,$A0,$C4,$C1,$D2
$6CC4:                     .BYTE $CB,$A1,$8D,$00
$6CC8: 20 45 08    @update JSR j_update_status
$6CCB: 20 0A 80            JSR close_open_door
$6CCE: 4C 7B 40            JMP next_turn

$6CD1: A2 00       inn_combat LDX #$00     ;#-
$6CD3: A9 00               LDA #$00     ;#-
$6CD5: 9D 00 AD    -       STA combat_foe_cur_x,X
$6CD8: E8                  INX 
$6CD9: D0 FA               BNE -
$6CDB: A9 01               LDA #$01     ;# inn combat is only with main player
$6CDD: 85 54               STA curr_player
$6CDF: A5 1B               LDA game_mode
$6CE1: 85 68               STA game_mode_pre_combat
$6CE3: A9 82               LDA #$82     ;#mode_combat_inn
$6CE5: 85 1B               STA game_mode
$6CE7: A9 C8               LDA #$C8     ;#tile_rogue
$6CE9: 85 40               STA foe_type_encountered
$6CEB: 85 66               STA foe_type_combat
$6CED: A9 C1               LDA #$C1     ;#arena_inn
$6CEF: 4C 8C 6F            JMP load_arena

$6CF2: A5 48       dng_check_attacked LDA tile_under_player
$6CF4: 29 0F               AND #$0F     ;#-
$6CF6: F0 76               BEQ @nope
$6CF8: A5 48               LDA tile_under_player
$6CFA: 29 F0               AND #$F0     ;#dng_tile_type_mask
$6CFC: C9 80               CMP #$80     ;#dng_tile_trap
$6CFE: F0 6E               BEQ @nope
$6D00: C9 90               CMP #$90     ;#dng_tile_fountain
$6D02: F0 6A               BEQ @nope
$6D04: C9 A0               CMP #$A0     ;#dng_tile_field
$6D06: F0 66               BEQ @nope
$6D08: C9 D0               CMP #$D0     ;#dng_tile_room
$6D0A: F0 62               BEQ @nope
$6D0C: C9 F0               CMP #$F0     ;#dng_tile_wall
$6D0E: F0 5E               BEQ @nope
$6D10: A5 48               LDA tile_under_player
$6D12: 29 0F               AND #$0F     ;#-
$6D14: 0A                  ASL 
$6D15: 0A                  ASL 
$6D16: 69 8C               ADC #$8C     ;# tile monster base
$6D18: 85 40               STA foe_type_encountered
$6D1A: 85 66               STA foe_type_combat
$6D1C: A5 10               LDA player_xpos
$6D1E: 85 16               STA dest_x
$6D20: A5 11               LDA player_ypos
$6D22: 85 17               STA dest_y
$6D24: 20 96 08            JSR j_gettile_dungeon
$6D27: 29 F0               AND #$F0     ;#dng_tile_type_mask
$6D29: 91 7E               STA (ptr1),Y
$6D2B: A2 1F               LDX #$1F     ;#object_max
$6D2D: BD C0 AC    @next   LDA object_dng_level,X
$6D30: C5 1C               CMP dungeon_level
$6D32: D0 1F               BNE @skip
$6D34: BD 20 AC            LDA object_xpos,X
$6D37: C5 10               CMP player_xpos
$6D39: D0 18               BNE @skip
$6D3B: BD 40 AC            LDA object_ypos,X
$6D3E: C5 11               CMP player_ypos
$6D40: D0 11               BNE @skip
$6D42: A9 00               LDA #$00     ;#-
$6D44: 9D C0 AC            STA object_dng_level,X
$6D47: 9D 60 AC            STA object_tile_type,X
$6D4A: 9D 20 AC            STA object_xpos,X
$6D4D: 9D 40 AC            STA object_ypos,X
$6D50: 4C 56 6D            JMP @attacked

$6D53: CA          @skip   DEX 
$6D54: 10 D7               BPL @next
$6D56: A2 00       @attacked LDX #$00     ;#-
$6D58: 8A                  TXA 
$6D59: 9D 00 AD    -       STA combat_foe_cur_x,X
$6D5C: CA                  DEX 
$6D5D: D0 FA               BNE -
$6D5F: 68                  PLA 
$6D60: 68                  PLA 
$6D61: A5 48               LDA tile_under_player
$6D63: 4A                  LSR 
$6D64: 4A                  LSR 
$6D65: 4A                  LSR 
$6D66: 4A                  LSR 
$6D67: AA                  TAX 
$6D68: BD 6F 6D            LDA dungeon_arena,X
$6D6B: 4C 8C 6F            JMP load_arena

$6D6E: 60          @nope   RTS 

$6D6F:             dungeon_arena .BYTE $B0    ;#arena_dng_hall ; hall
$6D70:                     .BYTE $B1    ;#arena_dng_ladder_up
$6D71:                     .BYTE $B2    ;#arena_dng_ladder_down
$6D72:                     .BYTE $B3    ;#arena_dng_ladder_both
$6D73:                     .BYTE $B4    ;#arena_dng_chest
$6D74:                     .BYTE $B0    ;#arena_dng_hall ; hole up
$6D75:                     .BYTE $B0    ;#arena_dng_hall ; hole down
$6D76:                     .BYTE $B0    ;#arena_dng_hall ; orb
$6D77:                     .BYTE $B0    ;#arena_dng_hall ; trap
$6D78:                     .BYTE $B0    ;#arena_dng_hall ; fountain
$6D79:                     .BYTE $B0    ;#arena_dng_hall ; field
$6D7A:                     .BYTE $B0    ;#arena_dng_hall ; altar
$6D7B:                     .BYTE $B5    ;#arena_dng_door
$6D7C:                     .BYTE $B0    ;#arena_dng_hall ; room
$6D7D:                     .BYTE $B6    ;#arena_dng_secret_door
$6D7E:                     .BYTE $B0    ;#arena_dng_hall ; wall
-                                                                           
$6D7F: A9 00       do_dungeon_room LDA #$00     ;#music_off
$6D81: 20 20 AF            JSR music_ctl
$6D84: 38                  SEC 
$6D85: A5 1A               LDA current_location
$6D87: E9 11               SBC #$11     ;#loc_dng_first
$6D89: 85 60               STA lt_hi    ;up to 16 rooms per dungeon
$6D8B: C9 07               CMP #$07     ;# except abyss, 16 rooms per 2 levels
$6D8D: D0 08               BNE +
$6D8F: A5 1C               LDA dungeon_level
$6D91: 4A                  LSR 
$6D92: 18                  CLC 
$6D93: 65 60               ADC lt_hi
$6D95: 85 60               STA lt_hi
$6D97: A5 48       +       LDA tile_under_player
$6D99: 29 0F               AND #$0F     ;#-
$6D9B: 85 61               STA lt_lo
$6D9D: A9 01               LDA #$01     ;#lt_rwflag_read
$6D9F: 85 62               STA lt_rwflag
$6DA1: A9 AE               LDA #$AE
$6DA3: 85 63               STA lt_addr_hi
$6DA5: 20 51 08            JSR j_loadsector
$6DA8: A5 1B               LDA game_mode
$6DAA: 85 68               STA game_mode_pre_combat
$6DAC: A9 81               LDA #$81     ;#mode_combat_dng_room
$6DAE: 85 1B               STA game_mode
$6DB0: A9 00               LDA #$00     ;#-
$6DB2: 8D 82 79            STA flee_x
$6DB5: 8D 83 79            STA flee_y
$6DB8: A2 FF               LDX #$FF
$6DBA: A5 61               LDA lt_lo
$6DBC: C9 0F               CMP #$0F     ;# room index "altar"
$6DBE: D0 4E               BNE @init_arena
$6DC0: A5 60               LDA lt_hi
$6DC2: C9 07               CMP #$07     ;# except in abyss
$6DC4: B0 48               BCS @init_arena
$6DC6: 20 21 08            JSR j_primm  ;b'\nTHE ALTER ROOM\nOF \x00'
$6DC9:                     .BYTE $8D,$D4,$C8,$C5,$A0,$C1,$CC,$D4
$6DD1:                     .BYTE $C5,$D2,$A0,$D2,$CF,$CF,$CD,$8D
$6DD9:                     .BYTE $CF,$C6,$A0,$00
$6DDD: A5 10               LDA player_xpos
$6DDF: C9 03               CMP #$03     ;#-
$6DE1: F0 10               BEQ @love
$6DE3: B0 1B               BCS @courage
$6DE5: 20 21 08            JSR j_primm  ;b'TRUTH\n\x00'
$6DE8:                     .BYTE $D4,$D2,$D5,$D4,$C8,$8D,$00
$6DEF: A2 00               LDX #$00     ;#principle_truth
$6DF1: F0 1B               BEQ @init_arena
$6DF3: 20 21 08    @love   JSR j_primm  ;b'LOVE\n\x00'
$6DF6:                     .BYTE $CC,$CF,$D6,$C5,$8D,$00
$6DFC: A2 01               LDX #$01     ;#principle_love
$6DFE: D0 0E               BNE @init_arena
$6E00: 20 21 08    @courage JSR j_primm  ;b'COURAGE\n\x00'
$6E03:                     .BYTE $C3,$CF,$D5,$D2,$C1,$C7,$C5,$8D
$6E0B:                     .BYTE $00
$6E0C: A2 02               LDX #$02     ;#principle_courage
$6E0E: 86 28       @init_arena STX altar_room_principle
$6E10: A9 00               LDA #$00     ;#-
$6E12: AA                  TAX 
$6E13: 9D 00 AD    -       STA combat_foe_cur_x,X
$6E16: E8                  INX 
$6E17: D0 FA               BNE -
$6E19: A2 0F               LDX #$0F     ;#foes_max
$6E1B: BD 00 AE    -       LDA draw_stack,X
$6E1E: 9D 10 AF            STA dng_trigger_new_tile,X
$6E21: CA                  DEX 
$6E22: 10 F7               BPL -
$6E24: A5 20               LDA dng_direction
$6E26: 49 02               EOR #$02     ;# reverse facing to choose entrance
$6E28: 0A                  ASL 
$6E29: 0A                  ASL 
$6E2A: 0A                  ASL 
$6E2B: 0A                  ASL 
$6E2C: 85 58               STA zp58     ;00 south  10 west  20 north  30 east
$6E2E: A5 1F               LDA party_size
$6E30: 85 54               STA curr_player
$6E32: 20 E2 7D    @next_player JSR get_player_sprite
$6E35: 30 20               BMI @inactive
$6E37: 48                  PHA 
$6E38: 18                  CLC 
$6E39: A5 54               LDA curr_player
$6E3B: 65 58               ADC zp58
$6E3D: A8                  TAY 
$6E3E: 88                  DEY 
$6E3F: 68                  PLA 
$6E40: A6 54               LDX curr_player
$6E42: CA                  DEX 
$6E43: 9D A0 AD            STA combat_player_tile,X
$6E46: B9 40 AE            LDA map_start_foe_x,Y
$6E49: 9D 80 AD            STA combat_player_xpos,X
$6E4C: B9 48 AE            LDA room_start_player_y,Y
$6E4F: 9D 90 AD            STA combat_player_ypos,X
$6E52: 20 C1 7D            JSR is_alive
$6E55: F0 07               BEQ +
$6E57: A6 54       @inactive LDX curr_player
$6E59: A9 00               LDA #$00     ;# dead
$6E5B: 9D 9F AD            STA combat_player_tile-1,X
$6E5E: C6 54       +       DEC curr_player
$6E60: D0 D0               BNE @next_player
$6E62: A2 0F               LDX #$0F     ;#foes_max
$6E64: BD 10 AE    @next_foe LDA room_start_foe_type,X
$6E67: F0 34               BEQ @skip_foe
$6E69: 9D 50 AD            STA combat_foe_tile,X
$6E6C: 9D 60 AD            STA combat_foe_drawn_tile,X
$6E6F: BD 20 AE            LDA room_start_foe_x,X
$6E72: 9D 00 AD            STA combat_foe_cur_x,X
$6E75: BD 30 AE            LDA room_start_foe_y,X
$6E78: 9D 10 AD            STA combat_foe_cur_y,X
$6E7B: BD 50 AD            LDA combat_foe_tile,X
$6E7E: 20 9B 7D            JSR foe_index_from_tile
$6E81: A8                  TAY 
$6E82: B9 F6 7C            LDA foe_power_table,Y ;HP = P/2 | rand(P)
$6E85: 85 58               STA zp58
$6E87: 20 03 7E            JSR rand_modulo
$6E8A: 46 58               LSR zp58
$6E8C: 05 58               ORA zp58
$6E8E: 9D 40 AD            STA combat_foe_hp,X
$6E91: BD 50 AD            LDA combat_foe_tile,X
$6E94: C9 AC               CMP #$AC     ;#tile_mimic
$6E96: D0 05               BNE @skip_foe
$6E98: A9 3C               LDA #$3C     ;#tile_chest
$6E9A: 9D 60 AD            STA combat_foe_drawn_tile,X
$6E9D: CA          @skip_foe DEX 
$6E9E: 10 C4               BPL @next_foe
$6EA0: 4C 91 70            JMP begin_combat

$6EA3: 20 21 08    init_combat JSR j_primm  ;b'\n\n**** COMBAT ****\n\n\x00'
$6EA6:                     .BYTE $8D,$8D,$AA,$AA,$AA,$AA,$A0,$C3
$6EAE:                     .BYTE $CF,$CD,$C2,$C1,$D4,$A0,$AA,$AA
$6EB6:                     .BYTE $AA,$AA,$8D,$8D,$00
$6EBB: A5 40               LDA foe_type_encountered
$6EBD: 85 66               STA foe_type_combat
$6EBF: A2 00               LDX #$00     ;#-
$6EC1: 8A                  TXA 
$6EC2: 9D 00 AD    @clear  STA combat_foe_cur_x,X
$6EC5: CA                  DEX 
$6EC6: D0 FA               BNE @clear
$6EC8: A5 1E               LDA player_transport
$6ECA: C9 14               CMP #$14     ;#tile_ship_last
$6ECC: 90 0A               BCC @ship
$6ECE: A5 48               LDA tile_under_player
$6ED0: C9 14               CMP #$14     ;#tile_ship_last
$6ED2: B0 23               BCS @not_ship
$6ED4: C9 10               CMP #$10     ;#tile_ship_first
$6ED6: 90 1F               BCC @not_ship
$6ED8: A5 40       @ship   LDA foe_type_encountered
$6EDA: C9 80               CMP #$80     ;#tile_pirate
$6EDC: D0 09               BNE @pirate
$6EDE: A9 C8               LDA #$C8     ;#tile_rogue
$6EE0: 85 66               STA foe_type_combat
$6EE2: A9 D4               LDA #$D4     ;#arena_ship_v_ship
$6EE4: 4C 8C 6F            JMP load_arena

$6EE7: A5 43       @pirate LDA pre_combat_tile
$6EE9: C9 03               CMP #$03     ;#tile_water_last
$6EEB: 90 05               BCC +
$6EED: A9 C5               LDA #$C5     ;#arena_ship_s_shore
$6EEF: 4C 8C 6F            JMP load_arena

$6EF2: A9 D0       +       LDA #$D0     ;#arena_ship_at_sea
$6EF4: 4C 8C 6F            JMP load_arena

$6EF7: A5 40       @not_ship LDA foe_type_encountered
$6EF9: C9 80               CMP #$80     ;#tile_pirate
$6EFB: D0 09               BNE @land_arena
$6EFD: A9 C8               LDA #$C8     ;#tile_rogue
$6EFF: 85 66               STA foe_type_combat
$6F01: A9 C9               LDA #$C9     ;#arena_ship_n_shore
$6F03: 4C 8C 6F            JMP load_arena

$6F06: A5 43       @land_arena LDA pre_combat_tile
$6F08: C9 03               CMP #$03     ;#tile_water_last
$6F0A: B0 05               BCS +
$6F0C: A9 CF               LDA #$CF     ;#arena_shore
$6F0E: 4C 8C 6F            JMP load_arena

$6F11: A5 48       +       LDA tile_under_player
$6F13: C9 03               CMP #$03     ;#tile_swamp
$6F15: D0 05               BNE +
$6F17: A9 D3               LDA #$D3     ;#arena_swamp
$6F19: 4C 8C 6F            JMP load_arena

$6F1C: C9 05       +       CMP #$05     ;#tile_brush
$6F1E: D0 05               BNE +
$6F20: A9 C2               LDA #$C2     ;#arena_brush
$6F22: 4C 8C 6F            JMP load_arena

$6F25: C9 06       +       CMP #$06     ;#tile_forest
$6F27: D0 05               BNE +
$6F29: A9 C6               LDA #$C6     ;#arena_forest
$6F2B: 4C 8C 6F            JMP load_arena

$6F2E: C9 07       +       CMP #$07     ;#tile_hills
$6F30: D0 05               BNE +
$6F32: A9 C8               LDA #$C8     ;#arena_mountains
$6F34: 4C 8C 6F            JMP load_arena

$6F37: C9 16       +       CMP #$16     ;#tile_floor_stone
$6F39: D0 05               BNE +
$6F3B: A9 C4               LDA #$C4     ;#arena_floor_stone
$6F3D: 4C 8C 6F            JMP load_arena

$6F40: C9 3E       +       CMP #$3E     ;#tile_floor_brick
$6F42: D0 05               BNE +
$6F44: A9 C3               LDA #$C3     ;#arena_floor_brick
$6F46: 4C 8C 6F            JMP load_arena

$6F49: C9 17       +       CMP #$17     ;#tile_bridge_narrow
$6F4B: F0 0C               BEQ @bridge
$6F4D: C9 19               CMP #$19     ;#tile_bridge_top
$6F4F: F0 08               BEQ @bridge
$6F51: C9 1A               CMP #$1A     ;#tile_bridge_bottom
$6F53: F0 04               BEQ @bridge
$6F55: C9 3F               CMP #$3F     ;#tile_bridge_middle
$6F57: D0 05               BNE @default
$6F59: A9 D2       @bridge LDA #$D2     ;#arena_bridge
$6F5B: 4C 8C 6F            JMP load_arena

$6F5E: A9 C7       @default LDA #$C7     ;#arena_grass
$6F60: 4C 8C 6F            JMP load_arena

$6F63: 8E 8B 6F    file_id_from_arena STX temp_arena_reg
$6F66: A2 15               LDX #$15     ;# table max
$6F68: DD 75 6F    @next   CMP file_arena_table,X
$6F6B: F0 03               BEQ @found
$6F6D: CA                  DEX 
$6F6E: 10 F8               BPL @next
$6F70: 8A          @found  TXA 
$6F71: AE 8B 6F            LDX temp_arena_reg
$6F74: 60                  RTS 

$6F75:             file_arena_table .BYTE $C2,$C6,$C7,$C8,$CF,$D2,$D3,$C3
$6F7D:                     .BYTE $C4,$C1,$C5,$C9,$D0,$D4,$D8,$B0
$6F85:                     .BYTE $B1,$B2,$B3,$B4,$B5,$B6
$6F8B:             temp_arena_reg .BYTE $A7
-                                                                           
$6F8C: 20 63 6F    load_arena JSR file_id_from_arena
$6F8F: 48                  PHA 
$6F90: A9 00               LDA #$00     ;#music_off
$6F92: 20 20 AF            JSR music_ctl
$6F95: 68                  PLA 
$6F96: 18                  CLC 
$6F97: 69 01               ADC #$01     ;# table is 0-based, file ids are 1-based
$6F99: AA                  TAX 
$6F9A: A9 CC               LDA #$CC     ;#char_L
$6F9C: 20 00 A1            JSR j_fileio
$6F9F: A5 1B       initialize_arena LDA game_mode
$6FA1: C9 82               CMP #$82     ;#mode_combat_inn
$6FA3: F0 06               BEQ +
$6FA5: 85 68               STA game_mode_pre_combat
$6FA7: A9 80               LDA #$80     ;#mode_combat_wandering
$6FA9: 85 1B               STA game_mode
$6FAB: A5 68       +       LDA game_mode_pre_combat
$6FAD: C9 02               CMP #$02     ;#mode_towne
$6FAF: D0 1A               BNE set_foe_count
$6FB1: A5 1B               LDA game_mode
$6FB3: C9 82               CMP #$82     ;#mode_combat_inn
$6FB5: F0 14               BEQ set_foe_count
$6FB7: A5 40       @towne_arena LDA foe_type_encountered
$6FB9: C9 50               CMP #$50     ;#tile_guard
$6FBB: F0 05               BEQ @maximize_foes
$6FBD: A9 00               LDA #$00     ;# max index 0 = just one foe
$6FBF: 4C E5 6F            JMP clamp_foe_count

$6FC2: A5 1F       @maximize_foes LDA party_size
$6FC4: 0A                  ASL 
$6FC5: 38                  SEC 
$6FC6: E9 01               SBC #$01     ;# Party * 2 (index 0 through P*2-1)
$6FC8: 4C E5 6F            JMP clamp_foe_count

$6FCB: A5 66       set_foe_count LDA foe_type_combat
$6FCD: 30 07               BMI @lookup_max_foes ;Dead code? Never encounter characters outside a towne.
$6FCF: 20 4E 08            JSR j_rand
$6FD2: 29 07               AND #$07     ;2-8 character foes
$6FD4: D0 0F               BNE clamp_foe_count ;idx 0 overruns table[24], previous foe_count as new max (BUG?)
$6FD6: 20 9B 7D    @lookup_max_foes JSR foe_index_from_tile
$6FD9: AA                  TAX 
$6FDA: BD 4E 7D            LDA foe_max_count,X
$6FDD: 20 03 7E            JSR rand_modulo
$6FE0: 18                  CLC 
$6FE1: 7D 4E 7D            ADC foe_max_count,X
$6FE4: 4A                  LSR 
$6FE5: 85 6A       clamp_foe_count STA zp6A     ;$zp_cur_foe_index
$6FE7: 8D 72 7D            STA foe_count
$6FEA: 4A                  LSR          ;Must be less than 2x party size
$6FEB: C5 1F               CMP party_size
$6FED: 90 09               BCC @choose_foe_slot
$6FEF: A5 1F               LDA party_size
$6FF1: 0A                  ASL 
$6FF2: 20 03 7E            JSR rand_modulo
$6FF5: 4C E5 6F            JMP clamp_foe_count

$6FF8: 20 4E 08    @choose_foe_slot JSR j_rand
$6FFB: 29 0F               AND #$0F     ;#foes_max
$6FFD: AA                  TAX 
$6FFE: BD 00 AD            LDA combat_foe_cur_x,X
$7001: D0 F5               BNE @choose_foe_slot
$7003: BD 40 AE            LDA map_start_foe_x,X
$7006: 9D 00 AD            STA combat_foe_cur_x,X
$7009: BD 50 AE            LDA map_start_foe_y,X
$700C: 9D 10 AD            STA combat_foe_cur_y,X
$700F: A5 66               LDA foe_type_combat
$7011: 10 30               BPL @commit_foe
$7013: A5 6A               LDA zp6A     ;$zp_cur_foe_index
$7015: F0 0B               BEQ @no_companion
$7017: 20 4E 08            JSR j_rand
$701A: 29 1F               AND #$1F     ;1/32 chance
$701C: F0 15               BEQ @companion_double
$701E: 29 07               AND #$07     ;3/32 chance
$7020: F0 05               BEQ @companion
$7022: A5 66       @no_companion LDA foe_type_combat
$7024: 4C 43 70            JMP @commit_foe

$7027: A5 66       @companion LDA foe_type_combat
$7029: 20 9B 7D            JSR foe_index_from_tile
$702C: A8                  TAY 
$702D: B9 2A 7D            LDA foe_companion_table,Y
$7030: 4C 43 70            JMP @commit_foe

$7033: A5 66       @companion_double LDA foe_type_combat
$7035: 20 9B 7D            JSR foe_index_from_tile
$7038: A8                  TAY 
$7039: B9 2A 7D            LDA foe_companion_table,Y
$703C: 20 9B 7D            JSR foe_index_from_tile
$703F: A8                  TAY 
$7040: B9 2A 7D            LDA foe_companion_table,Y
$7043: 9D 50 AD    @commit_foe STA combat_foe_tile,X
$7046: 9D 60 AD            STA combat_foe_drawn_tile,X
$7049: 20 9B 7D            JSR foe_index_from_tile
$704C: A8                  TAY 
$704D: B9 F6 7C            LDA foe_power_table,Y ;HP = P/2 | rand(P)
$7050: 85 58               STA zp58
$7052: 20 03 7E            JSR rand_modulo
$7055: 46 58               LSR zp58
$7057: 05 58               ORA zp58
$7059: 9D 40 AD            STA combat_foe_hp,X
$705C: C6 6A               DEC zp6A     ;$zp_cur_foe_index
$705E: 10 98               BPL @choose_foe_slot
-                                                                           
$7060: A5 1B       @place_players LDA game_mode
$7062: C9 82               CMP #$82     ;#mode_combat_inn
$7064: F0 04               BEQ @next_player
$7066: A5 1F               LDA party_size
$7068: 85 54               STA curr_player
$706A: 20 E2 7D    @next_player JSR get_player_sprite
$706D: 30 17               BMI @remove_player
$706F: A6 54               LDX curr_player
$7071: CA                  DEX 
$7072: 9D A0 AD            STA combat_player_tile,X
$7075: BD 60 AE            LDA map_start_player_x,X
$7078: 9D 80 AD            STA combat_player_xpos,X
$707B: BD 68 AE            LDA map_start_player_y,X
$707E: 9D 90 AD            STA combat_player_ypos,X
$7081: 20 C1 7D            JSR is_alive
$7084: F0 07               BEQ +
$7086: A6 54       @remove_player LDX curr_player
$7088: A9 00               LDA #$00     ;#-
$708A: 9D 9F AD            STA combat_player_tile-1,X ;BUG? arrives here either before or after DEX
$708D: C6 54       +       DEC curr_player
$708F: D0 D9               BNE @next_player
$7091: A9 02       begin_combat LDA #$02     ;#music_combat
$7093: 20 20 AF            JSR music_ctl
$7096: 20 12 A1            JSR j_clearkbd
$7099: A9 00               LDA #$00     ;#-
$709B: 85 38               STA key_buf_len
$709D: A9 01       start_players_turn LDA #$01     ;#-
$709F: 85 54               STA curr_player
$70A1: 85 45               STA curr_player_turn
$70A3: 20 C1 7D    combat_take_turn JSR is_alive
$70A6: F0 0F               BEQ @check_fled_or_slept
$70A8: A6 54               LDX curr_player
$70AA: BD 9F AD            LDA combat_player_tile-1,X
$70AD: F0 05               BEQ @end_turn
$70AF: A9 00               LDA #$00     ;#-
$70B1: 9D 9F AD            STA combat_player_tile-1,X
$70B4: 4C 4E 71    @end_turn JMP combat_end_turn

$70B7: A6 54       @check_fled_or_slept LDX curr_player
$70B9: BD 9F AD            LDA combat_player_tile-1,X
$70BC: F0 F6               BEQ @end_turn
$70BE: C9 38               CMP #$38     ;#tile_human_prone
$70C0: F0 F2               BEQ @end_turn
$70C2: 20 4B 08            JSR j_update_view
$70C5: 20 EF 83            JSR invert_player_name
$70C8: 20 F7 85            JSR print_newline
$70CB: 20 30 08            JSR j_printname
$70CE: 20 21 08            JSR j_primm  ;b'\nW:\x00'
$70D1:                     .BYTE $8D,$D7,$BA,$00
$70D5: 20 2D 08            JSR j_get_stats_ptr
$70D8: A0 1E               LDY #$1E     ;#player_weapon
$70DA: B1 7E               LDA (ptr1),Y
$70DC: 8D 74 7C            STA current_weapon
$70DF: 18                  CLC 
$70E0: 69 25               ADC #$25     ;#string_weapon_first
$70E2: 20 7E 08            JSR j_printstring
$70E5: 20 21 08            JSR j_primm  ;b'\n>\x00'
$70E8:                     .BYTE $8D,$1E,$00
$70EB: 20 00 08            JSR j_waitkey
$70EE: D0 03               BNE +
$70F0: 4C 06 41            JMP done_pass

$70F3: C9 A0       +       CMP #$A0     ;#char_space
$70F5: D0 03               BNE +
$70F7: 4C 06 41            JMP done_pass

$70FA: C9 C0       +       CMP #$C0     ;#char_at_sign
$70FC: D0 03               BNE +
$70FE: 4C CE 77            JMP combat_move_up

$7101: C9 AF       +       CMP #$AF     ;#char_slash
$7103: D0 03               BNE +
$7105: 4C E9 77            JMP combat_move_down

$7108: C9 BA       +       CMP #$BA     ;#char_colon
$710A: D0 03               BNE +
$710C: 4C 1E 78            JMP combat_move_left

$710F: C9 BB       +       CMP #$BB     ;#char_semicolon
$7111: D0 03               BNE +
$7113: 4C 04 78            JMP combat_move_right

$7116: C9 C1       +       CMP #$C1     ;#char_alpha_first
$7118: 90 16               BCC @invalid_key
$711A: C9 DB               CMP #$DB     ;#char_alpha_last
$711C: B0 12               BCS @invalid_key
$711E: 38                  SEC 
$711F: E9 C1               SBC #$C1     ;#char_alpha_first
$7121: 0A                  ASL 
$7122: A8                  TAY 
$7123: B9 9A 77            LDA combat_cmd_table,Y
$7126: 85 7E               STA ptr1
$7128: B9 9B 77            LDA combat_cmd_table + 1,Y
$712B: 85 7F               STA ptr1 + 1
$712D: 6C 7E 00            JMP (ptr1)

$7130: 4C 12 41    @invalid_key JMP done_what

$7133: A5 45       combat_cmd_done LDA curr_player_turn
$7135: 85 54               STA curr_player
$7137: 20 EF 83            JSR invert_player_name
$713A: 20 B0 62            JSR tile_effect
$713D: 20 45 08            JSR j_update_status
$7140: A5 46               LDA magic_aura
$7142: C9 D1               CMP #$D1     ;#aura_quickness
$7144: D0 08               BNE combat_end_turn
$7146: 20 4E 08            JSR j_rand
$7149: 30 03               BMI combat_end_turn
$714B: 4C A3 70            JMP combat_take_turn ;1/2 chance

$714E: 20 2D 08    combat_end_turn JSR j_get_stats_ptr
$7151: A0 12               LDY #$12     ;#player_status
$7153: B1 7E               LDA (ptr1),Y
$7155: C9 D3               CMP #$D3     ;#status_Sleep
$7157: D0 13               BNE @end_wake_up
$7159: 20 4E 08            JSR j_rand
$715C: 29 07               AND #$07     ;1/8 chance
$715E: D0 0C               BNE @end_wake_up
$7160: A9 C7               LDA #$C7     ;#status_Good
$7162: 91 7E               STA (ptr1),Y
$7164: 20 E2 7D            JSR get_player_sprite
$7167: A6 54               LDX curr_player
$7169: 9D 9F AD            STA combat_player_tile-1,X
$716C: 20 14 75    @end_wake_up JSR check_scene_over
$716F: E6 54               INC curr_player
$7171: E6 45               INC curr_player_turn
$7173: A5 54               LDA curr_player
$7175: C5 1F               CMP party_size
$7177: 90 05               BCC @next_turn
$7179: F0 03               BEQ @next_turn
$717B: 4C 81 71            JMP @players_done

$717E: 4C A3 70    @next_turn JMP combat_take_turn

$7181: A9 00       @players_done LDA #$00     ;#-
$7183: 85 45               STA curr_player_turn
$7185: 20 4B 08            JSR j_update_view
$7188: A9 0F               LDA #$0F     ;#foes_max
$718A: 85 6A               STA zp6A     ;$zp_cur_foe_index
$718C: A6 6A       foe_take_turn LDX zp6A     ;$zp_cur_foe_index
$718E: BD 50 AD            LDA combat_foe_tile,X
$7191: D0 03               BNE +
$7193: 4C 22 74            JMP next_foe

$7196: BD 70 AD    +       LDA combat_foe_slept,X
$7199: F0 0F               BEQ @check_zorn
$719B: 20 4E 08            JSR j_rand
$719E: 29 07               AND #$07     ;1/8 chance
$71A0: F0 03               BEQ @wake_up
$71A2: 4C C4 73            JMP check_tile_effect

$71A5: A9 00       @wake_up LDA #$00     ;#-
$71A7: 9D 70 AD            STA combat_foe_slept,X
$71AA: BD 50 AD    @check_zorn LDA combat_foe_tile,X
$71AD: C9 EC               CMP #$EC     ;#tile_zorn
$71AF: D0 0B               BNE @check_wisp
$71B1: A9 CE               LDA #$CE     ;#aura_negate
$71B3: 85 46               STA magic_aura
$71B5: A9 02               LDA #$02     ;#-
$71B7: 85 47               STA aura_duration
$71B9: 4C EC 71            JMP calc_nearest_player

$71BC: C9 DC       @check_wisp CMP #$DC     ;#tile_wisp
$71BE: D0 2C               BNE calc_nearest_player
$71C0: 20 4E 08            JSR j_rand
$71C3: 29 07               AND #$07     ;#chance_8
$71C5: D0 25               BNE calc_nearest_player
$71C7: A9 0B       @wisp_teleport LDA #$0B     ;#xy_last_screen
$71C9: 20 03 7E            JSR rand_modulo
$71CC: 85 16               STA dest_x
$71CE: A9 0B               LDA #$0B     ;#xy_last_screen
$71D0: 20 03 7E            JSR rand_modulo
$71D3: 85 17               STA dest_y
$71D5: 20 8D 08            JSR j_gettile_tempmap
$71D8: 20 EA 7E            JSR legal_move_combat
$71DB: 30 EA               BMI @wisp_teleport
$71DD: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$71DF: A5 16               LDA dest_x
$71E1: 9D 00 AD            STA combat_foe_cur_x,X
$71E4: A5 17               LDA dest_y
$71E6: 9D 10 AD            STA combat_foe_cur_y,X
$71E9: 4C C4 73            JMP check_tile_effect

$71EC: BD 00 AD    calc_nearest_player LDA combat_foe_cur_x,X
$71EF: 85 7A               STA temp_x
$71F1: BD 10 AD            LDA combat_foe_cur_y,X
$71F4: 85 7B               STA temp_y
$71F6: A5 1F               LDA party_size
$71F8: 85 54               STA curr_player
$71FA: A9 FF               LDA #$FF
$71FC: 85 5B               STA zp5B     ;$zp_nearest_dist
$71FE: A9 00               LDA #$00     ;#-
$7200: 85 55               STA target_player
$7202: 20 C1 7D    @next   JSR is_alive
$7205: D0 29               BNE @skip
$7207: A6 54               LDX curr_player
$7209: CA                  DEX 
$720A: BD A0 AD            LDA combat_player_tile,X
$720D: F0 21               BEQ @skip
$720F: 38                  SEC 
$7210: BD 80 AD            LDA combat_player_xpos,X
$7213: E5 7A               SBC temp_x
$7215: 20 76 82            JSR math_abs
$7218: 85 5A               STA zp5A     ;$zp_dist
$721A: 38                  SEC 
$721B: BD 90 AD            LDA combat_player_ypos,X
$721E: E5 7B               SBC temp_y
$7220: 20 76 82            JSR math_abs
$7223: 18                  CLC 
$7224: 65 5A               ADC zp5A     ;$zp_dist
$7226: C5 5B               CMP zp5B     ;$zp_nearest_dist
$7228: B0 06               BCS @skip
$722A: 85 5B               STA zp5B     ;$zp_nearest_dist
$722C: A5 54               LDA curr_player
$722E: 85 55               STA target_player
$7230: C6 54       @skip   DEC curr_player
$7232: D0 CE               BNE @next
$7234: A5 55               LDA target_player
$7236: D0 03               BNE calc_direction
$7238: 4C C4 73            JMP check_tile_effect

$723B: 85 54       calc_direction STA curr_player
$723D: AA                  TAX 
$723E: CA                  DEX 
$723F: 38                  SEC 
$7240: BD 80 AD            LDA combat_player_xpos,X
$7243: E5 7A               SBC temp_x
$7245: 20 6A 82            JSR math_sign
$7248: 85 78               STA delta_x
$724A: 38                  SEC 
$724B: BD 90 AD            LDA combat_player_ypos,X
$724E: E5 7B               SBC temp_y
$7250: 20 6A 82            JSR math_sign
$7253: 85 79               STA delta_y
$7255: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7257: BD 50 AD            LDA combat_foe_tile,X
$725A: C9 AC               CMP #$AC     ;#tile_mimic
$725C: D0 10               BNE calc_attack_type
$725E: A9 3C               LDA #$3C     ;#tile_chest
$7260: 9D 60 AD            STA combat_foe_drawn_tile,X
$7263: A5 5B               LDA zp5B     ;$zp_nearest_dist
$7265: C9 05               CMP #$05     ;#-
$7267: B0 27               BCS no_range_attack
$7269: A9 AC               LDA #$AC     ;#tile_mimic
$726B: 9D 60 AD            STA combat_foe_drawn_tile,X
$726E: 20 4E 08    calc_attack_type JSR j_rand
$7271: 29 03               AND #$03     ;#chance_4
$7273: D0 1B               BNE no_range_attack
$7275: BD 50 AD            LDA combat_foe_tile,X
$7278: 20 36 80            JSR get_rangeattack_type
$727B: F0 13               BEQ no_range_attack
$727D: C9 4E               CMP #$4E     ;#tile_attack_blue
$727F: D0 06               BNE @attack_allowed
$7281: A4 46               LDY magic_aura
$7283: C0 CE               CPY #$CE     ;#aura_negate
$7285: F0 09               BEQ no_range_attack
$7287: 20 B1 80    @attack_allowed JSR do_foe_range_attack
$728A: 20 4B 08            JSR j_update_view
$728D: 4C C4 73            JMP check_tile_effect

$7290: 20 4E 08    no_range_attack JSR j_rand
$7293: 29 03               AND #$03     ;#chance_4
$7295: D0 50               BNE @check_flee
$7297: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7299: BD 50 AD            LDA combat_foe_tile,X
$729C: C9 FC               CMP #$FC     ;#tile_balron
$729E: F0 04               BEQ @cast_sleep
$72A0: C9 B0               CMP #$B0     ;#tile_reaper
$72A2: D0 43               BNE @check_flee
$72A4: A5 46       @cast_sleep LDA magic_aura
$72A6: C9 CE               CMP #$CE     ;#aura_negate
$72A8: F0 3D               BEQ @check_flee
$72AA: 20 4B 08            JSR j_update_view
$72AD: 20 78 08            JSR j_invertview
$72B0: A2 80               LDX #$80     ;#-
$72B2: A9 09               LDA #$09     ;#sound_spell_effect
$72B4: 20 54 08            JSR j_playsfx
$72B7: 20 78 08            JSR j_invertview
$72BA: A9 08               LDA #$08     ;#player_last
$72BC: 85 54               STA curr_player
$72BE: A6 54       @next   LDX curr_player
$72C0: BD 9F AD            LDA combat_player_tile-1,X
$72C3: F0 1B               BEQ @skip
$72C5: 20 2D 08            JSR j_get_stats_ptr
$72C8: A0 12               LDY #$12     ;#player_status
$72CA: B1 7E               LDA (ptr1),Y
$72CC: C9 C7               CMP #$C7     ;#status_Good
$72CE: D0 10               BNE @skip
$72D0: 20 4E 08            JSR j_rand
$72D3: 30 0B               BMI @skip
$72D5: A9 D3               LDA #$D3     ;#status_Sleep
$72D7: 91 7E               STA (ptr1),Y
$72D9: A9 38               LDA #$38     ;#tile_human_prone
$72DB: A6 54               LDX curr_player
$72DD: 9D 9F AD            STA combat_player_tile-1,X
$72E0: C6 54       @skip   DEC curr_player
$72E2: D0 DA               BNE @next
$72E4: 4C C4 73            JMP check_tile_effect

$72E7: A6 6A       @check_flee LDX zp6A     ;$zp_cur_foe_index
$72E9: BD 40 AD            LDA combat_foe_hp,X
$72EC: C9 18               CMP #$18     ;#hp_fleeing + 1
$72EE: B0 11               BCS @check_is_adjacent
$72F0: A5 78               LDA delta_x
$72F2: 20 81 82            JSR math_negate
$72F5: 85 78               STA delta_x
$72F7: A5 79               LDA delta_y
$72F9: 20 81 82            JSR math_negate
$72FC: 85 79               STA delta_y
$72FE: 4C 20 73            JMP @try_foe_move

$7301: A5 5B       @check_is_adjacent LDA zp5B     ;$zp_nearest_dist
$7303: C9 02               CMP #$02     ;#-
$7305: B0 19               BCS @try_foe_move
$7307: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7309: BD 50 AD            LDA combat_foe_tile,X
$730C: C9 A8               CMP #$A8     ;#tile_gremlin
$730E: D0 06               BNE @check_rogue
$7310: 20 CF 74            JSR steal_food
$7313: 4C 1D 73            JMP +

$7316: C9 C8       @check_rogue CMP #$C8     ;#tile_rogue
$7318: D0 03               BNE +
$731A: 20 DD 74            JSR try_steal_gold
$731D: 4C FD 76    +       JMP do_foe_melee_attack

$7320: A6 6A       @try_foe_move LDX zp6A     ;$zp_cur_foe_index
$7322: BD 50 AD            LDA combat_foe_tile,X
$7325: C9 AC               CMP #$AC     ;#tile_mimic
$7327: D0 03               BNE +
$7329: 4C C4 73            JMP check_tile_effect

$732C: C9 B0       +       CMP #$B0     ;#tile_reaper
$732E: D0 03               BNE +
$7330: 4C C4 73            JMP check_tile_effect

$7333: A9 02       +       LDA #$02     ;#-
$7335: 85 70               STA zp70     ;$zp_attempts
$7337: 20 4E 08    @x_or_y JSR j_rand
$733A: 30 18               BMI @try_y
$733C: A5 78               LDA delta_x
$733E: F0 14               BEQ @try_y
$7340: 18                  CLC 
$7341: 65 7A               ADC temp_x
$7343: 85 16               STA dest_x
$7345: A5 7B               LDA temp_y
$7347: 85 17               STA dest_y
$7349: 20 6C 74            JSR do_jinx
$734C: 20 8A 08            JSR j_gettile_currmap
$734F: 20 EA 7E            JSR legal_move_combat
$7352: F0 4D               BEQ do_foe_move
$7354: A5 79       @try_y  LDA delta_y
$7356: F0 14               BEQ @try_x
$7358: 18                  CLC 
$7359: 65 7B               ADC temp_y
$735B: 85 17               STA dest_y
$735D: A5 7A               LDA temp_x
$735F: 85 16               STA dest_x
$7361: 20 6C 74            JSR do_jinx
$7364: 20 8A 08            JSR j_gettile_currmap
$7367: 20 EA 7E            JSR legal_move_combat
$736A: F0 35               BEQ do_foe_move
$736C: A5 78       @try_x  LDA delta_x
$736E: F0 14               BEQ @try_random
$7370: 18                  CLC 
$7371: 65 7A               ADC temp_x
$7373: 85 16               STA dest_x
$7375: A5 7B               LDA temp_y
$7377: 85 17               STA dest_y
$7379: 20 6C 74            JSR do_jinx
$737C: 20 8A 08            JSR j_gettile_currmap
$737F: 20 EA 7E            JSR legal_move_combat
$7382: F0 1D               BEQ do_foe_move
$7384: 20 4E 08    @try_random JSR j_rand
$7387: 20 6A 82            JSR math_sign
$738A: 85 78               STA delta_x
$738C: 20 4E 08            JSR j_rand
$738F: 20 6A 82            JSR math_sign
$7392: 85 79               STA delta_y
$7394: C6 70               DEC zp70     ;$zp_attempts
$7396: D0 9F               BNE @x_or_y
$7398: A5 5B               LDA zp5B     ;$zp_nearest_dist
$739A: C9 02               CMP #$02     ;#-
$739C: B0 26               BCS check_tile_effect
$739E: 4C FD 76            JMP do_foe_melee_attack

$73A1: A6 6A       do_foe_move LDX zp6A     ;$zp_cur_foe_index
$73A3: BD 00 AD            LDA combat_foe_cur_x,X
$73A6: 9D 20 AD            STA combat_foe_prev_x,X
$73A9: BD 10 AD            LDA combat_foe_cur_y,X
$73AC: 9D 30 AD            STA combat_foe_prev_y,X
$73AF: A5 16               LDA dest_x
$73B1: C9 0B               CMP #$0B     ;#xy_last_screen
$73B3: B0 77               BCS fleeing
$73B5: 9D 00 AD            STA combat_foe_cur_x,X
$73B8: A5 17               LDA dest_y
$73BA: C9 0B               CMP #$0B     ;#xy_last_screen
$73BC: B0 6E               BCS fleeing
$73BE: 9D 10 AD            STA combat_foe_cur_y,X
$73C1: 20 57 08            JSR j_update_view_combat
$73C4: A9 00       check_tile_effect LDA #$00     ;#-
$73C6: 85 54               STA curr_player
$73C8: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$73CA: BD 00 AD            LDA combat_foe_cur_x,X
$73CD: 85 16               STA dest_x
$73CF: BD 10 AD            LDA combat_foe_cur_y,X
$73D2: 85 17               STA dest_y
$73D4: 20 8D 08            JSR j_gettile_tempmap
$73D7: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$73D9: C9 44               CMP #$44     ;#tile_field_poison
$73DB: F0 36               BEQ @effect_poison
$73DD: C9 46               CMP #$46     ;#tile_field_fire
$73DF: F0 27               BEQ @effect_fire
$73E1: C9 47               CMP #$47     ;#tile_field_sleep
$73E3: F0 06               BEQ @effect_sleep
$73E5: C9 4C               CMP #$4C     ;#tile_lava
$73E7: F0 1F               BEQ @effect_fire
$73E9: D0 37               BNE next_foe
$73EB: BD 50 AD    @effect_sleep LDA combat_foe_tile,X
$73EE: 20 CD 4E            JSR is_undead
$73F1: F0 2F               BEQ next_foe
$73F3: 20 4E 08            JSR j_rand
$73F6: DD 40 AD            CMP combat_foe_hp,X
$73F9: 90 27               BCC next_foe
$73FB: A9 01               LDA #$01     ;#-
$73FD: 9D 70 AD            STA combat_foe_slept,X
$7400: A9 06               LDA #$06     ;#sound_damage
$7402: 20 54 08            JSR j_playsfx
$7405: 4C 22 74            JMP next_foe

$7408: BD 50 AD    @effect_fire LDA combat_foe_tile,X
$740B: C9 E8               CMP #$E8     ;#tile_lava_lizard
$740D: F0 13               BEQ next_foe
$740F: C9 F0               CMP #$F0     ;#tile_daemon
$7411: B0 0F               BCS next_foe
$7413: 20 4E 08    @effect_poison JSR j_rand
$7416: 29 7F               AND #$7F     ;# 0..127
$7418: 85 5C               STA damage
$741A: A9 06               LDA #$06     ;#sound_damage
$741C: 20 54 08            JSR j_playsfx
$741F: 20 09 7B            JSR inflict_damage
$7422: C6 6A       next_foe DEC zp6A     ;$zp_cur_foe_index
$7424: 30 03               BMI +
$7426: 4C 8C 71            JMP foe_take_turn

$7429: 4C B2 74    +       JMP end_foes_turn

$742C: 20 F7 85    fleeing JSR print_newline
$742F: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7431: BD 50 AD            LDA combat_foe_tile,X
$7434: 20 5C 83            JSR print_target_name
$7437: 20 21 08            JSR j_primm  ;b'FLEES!\n\x00'
$743A:                     .BYTE $C6,$CC,$C5,$C5,$D3,$A1,$8D,$00
$7442: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7444: BD 50 AD            LDA combat_foe_tile,X
$7447: 20 CD 86            JSR is_evil
$744A: 30 0E               BMI @fled
$744C: A0 01               LDY #$01     ;#virtue_compassion
$744E: A9 01               LDA #$01     ;#-
$7450: 20 5E 84            JSR inc_virtue
$7453: A0 03               LDY #$03     ;#virtue_justice
$7455: A9 01               LDA #$01     ;#-
$7457: 20 5E 84            JSR inc_virtue
$745A: A9 00       @fled   LDA #$00     ;#-
$745C: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$745E: 9D 50 AD            STA combat_foe_tile,X
$7461: 9D 40 AD            STA combat_foe_hp,X
$7464: A9 08               LDA #$08     ;#sound_alert
$7466: 20 54 08            JSR j_playsfx
$7469: 4C C4 73            JMP check_tile_effect

$746C: A5 46       do_jinx LDA magic_aura
$746E: C9 CA               CMP #$CA     ;#aura_jinx
$7470: F0 01               BEQ +
$7472: 60                  RTS 

$7473: A5 6A       +       LDA zp6A     ;$zp_cur_foe_index
$7475: 48                  PHA 
$7476: 20 02 82            JSR check_hit_foe
$7479: 30 33               BMI @miss
$747B: A9 4F               LDA #$4F     ;#tile_attack_red
$747D: 8D FD AD            STA attack_sprite
$7480: A5 16               LDA dest_x
$7482: 8D FE AD            STA target_x
$7485: A5 17               LDA dest_y
$7487: 8D FF AD            STA target_y
$748A: 20 57 08            JSR j_update_view_combat
$748D: A9 06               LDA #$06     ;#sound_damage
$748F: 20 54 08            JSR j_playsfx
$7492: A9 00               LDA #$00     ;#-
$7494: 8D FD AD            STA attack_sprite
$7497: 85 54               STA curr_player
$7499: 20 4E 08            JSR j_rand
$749C: 29 3F               AND #$3F     ;#-
$749E: 85 5C               STA damage
$74A0: 20 09 7B            JSR inflict_damage
$74A3: 20 57 08            JSR j_update_view_combat
$74A6: 68                  PLA 
$74A7: 85 6A               STA zp6A     ;$zp_cur_foe_index
$74A9: 68                  PLA 
$74AA: 68                  PLA 
$74AB: 4C C4 73            JMP check_tile_effect

$74AE: 68          @miss   PLA 
$74AF: 85 6A               STA zp6A     ;$zp_cur_foe_index
$74B1: 60                  RTS 

$74B2: 20 4D 64    end_foes_turn JSR recover_mp
$74B5: 20 57 08            JSR j_update_view_combat
$74B8: E6 69               INC turn_counter
$74BA: 20 14 75            JSR check_scene_over
$74BD: A5 47               LDA aura_duration
$74BF: F0 08               BEQ +
$74C1: C6 47               DEC aura_duration
$74C3: D0 04               BNE +
$74C5: A9 25               LDA #$25     ;#aura_none
$74C7: 85 46               STA magic_aura
$74C9: 20 45 08    +       JSR j_update_status
$74CC: 4C 9D 70            JMP start_players_turn

$74CF: A9 25       steal_food LDA #$25     ;#-
$74D1: 20 00 65            JSR eat_food
$74D4: 20 45 08            JSR j_update_status
$74D7: A9 08               LDA #$08     ;#sound_alert
$74D9: 20 54 08            JSR j_playsfx
$74DC: 60                  RTS 

$74DD: 20 4E 08    try_steal_gold JSR j_rand
$74E0: 29 03               AND #$03     ;#chance_4
$74E2: D0 2F               BNE @done
$74E4: 20 4E 08            JSR j_rand
$74E7: 29 3F               AND #$3F     ;#-
$74E9: 20 1A 84            JSR encode_bcd_value
$74EC: 85 58               STA zp58
$74EE: F8                  SED 
$74EF: 38                  SEC 
$74F0: AD 14 AB            LDA gold_lo
$74F3: E5 58               SBC zp58
$74F5: 8D 14 AB            STA gold_lo
$74F8: AD 13 AB            LDA gold_hi
$74FB: E9 00               SBC #$00     ;#-
$74FD: 8D 13 AB            STA gold_hi
$7500: B0 08               BCS +
$7502: A9 00               LDA #$00     ;#-
$7504: 8D 14 AB            STA gold_lo
$7507: 8D 13 AB            STA gold_hi
$750A: D8          +       CLD 
$750B: A9 08               LDA #$08     ;#sound_alert
$750D: 20 54 08            JSR j_playsfx
$7510: 20 45 08            JSR j_update_status
$7513: 60          @done   RTS 

$7514: A5 1B       check_scene_over LDA game_mode
$7516: C9 81               CMP #$81     ;#mode_combat_dng_room
$7518: F0 0F               BEQ check_players_gone
$751A: A2 0F               LDX #$0F     ;#foes_max
$751C: BD 50 AD    -       LDA combat_foe_tile,X
$751F: D0 08               BNE check_players_gone
$7521: CA                  DEX 
$7522: 10 F8               BPL -
$7524: 68                  PLA 
$7525: 68                  PLA 
$7526: 4C FF 75            JMP foes_vanquished

$7529: A2 07       check_players_gone LDX #$07     ;#player_max
$752B: BD A0 AD    -       LDA combat_player_tile,X
$752E: D0 08               BNE @still_here
$7530: CA                  DEX 
$7531: 10 F8               BPL -
$7533: 68                  PLA 
$7534: 68                  PLA 
$7535: 4C 39 75            JMP player_flee

$7538: 60          @still_here RTS 

$7539: A5 1B       player_flee LDA game_mode
$753B: C9 81               CMP #$81     ;#mode_combat_dng_room
$753D: F0 37               BEQ combat_exit_room
$753F: A5 40       combat_players_fled LDA foe_type_encountered
$7541: 20 CD 86            JSR is_evil
$7544: 10 1F               BPL @not_evil
$7546: 20 21 08            JSR j_primm  ;battle is lost
$7549:                     .BYTE $8D,$C2,$C1,$D4,$D4,$CC,$C5,$A0
$7551:                     .BYTE $C9,$D3,$A0,$CC,$CF,$D3,$D4,$A1
$7559:                     .BYTE $8D,$00
$755B: A0 02               LDY #$02     ;#virtue_valor
$755D: A9 02               LDA #$02     ;#-
$755F: 20 72 84            JSR dec_virtue
$7562: 4C D6 76            JMP combat_over

$7565: A0 01       @not_evil LDY #$01     ;#virtue_compassion
$7567: A9 02               LDA #$02     ;#-
$7569: 20 5E 84            JSR inc_virtue
$756C: A0 03               LDY #$03     ;#virtue_justice
$756E: A9 02               LDA #$02     ;#-
$7570: 20 5E 84            JSR inc_virtue
$7573: 4C D6 76            JMP combat_over

$7576: 20 21 08    combat_exit_room JSR j_primm  ;b'\nLEAVE ROOM!\n\x00'
$7579:                     .BYTE $8D,$CC,$C5,$C1,$D6,$C5,$A0,$D2
$7581:                     .BYTE $CF,$CF,$CD,$A1,$8D,$00
$7587: AD 82 79            LDA flee_x
$758A: F0 0C               BEQ @north
$758C: 10 05               BPL @east
$758E: A9 03       @west   LDA #$03     ;#dng_dir_west
$7590: 4C A4 75            JMP do_exit_room

$7593: A9 01       @east   LDA #$01     ;#dng_dir_east
$7595: 4C A4 75            JMP do_exit_room

$7598: AD 83 79    @north  LDA flee_y
$759B: 10 05               BPL @south
$759D: A9 00               LDA #$00     ;#dng_dir_north
$759F: 4C A4 75            JMP do_exit_room

$75A2: A9 02       @south  LDA #$02     ;#dng_dir_south
$75A4: 85 20       do_exit_room STA dng_direction
$75A6: A5 68               LDA game_mode_pre_combat
$75A8: 85 1B               STA game_mode
$75AA: A5 28               LDA altar_room_principle ;T,L,C == 0,1,2
$75AC: 30 33               BMI @dungeon
$75AE: 0A                  ASL 
$75AF: 0A                  ASL 
$75B0: 18                  CLC 
$75B1: 65 20               ADC dng_direction
$75B3: A8                  TAY 
$75B4: B9 F3 75            LDA altar_room_exits,Y
$75B7: 85 1A               STA current_location
$75B9: A8                  TAY 
$75BA: 88                  DEY 
$75BB: B9 9A 51            LDA location_map_x,Y
$75BE: 85 18               STA britannia_x
$75C0: B9 BA 51            LDA location_map_y,Y
$75C3: 85 19               STA britannia_y
$75C5: A9 00               LDA #$00     ;#music_off
$75C7: 20 20 AF            JSR music_ctl
$75CA: 20 AD 50            JSR load_map_dungeon
$75CD: 20 21 08            JSR j_primm  ;b'INTO DUNGEON\n\x00'
$75D0:                     .BYTE $C9,$CE,$D4,$CF,$A0,$C4,$D5,$CE
$75D8:                     .BYTE $C7,$C5,$CF,$CE,$8D,$00
$75DE: 20 DA 51            JSR print_location_name
$75E1: 20 F7 85    @dungeon JSR print_newline
$75E4: A9 01               LDA #$01     ;#music_explore
$75E6: 20 20 AF            JSR music_ctl
$75E9: A5 20               LDA dng_direction
$75EB: AA                  TAX 
$75EC: A9 00               LDA #$00     ;#-
$75EE: 85 38               STA key_buf_len
$75F0: 4C 05 43            JMP dng_move

$75F3:             altar_room_exits .BYTE $11    ;North of Truth   is Deceit
$75F4:                     .BYTE $16    ;East  of Truth   is Shame
$75F5:                     .BYTE $17    ;South of Truth   is Hythloth
$75F6:                     .BYTE $14    ;West  of Truth   is Wrong
$75F7:                     .BYTE $12    ;North of Love    is Despise
$75F8:                     .BYTE $14    ;East  of Love    is Wrong
$75F9:                     .BYTE $17    ;South of Love    is Hythloth
$75FA:                     .BYTE $15    ;West  of Love    is Covetous
$75FB:                     .BYTE $13    ;North of Courage is Destard
$75FC:                     .BYTE $15    ;East  of Courage is Covetous
$75FD:                     .BYTE $17    ;South of Courage is Hythloth
$75FE:                     .BYTE $16    ;West  of Courage is Shame
-                                                                           
$75FF: 20 21 08    foes_vanquished JSR j_primm  ;b'\nVICTORY!\n\x00'
$7602:                     .BYTE $8D,$D6,$C9,$C3,$D4,$CF,$D2,$D9
$760A:                     .BYTE $A1,$8D,$00
$760D: A5 40               LDA foe_type_encountered
$760F: 20 CD 86            JSR is_evil
$7612: 10 0A               BPL +
$7614: A0 02               LDY #$02     ;#virtue_valor
$7616: 20 4E 08            JSR j_rand
$7619: 29 01               AND #$01     ;0-1
$761B: 20 5E 84            JSR inc_virtue
$761E: A5 1B       +       LDA game_mode
$7620: C9 82               CMP #$82     ;#mode_combat_inn
$7622: D0 03               BNE +
$7624: 4C D6 76            JMP combat_over

$7627: A5 68       +       LDA game_mode_pre_combat
$7629: C9 03               CMP #$03     ;#mode_dungeon
$762B: F0 69               BEQ @dungeon
                                                                           
			 ; town or world
$762D: A5 40               LDA foe_type_encountered
$762F: C9 90               CMP #$90     ;#tile_monster
$7631: B0 16               BCS @monster
$7633: C9 80               CMP #$80     ;#tile_pirate
$7635: F0 47               BEQ @pirate
$7637: C9 20               CMP #$20     ;20 <= n < 30  or  50 <= n < 60  then monster
$7639: 90 58               BCC @done
$763B: C9 60               CMP #$60     ;#-
$763D: B0 54               BCS @done
$763F: C9 30               CMP #$30     ;#-
$7641: 90 06               BCC @monster
$7643: C9 50               CMP #$50     ;#-
$7645: B0 02               BCS @monster
$7647: 90 4A               BCC @done
$7649: C9 94       @monster CMP #$94     ;#tile_bat
$764B: F0 46               BEQ @done
$764D: C9 A0               CMP #$A0     ;#tile_slime
$764F: F0 42               BEQ @done
$7651: C9 B8               CMP #$B8     ;#tile_gazer
$7653: F0 3E               BEQ @done
$7655: C9 B4               CMP #$B4     ;#tile_insects
$7657: F0 3A               BEQ @done
$7659: C9 DC               CMP #$DC     ;#tile_wisp
$765B: F0 36               BEQ @done
$765D: A5 43               LDA pre_combat_tile
$765F: 20 48 08            JSR j_blocked_tile
$7662: 30 2F               BMI @done
$7664: 90 2D               BCC @done
$7666: 20 B8 76    @drop_loot JSR get_free_object_slot
$7669: A5 41               LDA pre_combat_x
$766B: 9D 20 AC            STA object_xpos,X
$766E: A5 42               LDA pre_combat_y
$7670: 9D 40 AC            STA object_ypos,X
$7673: A9 3C               LDA #$3C     ;#tile_chest
$7675: 9D 60 AC            STA object_tile_type,X
$7678: 9D 00 AC            STA object_tile_sprite,X
$767B: 4C D6 76            JMP combat_over

$767E: 20 B8 76    @pirate JSR get_free_object_slot
$7681: A5 41               LDA pre_combat_x
$7683: 9D 20 AC            STA object_xpos,X
$7686: A5 42               LDA pre_combat_y
$7688: 9D 40 AC            STA object_ypos,X
$768B: A9 10               LDA #$10     ;#tile_ship_west
$768D: 9D 60 AC            STA object_tile_type,X
$7690: 9D 00 AC            STA object_tile_sprite,X
$7693: 4C D6 76    @done   JMP combat_over

$7696: A5 40       @dungeon LDA foe_type_encountered
$7698: C9 94               CMP #$94     ;#tile_bat
$769A: F0 F7               BEQ @done
$769C: C9 B4               CMP #$B4     ;#tile_insects
$769E: F0 F3               BEQ @done
$76A0: C9 A0               CMP #$A0     ;#tile_slime
$76A2: F0 EF               BEQ @done
$76A4: A5 10               LDA player_xpos
$76A6: 85 16               STA dest_x
$76A8: A5 11               LDA player_ypos
$76AA: 85 17               STA dest_y
$76AC: 20 96 08            JSR j_gettile_dungeon
$76AF: D0 E2               BNE @done
$76B1: A9 40               LDA #$40     ;#dng_tile_chest
$76B3: 91 7E               STA (ptr1),Y
$76B5: 4C D6 76            JMP combat_over

$76B8: A2 1F       get_free_object_slot LDX #$1F     ;#object_max
$76BA: BD 60 AC    @next   LDA object_tile_type,X
$76BD: F0 16               BEQ @done
$76BF: CA                  DEX 
$76C0: 30 0A               BMI @replace_random
$76C2: A5 68               LDA game_mode_pre_combat
$76C4: C9 01               CMP #$01     ;#mode_world
$76C6: D0 F2               BNE @next
$76C8: E0 08               CPX #$08     ;#object_inanimate_first
$76CA: B0 EE               BCS @next
$76CC: A9 18       @replace_random LDA #$18     ;#object_last - object_inanimate_first
$76CE: 20 03 7E            JSR rand_modulo
$76D1: 18                  CLC 
$76D2: 69 08               ADC #$08     ;#object_inanimate_first
$76D4: AA                  TAX 
$76D5: 60          @done   RTS 

$76D6: A5 1B       combat_over LDA game_mode
$76D8: C9 82               CMP #$82     ;#mode_combat_inn
$76DA: F0 17               BEQ @restore_towne
$76DC: A5 68               LDA game_mode_pre_combat
$76DE: 85 1B               STA game_mode
$76E0: C9 03               CMP #$03     ;#mode_dungeon
$76E2: D0 03               BNE +
$76E4: 20 06 8C            JSR j_dng_neighbor_tiles
$76E7: A9 01       +       LDA #$01     ;#music_explore
$76E9: 20 20 AF            JSR music_ctl
$76EC: A9 00               LDA #$00     ;#-
$76EE: 85 38               STA key_buf_len
$76F0: 4C 1E 62            JMP cmd_done

$76F3: A5 68       @restore_towne LDA game_mode_pre_combat
$76F5: 85 1B               STA game_mode
$76F7: A9 01               LDA #$01     ;#music_explore
$76F9: 20 20 AF            JSR music_ctl
$76FC: 60                  RTS 

$76FD: A6 54       do_foe_melee_attack LDX curr_player
$76FF: BD 7F AD            LDA combat_player_xpos-1,X
$7702: 8D FE AD            STA target_x
$7705: BD 8F AD            LDA combat_player_ypos-1,X
$7708: 8D FF AD            STA target_y
$770B: A9 4D               LDA #$4D     ;#tile_attack_small
$770D: 8D FD AD            STA attack_sprite
$7710: 20 57 08            JSR j_update_view_combat
$7713: A9 05               LDA #$05     ;#sound_foe_attack
$7715: 20 54 08            JSR j_playsfx
$7718: A9 00               LDA #$00     ;#-
$771A: 8D FD AD            STA attack_sprite
$771D: A5 46               LDA magic_aura
$771F: C9 D0               CMP #$D0     ;#aura_protection
$7721: D0 05               BNE @check_armour
$7723: 20 4E 08            JSR j_rand
$7726: 30 14               BMI @no_damage ;# 1/2 chance
$7728: 20 2D 08    @check_armour JSR j_get_stats_ptr
$772B: A9 1F               LDA #$1F     ;#player_armour
$772D: B1 7E               LDA (ptr1),Y
$772F: AA                  TAX 
$7730: BD 83 7D            LDA armour_table,X
$7733: 85 5A               STA zp5A
$7735: 20 4E 08            JSR j_rand
$7738: C5 5A               CMP zp5A
$773A: B0 06               BCS @yes_damage
$773C: 20 57 08    @no_damage JSR j_update_view_combat
$773F: 4C C4 73            JMP check_tile_effect

$7742: 20 48 77    @yes_damage JSR player_injured
$7745: 4C C4 73            JMP check_tile_effect

$7748: A9 4F       player_injured LDA #$4F     ;#tile_attack_red
$774A: 8D FD AD            STA attack_sprite
$774D: 20 EF 83            JSR invert_player_name
$7750: 20 57 08            JSR j_update_view_combat
$7753: A9 07               LDA #$07     ;#sound_firewalk
$7755: 20 54 08            JSR j_playsfx
$7758: A9 00               LDA #$00     ;#-
$775A: 8D FD AD            STA attack_sprite
$775D: 20 57 08            JSR j_update_view_combat
$7760: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7762: BD 50 AD            LDA combat_foe_tile,X
$7765: 20 9B 7D            JSR foe_index_from_tile
$7768: AA                  TAX 
$7769: BD F6 7C            LDA foe_power_table,X ;Attack = rand(P/4)
$776C: 4A                  LSR 
$776D: 4A                  LSR 
$776E: 20 03 7E            JSR rand_modulo
$7771: 20 1A 84            JSR encode_bcd_value
$7774: 20 B0 84            JSR dec_player_hp
$7777: D0 1A               BNE @done
$7779: 20 30 08            JSR j_printname
$777C: 20 21 08            JSR j_primm  ;b'\nIS KILLED!\n\x00'
$777F:                     .BYTE $8D,$C9,$D3,$A0,$CB,$C9,$CC,$CC
$7787:                     .BYTE $C5,$C4,$A1,$8D,$00
$778C: A0 04               LDY #$04     ;#virtue_sacrifice
$778E: A9 01               LDA #$01     ;#-
$7790: 20 5E 84            JSR inc_virtue
$7793: 20 EF 83    @done   JSR invert_player_name
$7796: 20 45 08            JSR j_update_status
$7799: 60                  RTS 

                   combat_cmd_table + 1   =*+$01
$779A:             combat_cmd_table .WORD combat_cmd_attack
$779C:                     .WORD done_what
$779E:                     .WORD combat_cmd_cast
$77A0:                     .WORD done_what
$77A2:                     .WORD done_what
$77A4:                     .WORD done_what
$77A6:                     .WORD combat_cmd_get
$77A8:                     .WORD done_what
$77AA:                     .WORD done_what
$77AC:                     .WORD done_what
$77AE:                     .WORD done_what
$77B0:                     .WORD done_what
$77B2:                     .WORD done_what
$77B4:                     .WORD done_what
$77B6:                     .WORD done_what
$77B8:                     .WORD done_what
$77BA:                     .WORD done_what
$77BC:                     .WORD combat_cmd_ready
$77BE:                     .WORD done_what
$77C0:                     .WORD done_what
$77C2:                     .WORD cmd_use_item
$77C4:                     .WORD cmd_volume
$77C6:                     .WORD done_what
$77C8:                     .WORD done_what
$77CA:                     .WORD done_what
$77CC:                     .WORD combat_cmd_ztats
-                                                                           
$77CE: 20 21 08    combat_move_up JSR j_primm
$77D1:                     .BYTE $CE,$EF,$F2,$F4,$E8,$8D,$00 ;b'North\n\x00'
$77D8: A6 54               LDX curr_player
$77DA: CA                  DEX 
$77DB: BD 80 AD            LDA combat_player_xpos,X
$77DE: 85 16               STA dest_x
$77E0: BC 90 AD            LDY combat_player_ypos,X
$77E3: 88                  DEY 
$77E4: 84 17               STY dest_y
$77E6: 4C 38 78            JMP try_move

$77E9: 20 21 08    combat_move_down JSR j_primm  ;b'South\n\x00'
$77EC:                     .BYTE $D3,$EF,$F5,$F4,$E8,$8D,$00
$77F3: A6 54               LDX curr_player
$77F5: CA                  DEX 
$77F6: BD 80 AD            LDA combat_player_xpos,X
$77F9: 85 16               STA dest_x
$77FB: BC 90 AD            LDY combat_player_ypos,X
$77FE: C8                  INY 
$77FF: 84 17               STY dest_y
$7801: 4C 38 78            JMP try_move

$7804: 20 21 08    combat_move_right JSR j_primm  ;b'East\n\x00'
$7807:                     .BYTE $C5,$E1,$F3,$F4,$8D,$00
$780D: A6 54               LDX curr_player
$780F: CA                  DEX 
$7810: BD 90 AD            LDA combat_player_ypos,X
$7813: 85 17               STA dest_y
$7815: BC 80 AD            LDY combat_player_xpos,X
$7818: C8                  INY 
$7819: 84 16               STY dest_x
$781B: 4C 38 78            JMP try_move

$781E: 20 21 08    combat_move_left JSR j_primm  ;b'West\n\x00'
$7821:                     .BYTE $D7,$E5,$F3,$F4,$8D,$00
$7827: A6 54               LDX curr_player
$7829: CA                  DEX 
$782A: BD 90 AD            LDA combat_player_ypos,X
$782D: 85 17               STA dest_y
$782F: BC 80 AD            LDY combat_player_xpos,X
$7832: 88                  DEY 
$7833: 84 16               STY dest_x
$7835: 4C 38 78            JMP try_move

$7838: A9 00       try_move LDA #$00     ;#sound_footstep
$783A: 20 54 08            JSR j_playsfx
$783D: A5 16               LDA dest_x
$783F: C9 0B               CMP #$0B     ;#xy_last_screen
$7841: 90 03               BCC +
$7843: 4C E8 78            JMP try_flee

$7846: A5 17       +       LDA dest_y
$7848: C9 0B               CMP #$0B     ;#xy_last_screen
$784A: 90 03               BCC +
$784C: 4C E8 78            JMP try_flee

$784F: 20 8A 08    +       JSR j_gettile_currmap
$7852: 20 48 08            JSR j_blocked_tile
$7855: 10 03               BPL +
$7857: 4C DE 41            JMP done_blocked

$785A: 20 8A 08    +       JSR j_gettile_currmap
$785D: 20 74 46            JSR check_slow_terrain
$7860: F0 06               BEQ +
$7862: 20 64 41            JSR done_slow_progress
$7865: 4C 33 71            JMP combat_cmd_done

$7868: A6 54       +       LDX curr_player
$786A: CA                  DEX 
$786B: A5 16               LDA dest_x
$786D: 9D 80 AD            STA combat_player_xpos,X
$7870: A5 17               LDA dest_y
$7872: 9D 90 AD            STA combat_player_ypos,X
$7875: A9 00               LDA #$00     ;#sound_footstep
$7877: 20 54 08            JSR j_playsfx
$787A: A5 1B               LDA game_mode
$787C: C9 81               CMP #$81     ;#mode_combat_dng_room
$787E: D0 47               BNE @cmd_done
$7880: A2 00       @floor_triggers LDX #$00     ;#-
$7882: 86 58               STX zp58     ;$zp_index
$7884: BD 10 AF    @next   LDA dng_trigger_new_tile,X
$7887: F0 32               BEQ @skip
$7889: BD 11 AF            LDA dng_trigger_pos,X
$788C: F0 2D               BEQ @skip
$788E: 4A                  LSR 
$788F: 4A                  LSR 
$7890: 4A                  LSR 
$7891: 4A                  LSR 
$7892: C5 16               CMP dest_x
$7894: D0 25               BNE @skip
$7896: BD 11 AF            LDA dng_trigger_pos,X
$7899: 29 0F               AND #$0F     ;#-
$789B: C5 17               CMP dest_y
$789D: D0 1C               BNE @skip
$789F: BD 12 AF            LDA dng_trigger_new_pos1,X
$78A2: F0 09               BEQ +
$78A4: 20 CA 78            JSR xy_to_offset
$78A7: BD 10 AF            LDA dng_trigger_new_tile,X
$78AA: 99 80 AE            STA tempmap,Y
$78AD: BD 13 AF    +       LDA dng_trigger_new_pos2,X
$78B0: F0 09               BEQ @skip
$78B2: 20 CA 78            JSR xy_to_offset
$78B5: BD 10 AF            LDA dng_trigger_new_tile,X
$78B8: 99 80 AE            STA tempmap,Y
$78BB: A5 58       @skip   LDA zp58     ;$zp_index
$78BD: 18                  CLC 
$78BE: 69 04               ADC #$04     ;#-
$78C0: 85 58               STA zp58     ;$zp_index
$78C2: AA                  TAX 
$78C3: C9 10               CMP #$10     ;# up to 4 triggers
$78C5: 90 BD               BCC @next
$78C7: 4C 33 71    @cmd_done JMP combat_cmd_done

$78CA: 48          xy_to_offset PHA 
$78CB: 4A                  LSR 
$78CC: 4A                  LSR 
$78CD: 4A                  LSR 
$78CE: 4A                  LSR 
$78CF: 85 59               STA zp59
$78D1: 68                  PLA 
$78D2: 29 0F               AND #$0F     ;#-
$78D4: A8                  TAY 
$78D5: B9 DD 78            LDA mult_by_11,Y
$78D8: 18                  CLC 
$78D9: 65 59               ADC zp59
$78DB: A8                  TAY 
$78DC: 60                  RTS 

$78DD:             mult_by_11 .BYTE $00,$0B,$16,$21,$2C,$37,$42,$4D
$78E5:                     .BYTE $58,$63,$6E
$78E8: A5 1B       try_flee LDA game_mode
$78EA: C9 81               CMP #$81     ;#mode_combat_dng_room
$78EC: D0 54               BNE do_flee
$78EE: AD 82 79            LDA flee_x
$78F1: D0 19               BNE @already_fleeing_x
$78F3: AD 83 79            LDA flee_y
$78F6: D0 1A               BNE @already_fleeing_y
$78F8: A5 16               LDA dest_x
$78FA: C9 0B               CMP #$0B     ;#xy_last_screen
$78FC: 90 06               BCC +
$78FE: 8D 82 79            STA flee_x
$7901: 4C 42 79            JMP do_flee

$7904: A5 17       +       LDA dest_y
$7906: 8D 83 79            STA flee_y
$7909: 4C 42 79            JMP do_flee

$790C: C5 16       @already_fleeing_x CMP dest_x
$790E: F0 32               BEQ do_flee
$7910: D0 06               BNE @cannot_split_party
$7912: C5 17       @already_fleeing_y CMP dest_y
$7914: F0 2C               BEQ do_flee
$7916: D0 00               BNE @cannot_split_party
$7918: 68          @cannot_split_party PLA 
$7919: 68                  PLA 
$791A: 20 21 08            JSR j_primm  ;b'ALL MUST USE\nTHE SAME EXIT!\n\x00'
$791D:                     .BYTE $C1,$CC,$CC,$A0,$CD,$D5,$D3,$D4
$7925:                     .BYTE $A0,$D5,$D3,$C5,$8D,$D4,$C8,$C5
$792D:                     .BYTE $A0,$D3,$C1,$CD,$C5,$A0,$C5,$D8
$7935:                     .BYTE $C9,$D4,$A1,$8D,$00
$793A: A9 01               LDA #$01     ;#sound_blocked
$793C: 20 54 08            JSR j_playsfx
$793F: 4C 33 71            JMP combat_cmd_done

$7942: A6 54       do_flee LDX curr_player
$7944: CA                  DEX 
$7945: A9 80               LDA #$80     ;#xy_fled
$7947: 9D 80 AD            STA combat_player_xpos,X
$794A: 9D 90 AD            STA combat_player_ypos,X
$794D: A9 00               LDA #$00     ;#-
$794F: 9D A0 AD            STA combat_player_tile,X
$7952: A9 08               LDA #$08     ;#sound_alert
$7954: 20 54 08            JSR j_playsfx
$7957: A5 1B               LDA game_mode
$7959: C9 80               CMP #$80     ;#mode_combat_wandering
$795B: D0 22               BNE @no_penalty
$795D: A5 40               LDA foe_type_encountered
$795F: 20 CD 86            JSR is_evil
$7962: 10 1B               BPL @no_penalty
$7964: 20 2D 08            JSR j_get_stats_ptr
$7967: A0 18               LDY #$18     ;#player_cur_hp_hi
$7969: B1 7E               LDA (ptr1),Y
$796B: A0 1A               LDY #$1A     ;#player_max_hp_hi
$796D: D1 7E               CMP (ptr1),Y
$796F: D0 0E               BNE @no_penalty
$7971: A0 02               LDY #$02     ;#virtue_valor
$7973: A9 02               LDA #$02     ;#-
$7975: 20 72 84            JSR dec_virtue
$7978: A0 04               LDY #$04     ;#virtue_sacrifice
$797A: A9 02               LDA #$02     ;#-
$797C: 20 72 84            JSR dec_virtue
$797F: 4C 33 71    @no_penalty JMP combat_cmd_done

$7982:             flee_x  .BYTE $00
$7983:             flee_y  .BYTE $00
-                                                                           
$7984: A9 00       combat_cmd_attack LDA #$00     ;#-
$7986: 8D 76 7C            STA missile_traveled
$7989: 20 21 08            JSR j_primm  ;b'Attack-\x00'
$798C:                     .BYTE $C1,$F4,$F4,$E1,$E3,$EB,$AD,$00
$7994: 20 87 82            JSR input_target_xy
$7997: D0 03               BNE +
$7999: 4C 06 41            JMP done_pass

$799C: A5 16       +       LDA dest_x
$799E: 8D FE AD            STA target_x
$79A1: A5 17               LDA dest_y
$79A3: 8D FF AD            STA target_y
$79A6: AE 74 7C            LDX current_weapon
$79A9: BD 8B 7D            LDA is_ranged_table,X
$79AC: D0 4A               BNE ranged_attack
$79AE: E0 0A               CPX #$0A     ;#weapon_halberd
$79B0: D0 12               BNE @skip_inc
$79B2: 18                  CLC 
$79B3: AD FE AD            LDA target_x
$79B6: 65 78               ADC delta_x
$79B8: 8D FE AD            STA target_x
$79BB: 18                  CLC 
$79BC: AD FF AD            LDA target_y
$79BF: 65 79               ADC delta_y
$79C1: 8D FF AD            STA target_y
$79C4: 20 20 82    @skip_inc JSR next_arena_tile
$79C7: 10 03               BPL melee_attack
$79C9: 4C FA 7B            JMP missed

$79CC: A9 4D       melee_attack LDA #$4D     ;#tile_attack_small
$79CE: 8D FD AD            STA attack_sprite
$79D1: 20 57 08            JSR j_update_view_combat
$79D4: A9 00               LDA #$00     ;#-
$79D6: 8D FD AD            STA attack_sprite
$79D9: A9 04               LDA #$04     ;#sound_player_attack
$79DB: 20 54 08            JSR j_playsfx
$79DE: 20 02 82            JSR check_hit_foe
$79E1: 10 0F               BPL did_hit
$79E3: A9 01               LDA #$01     ;#-
$79E5: 8D 76 7C            STA missile_traveled
$79E8: AD 74 7C            LDA current_weapon
$79EB: C9 02               CMP #$02     ;#weapon_dagger
$79ED: F0 09               BEQ ranged_attack
$79EF: 4C FA 7B            JMP missed

$79F2: EE 76 7C    did_hit INC missile_traveled
$79F5: 4C 8C 7A            JMP target_hit

$79F8: A9 0B       ranged_attack LDA #$0B     ;#xy_last_screen
$79FA: 8D 75 7C            STA aim_range
$79FD: AD 74 7C            LDA current_weapon
$7A00: C9 09               CMP #$09     ;#weapon_flaming_oil
$7A02: D0 1A               BNE use_weapon
$7A04: 20 21 08            JSR j_primm  ;b'RANGE-\x00'
$7A07:                     .BYTE $D2,$C1,$CE,$C7,$C5,$AD,$00
$7A0E: 20 98 83            JSR input_char
$7A11: 38                  SEC 
$7A12: E9 B0               SBC #$B0     ;#char_num_first
$7A14: C9 0A               CMP #$0A     ;< 10
$7A16: 90 03               BCC @valid_digit
$7A18: 4C FA 7B            JMP missed

$7A1B: 8D 75 7C    @valid_digit STA aim_range
$7A1E: AD 74 7C    use_weapon LDA current_weapon
$7A21: C9 02               CMP #$02     ;#weapon_dagger
$7A23: F0 04               BEQ @deduct_thrown
$7A25: C9 09               CMP #$09     ;#weapon_flaming_oil
$7A27: D0 28               BNE check_target
$7A29: 18          @deduct_thrown CLC 
$7A2A: 69 20               ADC #$20     ;#party_stat_weapons
$7A2C: A8                  TAY 
$7A2D: B9 00 AB            LDA party_stats,Y
$7A30: F0 06               BEQ last_one
$7A32: 20 50 84            JSR dec_stat
$7A35: 4C 51 7A            JMP check_target

$7A38: A9 00       last_one LDA #$00     ;# dead code
$7A3A: 20 2D 08            JSR j_get_stats_ptr
$7A3D: A0 1E               LDY #$1E     ;#player_weapon
$7A3F: A9 00               LDA #$00     ;#weapon_none
$7A41: 91 7E               STA (ptr1),Y
$7A43: 20 21 08            JSR j_primm  ;b'LAST ONE!\n\x00'
$7A46:                     .BYTE $CC,$C1,$D3,$D4,$A0,$CF,$CE,$C5
$7A4E:                     .BYTE $A1,$8D,$00
$7A51: 20 20 82    check_target JSR next_arena_tile
$7A54: 10 03               BPL +
$7A56: 4C FA 7B            JMP missed

$7A59: A9 4D       +       LDA #$4D     ;#tile_attack_small
$7A5B: 8D FD AD            STA attack_sprite
$7A5E: AD 74 7C            LDA current_weapon
$7A61: C9 0E               CMP #$0E     ;#weapon_magic_wand
$7A63: D0 05               BNE +
$7A65: A9 4E               LDA #$4E     ;#tile_attack_blue
$7A67: 8D FD AD            STA attack_sprite
$7A6A: 20 57 08    +       JSR j_update_view_combat
$7A6D: A9 00               LDA #$00     ;#-
$7A6F: 8D FD AD            STA attack_sprite
$7A72: AD 76 7C            LDA missile_traveled
$7A75: D0 05               BNE +
$7A77: A9 04               LDA #$04     ;#sound_player_attack
$7A79: 20 54 08            JSR j_playsfx
$7A7C: EE 76 7C    +       INC missile_traveled
$7A7F: 20 02 82            JSR check_hit_foe
$7A82: 10 08               BPL target_hit
$7A84: CE 75 7C            DEC aim_range
$7A87: D0 C8               BNE check_target
$7A89: 4C FA 7B            JMP missed

$7A8C: A5 1A       target_hit LDA current_location
$7A8E: C9 18               CMP #$18     ;#loc_dng_abyss
$7A90: D0 0A               BNE @can_damage
$7A92: AD 74 7C            LDA current_weapon
$7A95: C9 0B               CMP #$0B     ;#weapon_magic_axe ; or better
$7A97: B0 03               BCS @can_damage
$7A99: 4C FA 7B            JMP missed

$7A9C: AD 74 7C    @can_damage LDA current_weapon
$7A9F: C9 09               CMP #$09     ;#weapon_flaming_oil
$7AA1: D0 0C               BNE @no_oil_fire
$7AA3: 20 8D 08            JSR j_gettile_tempmap
$7AA6: C9 03               CMP #$03     ;#tile_water_last
$7AA8: 90 05               BCC @no_oil_fire
$7AAA: A9 46               LDA #$46     ;#tile_field_fire
$7AAC: 99 80 AE            STA tempmap,Y
$7AAF: A9 4F       @no_oil_fire LDA #$4F     ;#tile_attack_red
$7AB1: 8D FD AD            STA attack_sprite
$7AB4: AD 74 7C            LDA current_weapon
$7AB7: C9 0E               CMP #$0E     ;#weapon_magic_wand
$7AB9: D0 05               BNE +
$7ABB: A9 4E               LDA #$4E     ;#tile_attack_blue
$7ABD: 8D FD AD            STA attack_sprite
$7AC0: 20 2D 08    +       JSR j_get_stats_ptr
$7AC3: A0 14               LDY #$14     ;#player_dexterity
$7AC5: B1 7E               LDA (ptr1),Y
$7AC7: 20 32 84            JSR decode_bcd_value
$7ACA: 0A                  ASL 
$7ACB: 18                  CLC 
$7ACC: 69 80               ADC #$80     ;hit chance = (128 + DEX * 2) / 255
$7ACE: B0 0C               BCS @calc_damage
$7AD0: 85 5A               STA zp5A
$7AD2: 20 4E 08            JSR j_rand
$7AD5: C5 5A               CMP zp5A
$7AD7: 90 03               BCC @calc_damage
$7AD9: 4C FA 7B            JMP missed

$7ADC: 20 2D 08    @calc_damage JSR j_get_stats_ptr
$7ADF: A0 13               LDY #$13     ;#player_strength
$7AE1: B1 7E               LDA (ptr1),Y
$7AE3: 20 32 84            JSR decode_bcd_value
$7AE6: AE 74 7C            LDX current_weapon
$7AE9: 18                  CLC 
$7AEA: 7D 73 7D            ADC weapon_damage_table,X
$7AED: 90 02               BCC +
$7AEF: A9 FF               LDA #$FF     ;damage = max(255, STR + weapon)
$7AF1: 20 03 7E    +       JSR rand_modulo
$7AF4: 85 5C               STA damage
$7AF6: 20 57 08            JSR j_update_view_combat
$7AF9: A9 06               LDA #$06     ;#sound_damage
$7AFB: 20 54 08            JSR j_playsfx
$7AFE: A9 00               LDA #$00     ;#-
$7B00: 8D FD AD            STA attack_sprite
$7B03: 20 09 7B            JSR inflict_damage
$7B06: 4C 3D 7C            JMP end_attack

$7B09: 20 F7 85    inflict_damage JSR print_newline
$7B0C: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7B0E: BD 50 AD            LDA combat_foe_tile,X
$7B11: 85 66               STA foe_type_combat
$7B13: 20 5C 83            JSR print_target_name
$7B16: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7B18: BD 50 AD            LDA combat_foe_tile,X
$7B1B: C9 5E               CMP #$5E     ;#tile_lord_british
$7B1D: D0 03               BNE +
$7B1F: 4C 77 7B            JMP still_alive

$7B22: BD 40 AD    +       LDA combat_foe_hp,X
$7B25: 38                  SEC 
$7B26: E5 5C               SBC damage
$7B28: 9D 40 AD            STA combat_foe_hp,X
$7B2B: B0 4A               BCS still_alive
$7B2D: A9 00               LDA #$00     ;#-
$7B2F: 9D 40 AD            STA combat_foe_hp,X
$7B32: 9D 50 AD            STA combat_foe_tile,X
$7B35: 20 21 08            JSR j_primm  ;b'KILLED!\n\x00'
$7B38:                     .BYTE $CB,$C9,$CC,$CC,$C5,$C4,$A1,$8D
$7B40:                     .BYTE $00
$7B41: A5 54               LDA curr_player
$7B43: F0 2E               BEQ @done
$7B45: A5 66               LDA foe_type_combat
$7B47: 20 9B 7D            JSR foe_index_from_tile
$7B4A: A8                  TAY 
$7B4B: B9 F6 7C            LDA foe_power_table,Y ;Exp = hi(P) + 1
$7B4E: 4A                  LSR 
$7B4F: 4A                  LSR 
$7B50: 4A                  LSR 
$7B51: 4A                  LSR 
$7B52: 18                  CLC 
$7B53: 69 01               ADC #$01     ;#-
$7B55: 20 1A 84            JSR encode_bcd_value
$7B58: 20 4A 85            JSR inc_player_exp
$7B5B: 20 21 08            JSR j_primm  ;b'EXP.+\x00'
$7B5E:                     .BYTE $C5,$D8,$D0,$AE,$AB,$00
$7B64: A5 58               LDA zp58
$7B66: C9 10               CMP #$10     ;#-
$7B68: B0 06               BCS +
$7B6A: 20 66 08            JSR j_printdigit
$7B6D: 4C 73 7B            JMP @done

$7B70: 20 33 08    +       JSR j_printbcd
$7B73: 20 F7 85    @done   JSR print_newline
$7B76: 60                  RTS 

$7B77: A6 6A       still_alive LDX zp6A     ;$zp_cur_foe_index
$7B79: BD 50 AD            LDA combat_foe_tile,X
$7B7C: 20 9B 7D            JSR foe_index_from_tile
$7B7F: AA                  TAX 
$7B80: BD F6 7C            LDA foe_power_table,X ;calc percentages
$7B83: 4A                  LSR 
$7B84: 85 59               STA zp59     ;$zp_percent_50
$7B86: 85 5A               STA zp5A     ;$zp_percent_25
$7B88: 46 5A               LSR zp5A     ;$zp_percent_25
$7B8A: 18                  CLC 
$7B8B: 65 5A               ADC zp5A     ;$zp_percent_25
$7B8D: 85 58               STA zp58     ;$zp_percent_75
$7B8F: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7B91: BD 40 AD            LDA combat_foe_hp,X
$7B94: C9 18               CMP #$18     ;#hp_fleeing + 1
$7B96: B0 10               BCS @percent_25
$7B98: 20 21 08            JSR j_primm  ;b'FLEEING!\n\x00'
$7B9B:                     .BYTE $C6,$CC,$C5,$C5,$C9,$CE,$C7,$A1
$7BA3:                     .BYTE $8D,$00
$7BA5: 4C F9 7B            JMP @done

$7BA8: C5 5A       @percent_25 CMP zp5A     ;$zp_percent_25
$7BAA: B0 11               BCS @percent_50
$7BAC: 20 21 08            JSR j_primm  ;b'CRITICAL!\n\x00'
$7BAF:                     .BYTE $C3,$D2,$C9,$D4,$C9,$C3,$C1,$CC
$7BB7:                     .BYTE $A1,$8D,$00
$7BBA: 4C F9 7B            JMP @done

$7BBD: C5 59       @percent_50 CMP zp59     ;$zp_percent_50
$7BBF: B0 0E               BCS @percent_75
$7BC1: 20 21 08            JSR j_primm  ;b'HEAVILY\x00'
$7BC4:                     .BYTE $C8,$C5,$C1,$D6,$C9,$CC,$D9,$00
$7BCC: 4C EB 7B            JMP @wounded

$7BCF: C5 58       @percent_75 CMP zp58     ;$zp_percent_75
$7BD1: B0 0E               BCS @percent_HI
$7BD3: 20 21 08            JSR j_primm  ;b'LIGHTLY\x00'
$7BD6:                     .BYTE $CC,$C9,$C7,$C8,$D4,$CC,$D9,$00
$7BDE: 4C EB 7B            JMP @wounded

$7BE1: 20 21 08    @percent_HI JSR j_primm  ;b'BARELY\x00'
$7BE4:                     .BYTE $C2,$C1,$D2,$C5,$CC,$D9,$00
$7BEB: 20 21 08    @wounded JSR j_primm  ;b' WOUNDED!\n\x00'
$7BEE:                     .BYTE $A0,$D7,$CF,$D5,$CE,$C4,$C5,$C4
$7BF6:                     .BYTE $A1,$8D,$00
$7BF9: 60          @done   RTS 

$7BFA: AD 76 7C    missed  LDA missile_traveled
$7BFD: D0 05               BNE +
$7BFF: A9 04               LDA #$04     ;#sound_player_attack
$7C01: 20 54 08            JSR j_playsfx
$7C04: A9 00       +       LDA #$00     ;#-
$7C06: 8D FD AD            STA attack_sprite
$7C09: 20 21 08            JSR j_primm  ;b'MISSED!\n\x00'
$7C0C:                     .BYTE $CD,$C9,$D3,$D3,$C5,$C4,$A1,$8D
$7C14:                     .BYTE $00
$7C15: AD 74 7C            LDA current_weapon
$7C18: C9 09               CMP #$09     ;#weapon_flaming_oil
$7C1A: D0 1E               BNE @end_attack
$7C1C: AD FE AD            LDA target_x
$7C1F: C9 0B               CMP #$0B     ;#xy_last_screen
$7C21: B0 17               BCS @end_attack
$7C23: 85 16               STA dest_x
$7C25: AD FF AD            LDA target_y
$7C28: C9 0B               CMP #$0B     ;#xy_last_screen
$7C2A: B0 0E               BCS @end_attack
$7C2C: 85 17               STA dest_y
$7C2E: 20 8D 08            JSR j_gettile_tempmap
$7C31: C9 03               CMP #$03     ;#tile_water_last
$7C33: 90 05               BCC @end_attack
$7C35: A9 46               LDA #$46     ;#tile_field_fire
$7C37: 99 80 AE            STA tempmap,Y
$7C3A: 4C 3D 7C    @end_attack JMP end_attack

$7C3D: AD 74 7C    end_attack LDA current_weapon
$7C40: C9 0B               CMP #$0B     ;#weapon_magic_axe
$7C42: D0 2D               BNE @cmd_done
$7C44: AD 76 7C            LDA missile_traveled
$7C47: C9 02               CMP #$02     ;#-
$7C49: 90 26               BCC @cmd_done
$7C4B: CE 76 7C            DEC missile_traveled
$7C4E: A5 78               LDA delta_x
$7C50: 20 81 82            JSR math_negate
$7C53: 85 78               STA delta_x
$7C55: A5 79               LDA delta_y
$7C57: 20 81 82            JSR math_negate
$7C5A: 85 79               STA delta_y
$7C5C: A9 4D               LDA #$4D     ;#tile_attack_small
$7C5E: 8D FD AD            STA attack_sprite
$7C61: 20 20 82    -       JSR next_arena_tile
$7C64: 20 57 08            JSR j_update_view_combat
$7C67: CE 76 7C            DEC missile_traveled
$7C6A: D0 F5               BNE -
$7C6C: A9 00               LDA #$00     ;#-
$7C6E: 8D FD AD            STA attack_sprite
$7C71: 4C 33 71    @cmd_done JMP combat_cmd_done

$7C74:             current_weapon .BYTE $00
$7C75:             aim_range .BYTE $00
$7C76:             missile_traveled .BYTE $00
-                                                                           
$7C77: 20 21 08    combat_cmd_cast JSR j_primm  ;b'Cast, \x00'
$7C7A:                     .BYTE $C3,$E1,$F3,$F4,$AC,$A0,$00
$7C81: 4C 69 48            JMP choose_spell

$7C84: 20 21 08    combat_cmd_get JSR j_primm  ;b'Get chest!\n\x00'
$7C87:                     .BYTE $C7,$E5,$F4,$A0,$E3,$E8,$E5,$F3
$7C8F:                     .BYTE $F4,$A1,$8D,$00
$7C93: A6 54       try_get_chest_combat LDX curr_player
$7C95: CA                  DEX 
$7C96: BD 80 AD            LDA combat_player_xpos,X
$7C99: 85 16               STA dest_x
$7C9B: BD 90 AD            LDA combat_player_ypos,X
$7C9E: 85 17               STA dest_y
$7CA0: 20 8D 08            JSR j_gettile_tempmap
$7CA3: C9 3C               CMP #$3C     ;#tile_chest
$7CA5: F0 03               BEQ +
$7CA7: 4C 78 41            JMP done_not_here

$7CAA: A9 16       +       LDA #$16     ;#tile_floor_stone
$7CAC: 99 80 AE            STA tempmap,Y
$7CAF: A5 68               LDA game_mode_pre_combat
$7CB1: C9 03               CMP #$03     ;#mode_dungeon
$7CB3: D0 13               BNE @skip
$7CB5: A5 10               LDA player_xpos
$7CB7: 85 16               STA dest_x
$7CB9: A5 11               LDA player_ypos
$7CBB: 85 17               STA dest_y
$7CBD: 20 96 08            JSR j_gettile_dungeon
$7CC0: C9 40               CMP #$40     ;#dng_tile_chest
$7CC2: D0 04               BNE @skip
$7CC4: A9 00               LDA #$00     ;#-
$7CC6: 91 7E               STA (ptr1),Y
$7CC8: 4C AE 53    @skip   JMP do_get_chest

$7CCB: 20 21 08    combat_cmd_ready JSR j_primm  ;b'Ready weapon:\n\x00'
$7CCE:                     .BYTE $D2,$E5,$E1,$E4,$F9,$A0,$F7,$E5
$7CD6:                     .BYTE $E1,$F0,$EF,$EE,$BA,$8D,$00
$7CDD: 4C EB 58            JMP ask_weapon

$7CE0: 20 21 08    combat_cmd_ztats JSR j_primm  ;b'Ztats\n\x00'
$7CE3:                     .BYTE $DA,$F4,$E1,$F4,$F3,$8D,$00
$7CEA: 20 C8 5C            JSR zstats_for_player ;bug: never RTS
$7CED: 20 45 08            JSR j_update_status
$7CF0: 20 EF 83            JSR invert_player_name
$7CF3: 4C 33 71            JMP combat_cmd_done

$7CF6:             foe_power_table .BYTE $FF,$FF,$40,$60,$80,$60,$FF,$FF
$7CFE:                     .BYTE $30,$30,$40,$50,$30,$60,$30,$C0
$7D06:                     .BYTE $FF,$30,$F0,$80,$50,$30,$50,$30
$7D0E:                     .BYTE $70,$40,$80,$40,$B0,$C0,$60,$F0
$7D16:                     .BYTE $70,$D0,$E0,$FF,$70,$30,$60,$40
$7D1E:                     .BYTE $60,$80,$90,$30,$80,$30,$30,$30
$7D26:                     .BYTE $20,$20,$80,$FF
$7D2A:             foe_companion_table .BYTE $C8,$C8,$8A,$88,$86,$84,$8C,$8E
$7D32:                     .BYTE $C4,$E4,$90,$E4,$A0,$D0,$A8,$AC
$7D3A:                     .BYTE $B0,$90,$BC,$9C,$A4,$E0,$C8,$90
$7D42:                     .BYTE $F0,$B8,$EC,$BC,$F0,$F0,$F4,$B8
$7D4A:                     .BYTE $FC,$F8,$FC,$FC
$7D4E:             foe_max_count .BYTE $01,$01,$0C,$04,$04,$08,$01,$01
$7D56:                     .BYTE $0C,$0C,$06,$04,$0F,$06,$0F,$01
$7D5E:                     .BYTE $01,$0F,$04,$08,$0A,$0C,$0A,$0C
$7D66:                     .BYTE $06,$08,$06,$0C,$06,$04,$08,$04
$7D6E:                     .BYTE $06,$04,$04,$01
$7D72:             foe_count .BYTE $00
$7D73:             weapon_damage_table .BYTE $08,$10,$18,$20,$28,$30,$40,$28
$7D7B:                     .BYTE $38,$40,$60,$60,$80,$50,$A0,$FF
$7D83:             armour_table .BYTE $60,$80,$90,$A0,$B0,$C0,$D0,$F8
$7D8B:             is_ranged_table .BYTE $00,$00,$00,$FF,$00,$00,$00,$FF
$7D93:                     .BYTE $FF,$FF,$00,$FF,$00,$FF,$FF,$00
-                                                                           
$7D9B: 10 0C       foe_index_from_tile BPL @not_monster
$7D9D: 29 7F               AND #$7F     ;#-
$7D9F: 4A                  LSR 
$7DA0: C9 08               CMP #$08     ;1000NNNx
$7DA2: 90 04               BCC @done
$7DA4: 4A                  LSR          ;1NNNNNxx + 4
$7DA5: 18                  CLC 
$7DA6: 69 04               ADC #$04     ;#-
$7DA8: 60          @done   RTS 

$7DA9: 29 1F       @not_monster AND #$1F     ;000NNNNN + 24  (BUG: should be 000NNNNx)
$7DAB: 18                  CLC 
$7DAC: 69 24               ADC #$24
$7DAE: 60                  RTS 

$7DAF: 20 2D 08    is_awake JSR j_get_stats_ptr
$7DB2: A0 12               LDY #$12     ;#player_status
$7DB4: B1 7E               LDA (ptr1),Y
$7DB6: C9 C7               CMP #$C7     ;#status_Good
$7DB8: F0 1D               BEQ in_party
$7DBA: C9 D0               CMP #$D0     ;#status_Poison
$7DBC: F0 19               BEQ in_party
$7DBE: A9 FF               LDA #$FF
$7DC0: 60                  RTS 

$7DC1: 20 2D 08    is_alive JSR j_get_stats_ptr
$7DC4: A0 12               LDY #$12     ;#player_status
$7DC6: B1 7E               LDA (ptr1),Y
$7DC8: C9 C7               CMP #$C7     ;#status_Good
$7DCA: F0 0B               BEQ in_party
$7DCC: C9 D0               CMP #$D0     ;#status_Poison
$7DCE: F0 07               BEQ in_party
$7DD0: C9 D3               CMP #$D3     ;#status_Sleep
$7DD2: F0 03               BEQ in_party
$7DD4: A9 FF       is_not  LDA #$FF
$7DD6: 60                  RTS 

$7DD7: A5 54       in_party LDA curr_player
$7DD9: C5 1F               CMP party_size
$7DDB: F0 02               BEQ @is
$7DDD: B0 F5               BCS is_not
$7DDF: A9 00       @is     LDA #$00     ;#-
$7DE1: 60                  RTS 

$7DE2: 20 2D 08    get_player_sprite JSR j_get_stats_ptr
$7DE5: A0 12               LDY #$12     ;#player_status
$7DE7: B1 7E               LDA (ptr1),Y
$7DE9: C9 C7               CMP #$C7     ;#status_Good
$7DEB: F0 0B               BEQ @normal
$7DED: C9 D0               CMP #$D0     ;#status_Poison
$7DEF: F0 07               BEQ @normal
$7DF1: C9 C4               CMP #$C4     ;#status_Dead
$7DF3: F0 0B               BEQ @dead
$7DF5: A9 38               LDA #$38     ;#tile_human_prone
$7DF7: 60                  RTS 

$7DF8: A0 11       @normal LDY #$11     ;#player_class_index
$7DFA: B1 7E               LDA (ptr1),Y
$7DFC: 0A                  ASL 
$7DFD: 69 20               ADC #$20     ;#tile_human_class
$7DFF: 60                  RTS          ;tile(humans + class * 2)

$7E00: A9 FF       @dead   LDA #$FF
$7E02: 60                  RTS 

$7E03: C9 00       rand_modulo CMP #$00     ;#-
$7E05: F0 14               BEQ @done
$7E07: 8D 1C 7E            STA modulus
$7E0A: 20 4E 08            JSR j_rand
$7E0D: CD 1C 7E    @subtract CMP modulus
$7E10: 90 07               BCC @clear_flags
$7E12: 38                  SEC 
$7E13: ED 1C 7E            SBC modulus
$7E16: 4C 0D 7E            JMP @subtract

$7E19: C9 00       @clear_flags CMP #$00     ;#-
$7E1B: 60          @done   RTS 

$7E1C:             modulus .BYTE $00
-                                                                           
$7E1D: 85 5A       legal_move_world_twn STA zp5A     ;$zp_tile_type
$7E1F: 86 59               STX zp59     ;$zp_save_xreg
$7E21: 20 74 46            JSR check_slow_terrain
$7E24: 10 03               BPL @collide_other_foe
$7E26: 4C E5 7E            JMP @deny

$7E29: BD 60 AC    @collide_other_foe LDA object_tile_type,X
$7E2C: C9 8C               CMP #$8C     ;#tile_whirlpool
$7E2E: F0 3C               BEQ @avoid_repeat_move
$7E30: C9 8E               CMP #$8E     ;#tile_twister
$7E32: F0 38               BEQ @avoid_repeat_move
$7E34: A0 1F               LDY #$1F     ;#object_max
$7E36: B9 60 AC    @next   LDA object_tile_type,Y
$7E39: F0 18               BEQ @skip
$7E3B: B9 20 AC            LDA object_xpos,Y
$7E3E: C5 7A               CMP temp_x
$7E40: D0 11               BNE @skip
$7E42: B9 40 AC            LDA object_ypos,Y
$7E45: C5 7B               CMP temp_y
$7E47: D0 0A               BNE @skip
$7E49: B9 60 AC            LDA object_tile_type,Y
$7E4C: C9 3C               CMP #$3C     ;#tile_chest
$7E4E: F0 03               BEQ @skip
$7E50: 4C E5 7E            JMP @deny

$7E53: 88          @skip   DEY 
$7E54: 10 E0               BPL @next
                                                                           
			 ; collide player
$7E56: A5 7A               LDA temp_x
$7E58: C5 10               CMP player_xpos
$7E5A: D0 09               BNE @check_pirate
$7E5C: A5 7B               LDA temp_y
$7E5E: C5 11               CMP player_ypos
$7E60: D0 03               BNE @check_pirate
$7E62: 4C E5 7E            JMP @deny

$7E65: BD 60 AC    @check_pirate LDA object_tile_type,X
$7E68: C9 80               CMP #$80     ;#tile_pirate
$7E6A: F0 15               BEQ @collide_terrain
$7E6C: A5 7A       @avoid_repeat_move LDA temp_x
$7E6E: DD 80 AC            CMP object_xpos_prev,X
$7E71: D0 0E               BNE @collide_terrain
$7E73: A5 7B               LDA temp_y
$7E75: DD A0 AC            CMP object_ypos_prev,X
$7E78: D0 07               BNE @collide_terrain
$7E7A: 20 4E 08            JSR j_rand
$7E7D: 29 03               AND #$03     ;#chance_4
$7E7F: D0 64               BNE @deny
$7E81: BD 60 AC    @collide_terrain LDA object_tile_type,X
$7E84: 10 30               BPL @land
$7E86: C9 8E               CMP #$8E     ;#tile_twister
$7E88: 90 35               BCC @water
$7E8A: F0 47               BEQ @fly
$7E8C: C9 94               CMP #$94     ;#tile_bat
$7E8E: F0 43               BEQ @fly
$7E90: C9 9C               CMP #$9C     ;#tile_ghost
$7E92: F0 16               BEQ @phase
$7E94: C9 B4               CMP #$B4     ;#tile_insects
$7E96: F0 3B               BEQ @fly
$7E98: C9 EC               CMP #$EC     ;#tile_zorn
$7E9A: F0 0E               BEQ @phase
$7E9C: C9 F0               CMP #$F0     ;#tile_daemon
$7E9E: F0 33               BEQ @fly
$7EA0: C9 F8               CMP #$F8     ;#tile_dragon
$7EA2: F0 2F               BEQ @fly
$7EA4: C9 FC               CMP #$FC     ;#tile_balron
$7EA6: F0 2B               BEQ @fly
$7EA8: D0 0C               BNE @land
$7EAA: A5 5A       @phase  LDA zp5A     ;$zp_tile_type
$7EAC: C9 03               CMP #$03     ;#tile_water_last
$7EAE: 90 35               BCC @deny
$7EB0: C9 45               CMP #$45     ;#tile_field_lightning
$7EB2: D0 2C               BNE @allow
$7EB4: F0 2F               BEQ @deny
$7EB6: A5 5A       @land   LDA zp5A     ;$zp_tile_type
$7EB8: 20 48 08            JSR j_blocked_tile
$7EBB: 10 23               BPL @allow
$7EBD: 30 26               BMI @deny
$7EBF: C9 80       @water  CMP #$80     ;#tile_pirate
$7EC1: D0 08               BNE @water_creature
$7EC3: A5 5A               LDA zp5A     ;$zp_tile_type
$7EC5: C9 02               CMP #$02     ;#tile_water_shallow
$7EC7: 90 17               BCC @allow
$7EC9: B0 1A               BCS @deny
$7ECB: A5 5A       @water_creature LDA zp5A     ;$zp_tile_type
$7ECD: C9 03               CMP #$03     ;#tile_water_last
$7ECF: 90 0F               BCC @allow
$7ED1: B0 12               BCS @deny
$7ED3: A5 5A       @fly    LDA zp5A     ;$zp_tile_type
$7ED5: C9 03               CMP #$03     ;#tile_water_last
$7ED7: 90 07               BCC @allow
$7ED9: 20 48 08            JSR j_blocked_tile
$7EDC: 10 02               BPL @allow
$7EDE: 30 05               BMI @deny
$7EE0: A6 59       @allow  LDX zp59     ;$zp_save_xreg
$7EE2: A9 00               LDA #$00     ;#-
$7EE4: 60                  RTS 

$7EE5: A6 59       @deny   LDX zp59     ;$zp_save_xreg
$7EE7: A9 FF               LDA #$FF
$7EE9: 60                  RTS 

$7EEA: 85 5A       legal_move_combat STA zp5A     ;$zp_tile_type
$7EEC: 20 74 46            JSR check_slow_terrain
$7EEF: 30 15               BMI @deny
$7EF1: A5 16               LDA dest_x
$7EF3: C9 0B               CMP #$0B     ;#xy_last_screen
$7EF5: B0 06               BCS @is_fleeing
$7EF7: A5 17               LDA dest_y
$7EF9: C9 0B               CMP #$0B     ;#xy_last_screen
$7EFB: 90 0F               BCC @avoid_repeat_move
$7EFD: A6 6A       @is_fleeing LDX zp6A     ;$zp_cur_foe_index
$7EFF: BD 40 AD            LDA combat_foe_hp,X
$7F02: C9 18               CMP #$18     ;#hp_fleeing + 1
$7F04: 90 03               BCC @allow
$7F06: 4C AD 7F    @deny   JMP @return_false

$7F09: 4C AA 7F    @allow  JMP @return_true

$7F0C: A6 6A       @avoid_repeat_move LDX zp6A     ;$zp_cur_foe_index
$7F0E: BD 20 AD            LDA combat_foe_prev_x,X
$7F11: C5 16               CMP dest_x
$7F13: D0 0E               BNE @collide_other_foe
$7F15: BD 30 AD            LDA combat_foe_prev_y,X
$7F18: C5 17               CMP dest_y
$7F1A: D0 07               BNE @collide_other_foe
$7F1C: 20 4E 08            JSR j_rand
$7F1F: 29 03               AND #$03     ;#chance_4
$7F21: D0 E3               BNE @deny
$7F23: A2 0F       @collide_other_foe LDX #$0F     ;#foes_max
$7F25: BD 50 AD    @next   LDA combat_foe_tile,X
$7F28: F0 0E               BEQ @collide_player
$7F2A: BD 00 AD            LDA combat_foe_cur_x,X
$7F2D: C5 16               CMP dest_x
$7F2F: D0 07               BNE @collide_player
$7F31: BD 10 AD            LDA combat_foe_cur_y,X
$7F34: C5 17               CMP dest_y
$7F36: F0 75               BEQ @return_false
$7F38: E0 08       @collide_player CPX #$08     ;#player_last
$7F3A: B0 13               BCS @skip
$7F3C: BD A0 AD            LDA combat_player_tile,X
$7F3F: F0 0E               BEQ @skip
$7F41: BD 80 AD            LDA combat_player_xpos,X
$7F44: C5 16               CMP dest_x
$7F46: D0 07               BNE @skip
$7F48: BD 90 AD            LDA combat_player_ypos,X
$7F4B: C5 17               CMP dest_y
$7F4D: F0 5E               BEQ @return_false
$7F4F: CA          @skip   DEX 
$7F50: 10 D3               BPL @next
                                                                           
			 ; collide_terrain
$7F52: A6 6A               LDX zp6A     ;$zp_cur_foe_index
$7F54: BD 50 AD            LDA combat_foe_tile,X
$7F57: 10 30               BPL @land
$7F59: C9 8E               CMP #$8E     ;#tile_twister
$7F5B: 90 35               BCC @water
$7F5D: F0 3B               BEQ @fly
$7F5F: C9 94               CMP #$94     ;#tile_bat
$7F61: F0 37               BEQ @fly
$7F63: C9 9C               CMP #$9C     ;#tile_ghost
$7F65: F0 16               BEQ @phase
$7F67: C9 B4               CMP #$B4     ;#tile_insects
$7F69: F0 2F               BEQ @fly
$7F6B: C9 EC               CMP #$EC     ;#tile_zorn
$7F6D: F0 0E               BEQ @phase
$7F6F: C9 F0               CMP #$F0     ;#tile_daemon
$7F71: F0 27               BEQ @fly
$7F73: C9 F8               CMP #$F8     ;#tile_dragon
$7F75: F0 23               BEQ @fly
$7F77: C9 FC               CMP #$FC     ;#tile_balron
$7F79: F0 1F               BEQ @fly
$7F7B: D0 0C               BNE @land
$7F7D: A5 5A       @phase  LDA zp5A     ;$zp_tile_type
$7F7F: C9 03               CMP #$03     ;#tile_water_last
$7F81: 90 2A               BCC @return_false
$7F83: C9 45               CMP #$45     ;#tile_field_lightning
$7F85: D0 23               BNE @return_true
$7F87: F0 24               BEQ @return_false
$7F89: A5 5A       @land   LDA zp5A     ;$zp_tile_type
$7F8B: 20 48 08            JSR j_blocked_tile
$7F8E: 10 1A               BPL @return_true
$7F90: 30 1B               BMI @return_false
$7F92: A5 5A       @water  LDA zp5A     ;$zp_tile_type
$7F94: C9 03               CMP #$03     ;#tile_water_last
$7F96: 90 12               BCC @return_true
$7F98: B0 13               BCS @return_false
$7F9A: A5 5A       @fly    LDA zp5A     ;$zp_tile_type
$7F9C: C9 03               CMP #$03     ;#tile_water_last
$7F9E: 90 0A               BCC @return_true
$7FA0: 20 48 08            JSR j_blocked_tile
$7FA3: 20 48 08            JSR j_blocked_tile
$7FA6: 10 02               BPL @return_true
$7FA8: 30 03               BMI @return_false
$7FAA: A9 00       @return_true LDA #$00     ;#-
$7FAC: 60                  RTS 

$7FAD: A9 FF       @return_false LDA #$FF
$7FAF: 60                  RTS 

$7FB0: 48          legal_move_dungeon PHA 
$7FB1: 29 0F               AND #$0F     ;#dng_tile_foe_mask
$7FB3: D0 2F               BNE @pop_deny
$7FB5: 68                  PLA 
$7FB6: 29 F0               AND #$F0     ;#dng_tile_type_mask
$7FB8: C9 80               CMP #$80     ;#dng_tile_trap
$7FBA: F0 29               BEQ @deny
$7FBC: C9 90               CMP #$90     ;#dng_tile_fountain
$7FBE: F0 25               BEQ @deny
$7FC0: C9 A0               CMP #$A0     ;#dng_tile_field
$7FC2: F0 21               BEQ @deny
$7FC4: C9 D0               CMP #$D0     ;#dng_tile_room
$7FC6: F0 1D               BEQ @deny
$7FC8: C9 F0               CMP #$F0     ;#dng_tile_wall
$7FCA: F0 19               BEQ @deny
$7FCC: 20 4E 08            JSR j_rand
$7FCF: 29 07               AND #$07     ;#chance_8
$7FD1: F0 0E               BEQ @allow
$7FD3: A5 16               LDA dest_x
$7FD5: DD 80 AC            CMP object_xpos_prev,X
$7FD8: D0 07               BNE @allow
$7FDA: A5 17               LDA dest_y
$7FDC: DD A0 AC            CMP object_ypos_prev,X
$7FDF: F0 04               BEQ @deny
$7FE1: A9 00       @allow  LDA #$00     ;#-
$7FE3: 60                  RTS 

$7FE4: 68          @pop_deny PLA 
$7FE5: A9 FF       @deny   LDA #$FF
$7FE7: 60                  RTS 

$7FE8: 85 58       dng_can_advance STA zp58
$7FEA: 29 F0               AND #$F0     ;#dng_tile_type_mask
$7FEC: C9 C0               CMP #$C0     ;#dng_tile_door
$7FEE: F0 14               BEQ adv_retreat_yes
$7FF0: C9 E0               CMP #$E0     ;#dng_tile_secret_door
$7FF2: F0 10               BEQ adv_retreat_yes
$7FF4: C9 D0               CMP #$D0     ;#dng_tile_room
$7FF6: F0 0C               BEQ adv_retreat_yes
$7FF8: A5 58               LDA zp58
$7FFA: C9 A1       dng_can_retreat CMP #$A1
$7FFC: F0 09               BEQ adv_retreat_no
$7FFE: C9 C0               CMP #$C0     ;#dng_tile_door ; or higher
$8000: B0 05               BCS adv_retreat_no
$8002: 90 00               BCC adv_retreat_yes
$8004: A9 00       adv_retreat_yes LDA #$00     ;#-
$8006: 60                  RTS 

$8007: A9 FF       adv_retreat_no LDA #$FF
$8009: 60                  RTS 

$800A: A5 1B       close_open_door LDA game_mode
$800C: C9 02               CMP #$02     ;#mode_towne
$800E: D0 1D               BNE @done
$8010: AD 35 80            LDA door_open_countdown
$8013: D0 01               BNE @countdown
$8015: 60                  RTS 

$8016: CE 35 80    @countdown DEC door_open_countdown
$8019: F0 01               BEQ @close
$801B: 60                  RTS 

$801C: AD 33 80    @close  LDA door_open_x
$801F: 85 7A               STA temp_x
$8021: AD 34 80            LDA door_open_y
$8024: 85 7B               STA temp_y
$8026: 20 93 08            JSR j_gettile_towne
$8029: A9 3B               LDA #$3B     ;#tile_door_unlocked
$802B: 91 7C               STA (ptr2),Y
$802D: A9 00       @done   LDA #$00     ;#-
$802F: 8D 35 80            STA door_open_countdown
$8032: 60                  RTS 

$8033: 00          door_open_x BRK 
$8034: 00          door_open_y BRK 
$8035: 00          door_open_countdown BRK 
-                                                                           
$8036: C9 20       get_rangeattack_type CMP #$20     ;#tile_class_mage
$8038: F0 62               BEQ @attack_blue
$803A: C9 5E               CMP #$5E     ;#tile_lord_british
$803C: F0 5E               BEQ @attack_blue
$803E: C9 84               CMP #$84     ;#tile_nixie
$8040: F0 63               BEQ @attack_small
$8042: C9 86               CMP #$86     ;#tile_squid
$8044: F0 4A               BEQ @lightning
$8046: C9 88               CMP #$88     ;#tile_serpent
$8048: F0 55               BEQ @attack_red
$804A: C9 8A               CMP #$8A     ;#tile_seahorse
$804C: F0 4E               BEQ @attack_blue
$804E: C9 98               CMP #$98     ;#tile_spider
$8050: F0 3B               BEQ @poison
$8052: C9 A4               CMP #$A4     ;#tile_troll
$8054: F0 4F               BEQ @attack_small
$8056: C9 AC               CMP #$AC     ;#tile_mimic
$8058: F0 33               BEQ @poison
$805A: C9 B8               CMP #$B8     ;#tile_gazer
$805C: F0 38               BEQ @sleep
$805E: C9 CC               CMP #$CC     ;#tile_python
$8060: F0 2B               BEQ @poison
$8062: C9 D0               CMP #$D0     ;#tile_ettin
$8064: F0 33               BEQ @boulder
$8066: C9 D8               CMP #$D8     ;#tile_cyclops
$8068: F0 2F               BEQ @boulder
$806A: C9 E0               CMP #$E0     ;#tile_mage
$806C: F0 2E               BEQ @attack_blue
$806E: C9 E4               CMP #$E4     ;#tile_liche
$8070: F0 2A               BEQ @attack_blue
$8072: C9 E8               CMP #$E8     ;#tile_lava_lizard
$8074: F0 2C               BEQ @lava
$8076: C9 F0               CMP #$F0     ;#tile_daemon
$8078: F0 22               BEQ @attack_blue
$807A: C9 F4               CMP #$F4     ;#tile_hydra
$807C: B0 21               BCS @attack_red
$807E: C9 F8               CMP #$F8     ;#tile_dragon
$8080: F0 1D               BEQ @attack_red
$8082: C9 B0               CMP #$B0     ;#tile_reaper
$8084: F0 22               BEQ @rand_field
$8086: C9 FC               CMP #$FC     ;#tile_balron
$8088: F0 1E               BEQ @rand_field
$808A: A9 00               LDA #$00     ;#-
$808C: 60                  RTS 

$808D: A9 44       @poison LDA #$44     ;#tile_field_poison
$808F: 60                  RTS 

$8090: A9 45       @lightning LDA #$45     ;#tile_field_lightning
$8092: 60                  RTS 

$8093: A9 46               LDA #$46     ;#tile_field_fire
$8095: 60                  RTS 

$8096: A9 47       @sleep  LDA #$47     ;#tile_field_sleep
$8098: 60                  RTS 

$8099: A9 37       @boulder LDA #$37     ;#tile_boulder
$809B: 60                  RTS 

$809C: A9 4E       @attack_blue LDA #$4E     ;#tile_attack_blue
$809E: 60                  RTS 

$809F: A9 4F       @attack_red LDA #$4F     ;#tile_attack_red
$80A1: 60                  RTS 

$80A2: A9 4C       @lava   LDA #$4C     ;#tile_lava
$80A4: 60                  RTS 

$80A5: A9 4D       @attack_small LDA #$4D     ;#tile_attack_small
$80A7: 60                  RTS 

$80A8: 20 4E 08    @rand_field JSR j_rand
$80AB: 29 03               AND #$03     ;#-
$80AD: 18                  CLC 
$80AE: 69 44               ADC #$44     ;#tile_field_first
$80B0: 60                  RTS 

$80B1: 8D FD AD    do_foe_range_attack STA attack_sprite
$80B4: BD 00 AD            LDA combat_foe_cur_x,X
$80B7: 8D FE AD            STA target_x
$80BA: BD 10 AD            LDA combat_foe_cur_y,X
$80BD: 8D FF AD            STA target_y
$80C0: A9 03               LDA #$03     ;#sound_cannon
$80C2: 20 54 08            JSR j_playsfx
$80C5: 20 20 82    @move_missile JSR next_arena_tile
$80C8: 30 0B               BMI @clear_sprite
$80CA: 20 DE 81            JSR check_hit_player
$80CD: D0 26               BNE hit_player
$80CF: 20 57 08            JSR j_update_view_combat
$80D2: 4C C5 80            JMP @move_missile

$80D5: AD FD AD    @clear_sprite LDA attack_sprite
$80D8: A2 00               LDX #$00     ;#-
$80DA: 8E FD AD            STX attack_sprite
$80DD: C9 4C               CMP #$4C     ;#tile_lava
$80DF: F0 01               BEQ @create_lava
$80E1: 60                  RTS 

$80E2: AD FE AD    @create_lava LDA target_x
$80E5: 85 16               STA dest_x
$80E7: AD FF AD            LDA target_y
$80EA: 85 17               STA dest_y
$80EC: 20 8A 08            JSR j_gettile_currmap
$80EF: A9 4C               LDA #$4C     ;#tile_lava
$80F1: 99 80 AE            STA tempmap,Y
$80F4: 60                  RTS 

$80F5: 20 F7 85    hit_player JSR print_newline
$80F8: 20 30 08            JSR j_printname
$80FB: 20 F7 85            JSR print_newline
$80FE: AD FD AD            LDA attack_sprite
$8101: C9 44               CMP #$44     ;#tile_field_poison
$8103: D0 26               BNE @check_lightning
$8105: 20 21 08            JSR j_primm  ;b'POISONED!\n\x00'
$8108:                     .BYTE $D0,$CF,$C9,$D3,$CF,$CE,$C5,$C4
$8110:                     .BYTE $A1,$8D,$00
$8113: 20 C0 81            JSR effect_poison_sleep
$8116: 20 4E 08            JSR j_rand
$8119: 10 51               BPL @fail    ;chance 50%
$811B: 20 2D 08            JSR j_get_stats_ptr
$811E: A0 12               LDY #$12     ;#player_status
$8120: B1 7E               LDA (ptr1),Y
$8122: C9 C7               CMP #$C7     ;#status_Good
$8124: D0 46               BNE @fail
$8126: A9 D0               LDA #$D0     ;#status_Poison
$8128: 91 7E               STA (ptr1),Y
$812A: 60                  RTS 

$812B: C9 45       @check_lightning CMP #$45     ;#tile_field_lightning
$812D: D0 15               BNE @check_fire
$812F: 20 21 08            JSR j_primm  ;b'ELECTRIFIED!\n\x00'
$8132:                     .BYTE $C5,$CC,$C5,$C3,$D4,$D2,$C9,$C6
$813A:                     .BYTE $C9,$C5,$C4,$A1,$8D,$00
$8140: 20 48 77            JSR player_injured
$8143: 60                  RTS 

$8144: C9 46       @check_fire CMP #$46     ;#tile_field_fire
$8146: D0 0D               BNE @check_sleep
$8148: 20 21 08            JSR j_primm  ;b'FIERY \x00'
$814B:                     .BYTE $C6,$C9,$C5,$D2,$D9,$A0,$00
$8152: 4C B3 81            JMP @hit

$8155: C9 47       @check_sleep CMP #$47     ;#tile_field_sleep
$8157: D0 37               BNE @check_lava
$8159: 20 21 08            JSR j_primm  ;b'SLEPT!\n\x00'
$815C:                     .BYTE $D3,$CC,$C5,$D0,$D4,$A1,$8D,$00
$8164: 20 C0 81            JSR effect_poison_sleep
$8167: 20 4E 08            JSR j_rand
$816A: 30 0D               BMI +
$816C: 20 21 08    @fail   JSR j_primm  ;b'FAILED.\n\x00'
$816F:                     .BYTE $C6,$C1,$C9,$CC,$C5,$C4,$AE,$8D
$8177:                     .BYTE $00
$8178: 60                  RTS 

$8179: 20 2D 08    +       JSR j_get_stats_ptr
$817C: A0 12               LDY #$12     ;#player_status
$817E: B1 7E               LDA (ptr1),Y
$8180: C9 C7               CMP #$C7     ;#status_Good
$8182: D0 E8               BNE @fail
$8184: A9 D3               LDA #$D3     ;#status_Sleep
$8186: 91 7E               STA (ptr1),Y
$8188: A9 38               LDA #$38     ;#tile_human_prone
$818A: A6 54               LDX curr_player
$818C: 9D 9F AD            STA combat_player_tile-1,X
$818F: 60                  RTS 

$8190: C9 4C       @check_lava CMP #$4C     ;#tile_lava
$8192: D0 0C               BNE @check_magic
$8194: 20 21 08            JSR j_primm  ;b'LAVA \x00'
$8197:                     .BYTE $CC,$C1,$D6,$C1,$A0,$00
$819D: 4C B3 81            JMP @hit

$81A0: C9 4E       @check_magic CMP #$4E     ;#tile_attack_blue
$81A2: D0 0F               BNE @hit
$81A4: 20 21 08            JSR j_primm  ;b'MAGICAL \x00'
$81A7:                     .BYTE $CD,$C1,$C7,$C9,$C3,$C1,$CC,$A0
$81AF:                     .BYTE $00
$81B0: 4C B3 81            JMP @hit

$81B3: 20 21 08    @hit    JSR j_primm  ;b'HIT!\n\x00'
$81B6:                     .BYTE $C8,$C9,$D4,$A1,$8D,$00
$81BC: 20 48 77            JSR player_injured
$81BF: 60                  RTS 

$81C0: 20 EF 83    effect_poison_sleep JSR invert_player_name
$81C3: A5 16               LDA dest_x
$81C5: 8D FE AD            STA target_x
$81C8: A5 17               LDA dest_y
$81CA: 8D FF AD            STA target_y
$81CD: 20 57 08            JSR j_update_view_combat
$81D0: A9 07               LDA #$07     ;#sound_firewalk
$81D2: 20 54 08            JSR j_playsfx
$81D5: 20 EF 83            JSR invert_player_name
$81D8: A9 00               LDA #$00     ;#-
$81DA: 8D FD AD            STA attack_sprite
$81DD: 60                  RTS 

$81DE: A5 1F       check_hit_player LDA party_size
$81E0: 85 54               STA curr_player
$81E2: 20 C1 7D    @next   JSR is_alive
$81E5: D0 16               BNE @skip
$81E7: A6 54               LDX curr_player
$81E9: CA                  DEX 
$81EA: AD FE AD            LDA target_x
$81ED: DD 80 AD            CMP combat_player_xpos,X
$81F0: D0 0B               BNE @skip
$81F2: AD FF AD            LDA target_y
$81F5: DD 90 AD            CMP combat_player_ypos,X
$81F8: D0 03               BNE @skip
$81FA: A5 54               LDA curr_player
$81FC: 60                  RTS 

$81FD: C6 54       @skip   DEC curr_player
$81FF: D0 E1               BNE @next
$8201: 60                  RTS 

$8202: A0 0F       check_hit_foe LDY #$0F     ;#foes_max
$8204: B9 50 AD    @next   LDA combat_foe_tile,Y
$8207: F0 0E               BEQ @skip
$8209: B9 00 AD            LDA combat_foe_cur_x,Y
$820C: C5 16               CMP dest_x
$820E: D0 07               BNE @skip
$8210: B9 10 AD            LDA combat_foe_cur_y,Y
$8213: C5 17               CMP dest_y
$8215: F0 03               BEQ @done
$8217: 88          @skip   DEY 
$8218: 10 EA               BPL @next
$821A: 98          @done   TYA 
$821B: 85 6A               STA zp6A     ;$zp_cur_foe_index
$821D: C9 00               CMP #$00     ;#-
$821F: 60                  RTS 

$8220: 18          next_arena_tile CLC 
$8221: AD FE AD            LDA target_x
$8224: 65 78               ADC delta_x
$8226: 85 16               STA dest_x
$8228: 18                  CLC 
$8229: AD FF AD            LDA target_y
$822C: 65 79               ADC delta_y
$822E: 85 17               STA dest_y
$8230: A5 16               LDA dest_x
$8232: C9 0B               CMP #$0B     ;#xy_last_screen
$8234: B0 31               BCS @fail
$8236: A5 17               LDA dest_y
$8238: C9 0B               CMP #$0B     ;#xy_last_screen
$823A: B0 2B               BCS @fail
$823C: 20 8D 08            JSR j_gettile_tempmap
$823F: 30 19               BMI @ok
$8241: C9 03               CMP #$03     ;#tile_water_last
$8243: 90 15               BCC @ok
$8245: C9 48               CMP #$48     ;#tile_white_space
$8247: F0 11               BEQ @ok
$8249: C9 49               CMP #$49     ;#tile_secret_panel
$824B: F0 1A               BEQ @fail
$824D: C9 31               CMP #$31     ;#tile_diagonal_first
$824F: 90 04               BCC @blocked
$8251: C9 35               CMP #$35     ;#tile_diagonal_last
$8253: 90 05               BCC @ok
$8255: 20 48 08    @blocked JSR j_blocked_tile
$8258: 30 0D               BMI @fail
$825A: A5 16       @ok     LDA dest_x
$825C: 8D FE AD            STA target_x
$825F: A5 17               LDA dest_y
$8261: 8D FF AD            STA target_y
$8264: A9 00               LDA #$00     ;#-
$8266: 60                  RTS 

$8267: A9 FF       @fail   LDA #$FF
$8269: 60                  RTS 

$826A: C9 00       math_sign CMP #$00     ;#-
$826C: F0 07               BEQ @done
$826E: 30 03               BMI +
$8270: A9 01               LDA #$01     ;#-
$8272: 60                  RTS 

$8273: A9 FF       +       LDA #$FF
$8275: 60          @done   RTS 

$8276: C9 00       math_abs CMP #$00     ;#-
$8278: 30 01               BMI @negate
$827A: 60                  RTS 

$827B: 49 FF       @negate EOR #$FF
$827D: 18                  CLC 
$827E: 69 01               ADC #$01     ;#-
$8280: 60                  RTS 

$8281: 49 FF       math_negate EOR #$FF
$8283: 18                  CLC 
$8284: 69 01               ADC #$01     ;#-
$8286: 60                  RTS 

$8287: 20 9C 82    input_target_xy JSR input_direction
$828A: F0 0F               BEQ @done
$828C: A6 54               LDX curr_player
$828E: CA                  DEX 
$828F: BD 80 AD            LDA combat_player_xpos,X
$8292: 85 16               STA dest_x
$8294: BD 90 AD            LDA combat_player_ypos,X
$8297: 85 17               STA dest_y
$8299: A9 01               LDA #$01     ;#-
$829B: 60          @done   RTS 

$829C: 20 00 08    input_direction JSR j_waitkey
$829F: D0 06               BNE @check_input_key
$82A1: 20 F7 85    @return_none JSR print_newline
$82A4: A9 00               LDA #$00     ;#-
$82A6: 60                  RTS 

$82A7: 48          @check_input_key PHA 
$82A8: A9 00               LDA #$00     ;#-
$82AA: 85 78               STA delta_x
$82AC: 85 79               STA delta_y
$82AE: 68                  PLA 
$82AF: C9 C0               CMP #$C0     ;#char_at_sign
$82B1: F0 16               BEQ @up
$82B3: C9 AF               CMP #$AF     ;#char_slash
$82B5: F0 1C               BEQ @down
$82B7: C9 BA               CMP #$BA     ;#char_colon
$82B9: F0 22               BEQ @left
$82BB: C9 BB               CMP #$BB     ;#char_semicolon
$82BD: F0 28               BEQ @right
$82BF: C9 A0               CMP #$A0     ;#char_space
$82C1: F0 DE               BEQ @return_none
$82C3: 20 24 08            JSR j_console_out
$82C6: 4C A1 82            JMP @return_none

$82C9: 20 03 83    @up     JSR print_north
$82CC: A9 FF               LDA #$FF
$82CE: 85 79               STA delta_y
$82D0: 4C EE 82            JMP @set_new_xy

$82D3: 20 0E 83    @down   JSR print_south
$82D6: A9 01               LDA #$01     ;#-
$82D8: 85 79               STA delta_y
$82DA: 4C EE 82            JMP @set_new_xy

$82DD: 20 23 83    @left   JSR print_west
$82E0: A9 FF               LDA #$FF
$82E2: 85 78               STA delta_x
$82E4: 4C EE 82            JMP @set_new_xy

$82E7: 20 19 83    @right  JSR print_east
$82EA: A9 01               LDA #$01     ;#-
$82EC: 85 78               STA delta_x
$82EE: 18          @set_new_xy CLC 
$82EF: A5 10               LDA player_xpos
$82F1: 65 78               ADC delta_x
$82F3: 85 7A               STA temp_x
$82F5: 85 16               STA dest_x
$82F7: 18                  CLC 
$82F8: A5 11               LDA player_ypos
$82FA: 65 79               ADC delta_y
$82FC: 85 7B               STA temp_y
$82FE: 85 17               STA dest_y
$8300: A9 01               LDA #$01     ;#-
$8302: 60                  RTS 

$8303: 20 21 08    print_north JSR j_primm  ;b'North\n\x00'
$8306:                     .BYTE $CE,$EF,$F2,$F4,$E8,$8D,$00
$830D: 60                  RTS 

$830E: 20 21 08    print_south JSR j_primm  ;b'South\n\x00'
$8311:                     .BYTE $D3,$EF,$F5,$F4,$E8,$8D,$00
$8318: 60                  RTS 

$8319: 20 21 08    print_east JSR j_primm  ;b'East\n\x00'
$831C:                     .BYTE $C5,$E1,$F3,$F4,$8D,$00
$8322: 60                  RTS 

$8323: 20 21 08    print_west JSR j_primm  ;b'West\n\x00'
$8326:                     .BYTE $D7,$E5,$F3,$F4,$8D,$00
$832C: 60                  RTS 

$832D: A5 1A       get_mob_at_temp_xy LDA current_location
$832F: D0 05               BNE @not_world
$8331: A2 07               LDX #$07     ;#object_mobs_max
$8333: 4C 3C 83            JMP check_next_object

$8336: C9 11       @not_world CMP #$11     ;#loc_dng_first
$8338: B0 1A               BCS temp_xy_none
$833A: A2 1F       any_obj_at_temp_xy LDX #$1F     ;#object_max
$833C: A5 7A       check_next_object LDA temp_x
$833E: DD 20 AC            CMP object_xpos,X
$8341: D0 0E               BNE temp_xy_skip
$8343: A5 7B               LDA temp_y
$8345: DD 40 AC            CMP object_ypos,X
$8348: D0 07               BNE temp_xy_skip
$834A: BD 60 AC            LDA object_tile_type,X
$834D: F0 02               BEQ temp_xy_skip
$834F: 8A                  TXA 
$8350: 60                  RTS 

$8351: CA          temp_xy_skip DEX 
$8352: 10 E8               BPL check_next_object
$8354: A9 FF       temp_xy_none LDA #$FF
$8356: 60                  RTS 

$8357: A6 58       print_attacker_name LDX zp58     ;$zp_index
$8359: BD 60 AC            LDA object_tile_type,X
$835C: 10 1C       print_target_name BPL @non_monster
$835E: 38                  SEC 
$835F: E9 80               SBC #$80     ;#tile_monster_first
$8361: C9 10               CMP #$10     ;#monster_water_last
$8363: B0 0D               BCS @monster_non_water
$8365: 4A                  LSR          ;1000NNNx  print(N+1)
$8366: 18          @print  CLC 
$8367: 69 01               ADC #$01     ;#-
$8369: 20 7E 08            JSR j_printstring
$836C: A9 8D               LDA #$8D     ;#char_newline
$836E: 20 24 08            JSR j_console_out
$8371: 60                  RTS 

$8372: 4A          @monster_non_water LSR 
$8373: 4A                  LSR 
$8374: 18                  CLC 
$8375: 69 04               ADC #$04     ;#-
$8377: 4C 66 83            JMP @print

$837A: C9 20       @non_monster CMP #$20     ;20 <= n < 30  or  50 <= n < 60
$837C: 90 15               BCC @inanimate
$837E: C9 60               CMP #$60     ;#-
$8380: B0 11               BCS @inanimate
$8382: C9 30               CMP #$30     ;#-
$8384: 90 04               BCC @npc
$8386: C9 50               CMP #$50     ;#-
$8388: 90 09               BCC @inanimate
$838A: 29 1F       @npc    AND #$1F     ;0xxNNNNx
$838C: 4A                  LSR 
$838D: 18                  CLC 
$838E: 69 4C               ADC #$4C     ;print(N + 4D)
$8390: 4C 66 83            JMP @print

$8393: A9 13       @inanimate LDA #$13     ;# phantom
$8395: 4C 66 83            JMP @print

$8398: 20 00 08    input_char JSR j_waitkey
$839B: 48                  PHA 
$839C: F0 03               BEQ +
$839E: 20 24 08            JSR j_console_out
$83A1: A9 8D       +       LDA #$8D     ;#char_newline
$83A3: 20 24 08            JSR j_console_out
$83A6: 68                  PLA 
$83A7: 60                  RTS 

$83A8: A5 1F       anyone_awake LDA party_size
$83AA: 85 54               STA curr_player
$83AC: 20 C1 7D    @next_alive JSR is_alive
$83AF: F0 07               BEQ @next_awake
$83B1: C6 54               DEC curr_player
$83B3: D0 F7               BNE @next_alive
$83B5: 4C C7 83            JMP run_file_dead

$83B8: 20 AF 7D    @next_awake JSR is_awake
$83BB: F0 07               BEQ @yes
$83BD: C6 54               DEC curr_player
$83BF: D0 F7               BNE @next_awake
$83C1: A9 FF               LDA #$FF
$83C3: 60                  RTS 

$83C4: A9 00       @yes    LDA #$00     ;#-
$83C6: 60                  RTS 

$83C7: A9 00       run_file_dead LDA #$00     ;#music_off
$83C9: 20 20 AF            JSR music_ctl
$83CC: A9 02               LDA #$02     ;#disk_britannia
$83CE: 20 42 08            JSR j_request_disk
$83D1: A9 CC               LDA #$CC     ;#char_L
$83D3: A2 89               LDX #$89     ;#file_id_dead
$83D5: 20 00 A1            JSR j_fileio
$83D8: 20 00 88            JSR j_overlay_entry
$83DB: A9 01               LDA #$01     ;#music_explore
$83DD: 20 20 AF            JSR music_ctl
$83E0: 4C 1E 62            JMP cmd_done

$83E3: A5 1F       invert_all_players LDA party_size
$83E5: 85 54               STA curr_player
$83E7: 20 EF 83    @next   JSR invert_player_name
$83EA: C6 54               DEC curr_player
$83EC: D0 F9               BNE @next
$83EE: 60                  RTS 

$83EF: A5 54       invert_player_name LDA curr_player
$83F1: 0A                  ASL 
$83F2: 0A                  ASL 
$83F3: 0A                  ASL 
$83F4: AA                  TAX 
$83F5: BD 00 E0            LDA bmplineaddr_lo,X
$83F8: 85 7E               STA ptr1
$83FA: BD C0 E0            LDA bmplineaddr_hi,X
$83FD: 85 7F               STA ptr1 + 1
$83FF: A5 7E               LDA ptr1
$8401: 18                  CLC 
$8402: 69 C0               ADC #$C0     ;# column $18
$8404: 85 7E               STA ptr1
$8406: A5 7F               LDA ptr1 + 1
$8408: 69 00               ADC #$00     ;#-
$840A: 85 7F               STA ptr1 + 1
$840C: A0 00               LDY #$00     ;#-
$840E: B1 7E       @loop   LDA (ptr1),Y
$8410: 49 FF               EOR #$FF
$8412: 91 7E               STA (ptr1),Y
$8414: C8                  INY 
$8415: C0 78               CPY #$78     ;# $70 == 14 columns
$8417: D0 F5               BNE @loop
$8419: 60                  RTS 

$841A: C9 00       encode_bcd_value CMP #$00     ;#-
$841C: F0 12               BEQ @done
$841E: C9 63               CMP #$63     ;#-
$8420: B0 0C               BCS @max
$8422: F8                  SED 
$8423: AA                  TAX 
$8424: A9 00               LDA #$00     ;#-
$8426: 18          @dec    CLC 
$8427: 69 01               ADC #$01     ;#-
$8429: CA                  DEX 
$842A: D0 FA               BNE @dec
$842C: F0 02               BEQ @done
$842E: A9 99       @max    LDA #$99
$8430: D8          @done   CLD 
$8431: 60                  RTS 

$8432: C9 00       decode_bcd_value CMP #$00     ;#-
$8434: F0 0B               BEQ @done
$8436: A2 00               LDX #$00     ;#-
$8438: F8                  SED 
$8439: E8          @inc    INX 
$843A: 38                  SEC 
$843B: E9 01               SBC #$01     ;#-
$843D: D0 FA               BNE @inc
$843F: 8A                  TXA 
$8440: D8                  CLD 
$8441: 60          @done   RTS 

$8442: F8          inc_stat SED 
$8443: 18                  CLC 
$8444: B9 00 AB            LDA party_stats,Y
$8447: 69 01               ADC #$01     ;#-
$8449: B0 03               BCS +
$844B: 99 00 AB            STA party_stats,Y
$844E: D8          +       CLD 
$844F: 60                  RTS 

$8450: F8          dec_stat SED 
$8451: 38                  SEC 
$8452: B9 00 AB            LDA party_stats,Y
$8455: E9 01               SBC #$01     ;#-
$8457: 90 03               BCC +
$8459: 99 00 AB            STA party_stats,Y
$845C: D8          +       CLD 
$845D: 60                  RTS 

$845E: 85 59       inc_virtue STA zp59
$8460: F8                  SED 
$8461: 18                  CLC 
$8462: B9 00 AB            LDA party_stats,Y
$8465: F0 06               BEQ @done    ;00 == Avatar
$8467: 65 59               ADC zp59
$8469: 90 02               BCC @done
$846B: A9 99               LDA #$99     ;99 == clamp max
$846D: 99 00 AB    @done   STA party_stats,Y
$8470: D8                  CLD 
$8471: 60                  RTS 

$8472: 85 5A       dec_virtue STA zp5A     ;$zp_amount
$8474: 84 59               STY zp59
$8476: B9 00 AB            LDA party_stats,Y
$8479: F0 0F               BEQ @lost_eighth
$847B: F8          @lost_eighth_rts SED 
$847C: 38                  SEC 
$847D: E5 5A               SBC zp5A     ;$zp_amount
$847F: F0 02               BEQ @underflow
$8481: B0 02               BCS +
$8483: A9 01       @underflow LDA #$01     ;01 == clamp min
$8485: 99 00 AB    +       STA party_stats,Y
$8488: D8                  CLD 
$8489: 60                  RTS 

$848A: 20 21 08    @lost_eighth JSR j_primm  ;b'\nTHOU HAST LOST\nAN EIGHTH!\n\x00'
$848D:                     .BYTE $8D,$D4,$C8,$CF,$D5,$A0,$C8,$C1
$8495:                     .BYTE $D3,$D4,$A0,$CC,$CF,$D3,$D4,$8D
$849D:                     .BYTE $C1,$CE,$A0,$C5,$C9,$C7,$C8,$D4
$84A5:                     .BYTE $C8,$A1,$8D,$00
$84A9: A4 59               LDY zp59
$84AB: A9 99               LDA #$99
$84AD: 4C 7B 84            JMP @lost_eighth_rts

$84B0: 85 5A       dec_player_hp STA zp5A     ;$zp_amount
$84B2: 20 2D 08            JSR j_get_stats_ptr
$84B5: A0 19               LDY #$19     ;#player_cur_hp_lo
$84B7: F8                  SED 
$84B8: 38                  SEC 
$84B9: B1 7E               LDA (ptr1),Y
$84BB: E5 5A               SBC zp5A     ;$zp_amount
$84BD: 91 7E               STA (ptr1),Y
$84BF: 88                  DEY 
$84C0: B1 7E               LDA (ptr1),Y
$84C2: E9 00               SBC #$00     ;#-
$84C4: 91 7E               STA (ptr1),Y
$84C6: D8                  CLD 
$84C7: 90 03               BCC @died
$84C9: A9 01               LDA #$01     ;#-
$84CB: 60                  RTS 

$84CC: A9 00       @died   LDA #$00     ;#-
$84CE: 91 7E               STA (ptr1),Y
$84D0: C8                  INY 
$84D1: 91 7E               STA (ptr1),Y
$84D3: 20 2D 08            JSR j_get_stats_ptr
$84D6: A0 12               LDY #$12     ;#player_status
$84D8: A9 C4               LDA #$C4     ;#status_Dead
$84DA: 91 7E               STA (ptr1),Y
$84DC: A5 1B               LDA game_mode
$84DE: 10 07               BPL @done
$84E0: A9 38               LDA #$38     ;#tile_human_prone
$84E2: A6 54               LDX curr_player
$84E4: 9D 9F AD            STA combat_player_tile-1,X
$84E7: A9 00       @done   LDA #$00     ;#-
$84E9: 60                  RTS 

$84EA: 85 5A       inc_player_hp STA zp5A     ;$zp_amount
$84EC: 20 2D 08            JSR j_get_stats_ptr
$84EF: A0 19               LDY #$19     ;#player_cur_hp_lo
$84F1: F8                  SED 
$84F2: 18                  CLC 
$84F3: B1 7E               LDA (ptr1),Y
$84F5: 65 5A               ADC zp5A     ;$zp_amount
$84F7: 91 7E               STA (ptr1),Y
$84F9: 88                  DEY 
$84FA: B1 7E               LDA (ptr1),Y
$84FC: 69 00               ADC #$00     ;#-
$84FE: 91 7E               STA (ptr1),Y
$8500: D8                  CLD 
$8501: A0 18               LDY #$18     ;#player_cur_hp_hi
$8503: B1 7E               LDA (ptr1),Y
$8505: A0 1A               LDY #$1A     ;#player_max_hp_hi
$8507: D1 7E               CMP (ptr1),Y
$8509: 90 1A               BCC @done
$850B: A0 19               LDY #$19     ;#player_cur_hp_lo
$850D: B1 7E               LDA (ptr1),Y
$850F: A0 1B               LDY #$1B     ;#player_max_hp_lo
$8511: D1 7E               CMP (ptr1),Y
$8513: 90 10               BCC @done
$8515: A0 1A               LDY #$1A     ;#player_max_hp_hi
$8517: B1 7E               LDA (ptr1),Y
$8519: A0 18               LDY #$18     ;#player_cur_hp_hi
$851B: 91 7E               STA (ptr1),Y
$851D: A0 1B               LDY #$1B     ;#player_max_hp_lo
$851F: B1 7E               LDA (ptr1),Y
$8521: A0 19               LDY #$19     ;#player_cur_hp_lo
$8523: 91 7E               STA (ptr1),Y
$8525: 60          @done   RTS 

$8526: 85 5A       inc_party_gold STA zp5A     ;$zp_amount
$8528: A0 14               LDY #$14     ;#party_stat_gold_lo
$852A: F8                  SED 
$852B: 18                  CLC 
$852C: B9 00 AB            LDA party_stats,Y
$852F: 65 5A               ADC zp5A     ;$zp_amount
$8531: 99 00 AB            STA party_stats,Y
$8534: 88                  DEY 
$8535: B9 00 AB            LDA party_stats,Y
$8538: 69 00               ADC #$00     ;#-
$853A: 99 00 AB            STA party_stats,Y
$853D: D8                  CLD 
$853E: 90 09               BCC @no_overflow
$8540: A9 99               LDA #$99
$8542: 99 00 AB            STA party_stats,Y
$8545: C8                  INY 
$8546: 99 00 AB            STA party_stats,Y
$8549: 60          @no_overflow RTS 

$854A: 85 58       inc_player_exp STA zp58
$854C: 20 2D 08            JSR j_get_stats_ptr
$854F: A0 1D               LDY #$1D     ;#player_experience_lo
$8551: F8                  SED 
$8552: 18                  CLC 
$8553: B1 7E               LDA (ptr1),Y
$8555: 65 58               ADC zp58
$8557: 91 7E               STA (ptr1),Y
$8559: 88                  DEY 
$855A: B1 7E               LDA (ptr1),Y
$855C: 69 00               ADC #$00     ;#-
$855E: 91 7E               STA (ptr1),Y
$8560: D8                  CLD 
$8561: 90 07               BCC @no_overflow
$8563: A9 99               LDA #$99
$8565: 91 7E               STA (ptr1),Y
$8567: C8                  INY 
$8568: 91 7E               STA (ptr1),Y
$856A: 60          @no_overflow RTS 

$856B: 20 EB 85    burn_player JSR hilight_damaged_plr
$856E: A9 1E               LDA #$1E     ;# 0 - 29
$8570: 20 03 7E            JSR rand_modulo
$8573: 20 1A 84            JSR encode_bcd_value
$8576: 20 B0 84            JSR dec_player_hp
$8579: 60                  RTS 

$857A: 20 E3 83    damage_party JSR invert_all_players
$857D: A9 06               LDA #$06     ;#sound_damage
$857F: 20 54 08            JSR j_playsfx
$8582: 20 FD 85            JSR shake_screen
$8585: A5 1B               LDA game_mode
$8587: 30 33               BMI @check_each_player
$8589: A5 1E               LDA player_transport
$858B: C9 14               CMP #$14     ;#tile_ship_last
$858D: B0 2D               BCS @check_each_player
$858F: F8                  SED 
$8590: 38                  SEC 
$8591: A5 2B               LDA ship_hull
$8593: E9 0A               SBC #$0A     ;# fixed damage 10
$8595: D8                  CLD 
$8596: B0 22               BCS @damage_ship
$8598: A9 00               LDA #$00     ;#-
$859A: 85 2B               STA ship_hull
$859C: 20 E3 83            JSR invert_all_players
$859F: 20 45 08            JSR j_update_status
$85A2: 20 21 08            JSR j_primm  ;b'\nTHY SHIP SINKS!\n\x00'
$85A5:                     .BYTE $8D,$D4,$C8,$D9,$A0,$D3,$C8,$C9
$85AD:                     .BYTE $D0,$A0,$D3,$C9,$CE,$CB,$D3,$A1
$85B5:                     .BYTE $8D,$00
$85B7: 4C C7 83            JMP run_file_dead

$85BA: 85 2B       @damage_ship STA ship_hull
$85BC: A5 1F       @check_each_player LDA party_size
$85BE: 85 54               STA curr_player
$85C0: 20 4E 08    @next   JSR j_rand
$85C3: 30 1B               BMI @skip    ;# 1/2 chance
$85C5: 20 C1 7D            JSR is_alive
$85C8: D0 16               BNE @skip
$85CA: A5 1B               LDA game_mode
$85CC: 10 07               BPL @damage_player
$85CE: A6 54               LDX curr_player
$85D0: BD 9F AD            LDA combat_player_tile-1,X
$85D3: F0 0B               BEQ @skip
$85D5: A9 19       @damage_player LDA #$19     ;# 0-25 damage
$85D7: 20 03 7E            JSR rand_modulo
$85DA: 20 1A 84            JSR encode_bcd_value
$85DD: 20 B0 84            JSR dec_player_hp
$85E0: C6 54       @skip   DEC curr_player
$85E2: D0 DC               BNE @next
$85E4: 20 E3 83            JSR invert_all_players
$85E7: 20 45 08            JSR j_update_status
$85EA: 60                  RTS 

$85EB: 20 EF 83    hilight_damaged_plr JSR invert_player_name
$85EE: A9 07               LDA #$07     ;#sound_firewalk
$85F0: 20 54 08            JSR j_playsfx
$85F3: 20 EF 83            JSR invert_player_name
$85F6: 60                  RTS 

$85F7: A9 8D       print_newline LDA #$8D     ;#char_newline
$85F9: 20 24 08            JSR j_console_out
$85FC: 60                  RTS 

$85FD: 20 45 86    shake_screen JSR move_view_up
$8600: 20 16 86            JSR move_view_down
$8603: 20 45 86            JSR move_view_up
$8606: 20 16 86            JSR move_view_down
$8609: 20 45 86            JSR move_view_up
$860C: 20 16 86            JSR move_view_down
$860F: 20 45 86            JSR move_view_up
$8612: 20 16 86            JSR move_view_down
$8615: 60                  RTS 

$8616: A2 AE       move_view_down LDX #$AE
$8618: BD 09 E0    @next_x LDA bmplineaddr_lo + 9,X
$861B: 85 7E               STA ptr1
$861D: BD C9 E0            LDA bmplineaddr_hi + 9,X
$8620: 85 7F               STA ptr1 + 1
$8622: BD 07 E0            LDA bmplineaddr_lo + 7,X
$8625: 85 7C               STA ptr2
$8627: BD C7 E0            LDA bmplineaddr_hi + 7,X
$862A: 85 7D               STA ptr2 + 1
$862C: A0 B0               LDY #$B0     ;# 11 tiles (22 columns)
$862E: B1 7C       @next_y LDA (ptr2),Y
$8630: 91 7E               STA (ptr1),Y
$8632: 98                  TYA 
$8633: 38                  SEC 
$8634: E9 08               SBC #$08     ;#-
$8636: A8                  TAY 
$8637: D0 F5               BNE @next_y
$8639: 20 4E 08            JSR j_rand
$863C: 30 03               BMI +
$863E: 20 09 A1            JSR j_togglesnd
$8641: CA          +       DEX 
$8642: D0 D4               BNE @next_x
$8644: 60                  RTS 

$8645: A2 00       move_view_up LDX #$00     ;#-
$8647: BD 08 E0    @next_x LDA bmplineaddr_lo + 8,X
$864A: 85 7E               STA ptr1
$864C: BD C8 E0            LDA bmplineaddr_hi + 8,X
$864F: 85 7F               STA ptr1 + 1
$8651: BD 0A E0            LDA bmplineaddr_lo + 10,X
$8654: 85 7C               STA ptr2
$8656: BD CA E0            LDA bmplineaddr_hi + 10,X
$8659: 85 7D               STA ptr2 + 1
$865B: A0 B0               LDY #$B0     ;# 11 tiles (22 columns)
$865D: B1 7C       @next_y LDA (ptr2),Y
$865F: 91 7E               STA (ptr1),Y
$8661: 98                  TYA 
$8662: 38                  SEC 
$8663: E9 08               SBC #$08     ;#-
$8665: A8                  TAY 
$8666: D0 F5               BNE @next_y
$8668: 20 4E 08            JSR j_rand
$866B: 30 03               BMI +
$866D: 20 09 A1            JSR j_togglesnd
$8670: E8          +       INX 
$8671: E0 AE               CPX #$AE
$8673: 90 D2               BCC @next_x
$8675: 60                  RTS 

$8676: C9 43       check_enter_moongate CMP #$43     ;#tile_moongate_full
$8678: F0 01               BEQ +
$867A: 60                  RTS 

			 ; BUG: stack overflow. Entered here via JSR but exit via JMP to load_shrine or cmd_done
$867B: A5 22       +       LDA moon_phase_trammel
$867D: C9 04               CMP #$04     ;#-
$867F: D0 1A               BNE gate_to_gate
$8681: A5 23               LDA moon_phase_felucca
$8683: C9 04               CMP #$04     ;#-
$8685: D0 14               BNE gate_to_gate
$8687: 20 4B 08            JSR j_update_view
$868A: 20 78 08            JSR j_invertview
$868D: A9 09               LDA #$09     ;#sound_spell_effect
$868F: A2 A0               LDX #$A0     ;#-
$8691: 20 54 08            JSR j_playsfx
$8694: A9 1F               LDA #$1F     ;#loc_shrine_sacrifice
$8696: 85 1A               STA current_location
$8698: 4C 83 51            JMP load_shrine

$869B: 20 4B 08    gate_to_gate JSR j_update_view
$869E: A6 23               LDX moon_phase_felucca
$86A0: BD C7 4B            LDA moongate_x,X
$86A3: 85 10               STA player_xpos
$86A5: BD CF 4B            LDA moongate_y,X
$86A8: 85 11               STA player_ypos
$86AA: 20 78 08            JSR j_invertview
$86AD: A9 09               LDA #$09     ;#sound_spell_effect
$86AF: A2 A0               LDX #$A0     ;#-
$86B1: 20 54 08            JSR j_playsfx
$86B4: 20 78 08            JSR j_invertview
$86B7: 20 03 08            JSR j_player_teleport
$86BA: 20 4B 08            JSR j_update_view
$86BD: 20 78 08            JSR j_invertview
$86C0: A9 09               LDA #$09     ;#sound_spell_effect
$86C2: A2 A0               LDX #$A0     ;#-
$86C4: 20 54 08            JSR j_playsfx
$86C7: 20 78 08            JSR j_invertview
$86CA: 4C 1E 62            JMP cmd_done

$86CD: C9 00       is_evil CMP #$00     ;non-monster
$86CF: 10 1B               BPL @not_evil
$86D1: C9 8A               CMP #$8A     ;#tile_seahorse
$86D3: F0 17               BEQ @not_evil
$86D5: C9 90               CMP #$90     ;#tile_rat
$86D7: F0 13               BEQ @not_evil
$86D9: C9 94               CMP #$94     ;#tile_bat
$86DB: F0 0F               BEQ @not_evil
$86DD: C9 98               CMP #$98     ;#tile_spider
$86DF: F0 0B               BEQ @not_evil
$86E1: C9 B4               CMP #$B4     ;#tile_insects
$86E3: F0 07               BEQ @not_evil
$86E5: C9 CC               CMP #$CC     ;#tile_python
$86E7: F0 03               BEQ @not_evil
$86E9: A9 FF               LDA #$FF
$86EB: 60                  RTS 

$86EC: A9 00       @not_evil LDA #$00     ;#-
$86EE: 60                  RTS 

